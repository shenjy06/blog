<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>最大余额法-解决计算占比不等于100的问题</title>
      <link href="/2024/08/18/20240818-%E6%9C%80%E5%A4%A7%E4%BD%99%E9%A2%9D%E6%B3%95-%E8%A7%A3%E5%86%B3%E8%AE%A1%E7%AE%97%E5%8D%A0%E6%AF%94%E4%B8%8D%E7%AD%89%E4%BA%8E100%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2024/08/18/20240818-%E6%9C%80%E5%A4%A7%E4%BD%99%E9%A2%9D%E6%B3%95-%E8%A7%A3%E5%86%B3%E8%AE%A1%E7%AE%97%E5%8D%A0%E6%AF%94%E4%B8%8D%E7%AD%89%E4%BA%8E100%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在使用 <a href="https://echarts.apache.org/en/index.html">Echarts</a> 可视化数据的时候，往往饼图中每块占比加和不等于100%，所以就有了最大余额法。下面是最大余额法的简介：</p><blockquote><p><strong>最大余额方法</strong>（英语：largest remainder method）又称<strong>数额制</strong>、<strong>汉弥尔顿法</strong>（英语：Hamilton method），是比例代表制投票制度下，一种议席分配的方法，相对于最高均数方法。</p><p>这个方法要求候选人透过名单形式参选。每个名单上的候选人数不能超过该选区的议席数。候选人在名单上是有排名顺序的。选民投票时，是投给整个名单，而不是单个候选人。</p><p>投票结束后，会用一个特定的“数额”（见下）去除所有有效票数。每个名单如果得票数达到这个数额的整数倍，就可以获得相应数量的议席。名单上的候选人按照名单上的排名顺序获得议席。</p><p>如果还有剩余的议席没分配完，就会看每个名单超过上一轮数额整数倍的票数（即“余额”）。这些剩余议席会根据各名单的余额大小顺序分配，所以这种方法叫做“最大余额法”。</p><p><a href="https://www.cnblogs.com/CoderSilence/p/16775866.html">https://www.cnblogs.com/CoderSilence/p/16775866.html</a></p></blockquote><h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.github.problem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 最大余额法</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shenjunyu</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LargestRemainderMethod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">88</span>&#125;;</span><br><span class="line">        System.out.println(Arrays.toString(getPercentValue(arr, <span class="number">2</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最大余额法，用于解决百分比不足100%或者超过100%的问题</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">     *            数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> idx</span></span><br><span class="line"><span class="comment">     *            索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> precision</span></span><br><span class="line"><span class="comment">     *            精度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 每一次计算的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">getPercentValue</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> idx, <span class="type">int</span> precision)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ((arr.length - <span class="number">1</span>) &lt; idx) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 求和</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j : arr) &#123;</span><br><span class="line">            sum += j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 10的2次幂是100，用于计算精度。</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">digits</span> <span class="operator">=</span> Math.pow(<span class="number">10</span>, precision);</span><br><span class="line">        <span class="comment">// 扩大比例100</span></span><br><span class="line">        <span class="type">double</span>[] votesPerQuota = <span class="keyword">new</span> <span class="title class_">double</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">val</span> <span class="operator">=</span> arr[i] / sum * digits * <span class="number">100</span>;</span><br><span class="line">            votesPerQuota[i] = val;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 总数,扩大比例意味的总数要扩大</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">targetSeats</span> <span class="operator">=</span> digits * <span class="number">100</span>;</span><br><span class="line">        <span class="comment">// 再向下取值，组成数组</span></span><br><span class="line">        <span class="type">double</span>[] seats = <span class="keyword">new</span> <span class="title class_">double</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; votesPerQuota.length; i++) &#123;</span><br><span class="line">            seats[i] = Math.floor(votesPerQuota[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 再新计算合计，用于判断与总数量是否相同,相同则占比会100%</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">currentSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">double</span> seat : seats) &#123;</span><br><span class="line">            currentSum += seat;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 余数部分的数组:原先数组减去向下取值的数组,得到余数部分的数组</span></span><br><span class="line">        <span class="type">double</span>[] remainder = <span class="keyword">new</span> <span class="title class_">double</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; seats.length; i++) &#123;</span><br><span class="line">            remainder[i] = votesPerQuota[i] - seats[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (currentSum &lt; targetSeats) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">maxId</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; remainder.length; ++i) &#123;</span><br><span class="line">                <span class="keyword">if</span> (remainder[i] &gt; max) &#123;</span><br><span class="line">                    max = remainder[i];</span><br><span class="line">                    maxId = i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 对最大项余额加1</span></span><br><span class="line">            ++seats[maxId];</span><br><span class="line">            <span class="comment">// 已经增加最大余数加1,则下次判断就可以不需要再判断这个余额数。</span></span><br><span class="line">            remainder[maxId] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 总的也要加1,为了判断是否总数是否相同,跳出循环。</span></span><br><span class="line">            ++currentSum;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 这时候的seats就会总数占比会100%</span></span><br><span class="line">        <span class="keyword">return</span> seats[idx] / digits;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最大余额法，用于解决百分比不足100%或者超过100%的问题</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">     *            数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> precision</span></span><br><span class="line"><span class="comment">     *            精度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 按照数组顺序排列的百分比</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span>[] getPercentValue(<span class="type">int</span>[] arr, <span class="type">int</span> precision) &#123;</span><br><span class="line">        <span class="type">double</span>[] result = <span class="keyword">new</span> <span class="title class_">double</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            result[i] = getPercentValue(arr, i, precision);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0.85, 3.42, 5.13, 6.84, 8.55, 75.21]</span><br></pre></td></tr></table></figure><p>完~</p>]]></content>
      
      
      
        <tags>
            
            <tag> 错误笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>惨痛的教训</title>
      <link href="/2024/08/17/20240817-%E6%83%A8%E7%97%9B%E7%9A%84%E6%95%99%E8%AE%AD/"/>
      <url>/2024/08/17/20240817-%E6%83%A8%E7%97%9B%E7%9A%84%E6%95%99%E8%AE%AD/</url>
      
        <content type="html"><![CDATA[<blockquote><p>原文链接：<a href="http://www.incompleteideas.net/IncIdeas/BitterLesson.html">http://www.incompleteideas.net/IncIdeas/BitterLesson.html</a></p></blockquote><p>The Bitter Lesson<br>Rich Sutton<br>March 13, 2019<br>The biggest lesson that can be read from 70 years of AI research is that general methods that leverage computation are ultimately the most effective, and by a large margin. The ultimate reason for this is Moore’s law, or rather its generalization of continued exponentially falling cost per unit of computation. Most AI research has been conducted as if the computation available to the agent were constant (in which case leveraging human knowledge would be one of the only ways to improve performance) but, over a slightly longer time than a typical research project, massively more computation inevitably becomes available. Seeking an improvement that makes a difference in the shorter term, researchers seek to leverage their human knowledge of the domain, but the only thing that matters in the long run is the leveraging of computation. These two need not run counter to each other, but in practice they tend to. Time spent on one is time not spent on the other. There are psychological commitments to investment in one approach or the other. And the human-knowledge approach tends to complicate methods in ways that make them less suited to taking advantage of general methods leveraging computation.  There were many examples of AI researchers’ belated learning of this bitter lesson, and it is instructive to review some of the most prominent.</p><p>In computer chess, the methods that defeated the world champion, Kasparov, in 1997, were based on massive, deep search. At the time, this was looked upon with dismay by the majority of computer-chess researchers who had pursued methods that leveraged human understanding of the special structure of chess. When a simpler, search-based approach with special hardware and software proved vastly more effective, these human-knowledge-based chess researchers were not good losers. They said that ``brute force” search may have won this time, but it was not a general strategy, and anyway it was not how people played chess. These researchers wanted methods based on human input to win and were disappointed when they did not.</p><p>A similar pattern of research progress was seen in computer Go, only delayed by a further 20 years. Enormous initial efforts went into avoiding search by taking advantage of human knowledge, or of the special features of the game, but all those efforts proved irrelevant, or worse, once search was applied effectively at scale. Also important was the use of learning by self play to learn a value function (as it was in many other games and even in chess, although learning did not play a big role in the 1997 program that first beat a world champion). Learning by self play, and learning in general, is like search in that it enables massive computation to be brought to bear. Search and learning are the two most important classes of techniques for utilizing massive amounts of computation in AI research. In computer Go, as in computer chess, researchers’ initial effort was directed towards utilizing human understanding (so that less search was needed) and only much later was much greater success had by embracing search and learning.</p><p>In speech recognition, there was an early competition, sponsored by DARPA, in the 1970s. Entrants included a host of special methods that took advantage of human knowledge—knowledge of words, of phonemes, of the human vocal tract, etc. On the other side were newer methods that were more statistical in nature and did much more computation, based on hidden Markov models (HMMs). Again, the statistical methods won out over the human-knowledge-based methods. This led to a major change in all of natural language processing, gradually over decades, where statistics and computation came to dominate the field. The recent rise of deep learning in speech recognition is the most recent step in this consistent direction. Deep learning methods rely even less on human knowledge, and use even more computation, together with learning on huge training sets, to produce dramatically better speech recognition systems. As in the games, researchers always tried to make systems that worked the way the researchers thought their own minds worked—they tried to put that knowledge in their systems—but it proved ultimately counterproductive, and a colossal waste of researcher’s time, when, through Moore’s law, massive computation became available and a means was found to put it to good use.</p><p>In computer vision, there has been a similar pattern. Early methods conceived of vision as searching for edges, or generalized cylinders, or in terms of SIFT features. But today all this is discarded. Modern deep-learning neural networks use only the notions of convolution and certain kinds of invariances, and perform much better.</p><p>This is a big lesson. As a field, we still have not thoroughly learned it, as we are continuing to make the same kind of mistakes. To see this, and to effectively resist it, we have to understand the appeal of these mistakes. We have to learn the bitter lesson that building in how we think we think does not work in the long run. The bitter lesson is based on the historical observations that 1) AI researchers have often tried to build knowledge into their agents, 2) this always helps in the short term, and is personally satisfying to the researcher, but 3) in the long run it plateaus and even inhibits further progress, and 4) breakthrough progress eventually arrives by an opposing approach based on scaling computation by search and learning. The eventual success is tinged with bitterness, and often incompletely digested, because it is success over a favored, human-centric approach.</p><p>One thing that should be learned from the bitter lesson is the great power of general purpose methods, of methods that continue to scale with increased computation even as the available computation becomes very great. The two methods that seem to scale arbitrarily in this way are search and learning.</p><p>The second general point to be learned from the bitter lesson is that the actual contents of minds are tremendously, irredeemably complex; we should stop trying to find simple ways to think about the contents of minds, such as simple ways to think about space, objects, multiple agents, or symmetries. All these are part of the arbitrary, intrinsically-complex, outside world. They are not what should be built in, as their complexity is endless; instead we should build in only the meta-methods that can find and capture this arbitrary complexity. Essential to these methods is that they can find good approximations, but the search for them should be by our methods, not by us. We want AI agents that can discover like we can, not which contain what we have discovered. Building in our discoveries only makes it harder to see how the discovering process can be done.</p><p>惨痛的教训<br>里奇·萨顿<br>2019年3月13日<br>70年的AI研究中最关键的教训在于，利用计算力的通用方法最终是最有效的，而且优势巨大。最终的原因在于摩尔定律，或者更确切地说，是计算单位成本持续呈指数级下降这一概括。大多数AI研究以代理可用的计算力恒定为前提开展（在这种情况下，利用人类知识将成为提高性能的唯一途径之一），但随着时间的推移，略长于一个典型的研究项目，计算力将不可避免地大幅提升。为了寻求能在短期内产生差异的改进，研究人员会寻求利用其对领域的专业知识，但从长远来看，唯一重要的事情便是利用计算力。这两者无需互相抵触，但在实践中，它们往往会如此。花在一个方面的时间就不是花在另一个方面的时间。对一种方法或另一种方法的投资都有心理上的承诺。而基于人类知识的方法往往会以一种让它们不太适合利用通用计算方法的方式使方法复杂化。AI研究人员迟迟才吸取这一惨痛教训的例子很多，回顾其中一些最突出的例子很有教育意义。</p><p>在电脑象棋中，1997年击败世界冠军卡斯帕罗夫的方法基于大规模、深入的搜索。当时，大多数寻求利用人类对象棋特殊结构的理解的方法的电脑象棋研究人员对此感到沮丧。当一种基于搜索的更简单方法与特殊硬件和软件被证明更有效时，这些基于人类知识的象棋研究人员并不是好的失败者。他们说，“蛮力”搜索这一次可能赢了，但这不是一种通用策略，无论如何，这不是人类下象棋的方式。这些研究人员希望赢得胜利的方法是基于人类输入的，当他们没有做到时，他们感到失望。</p><p>在电脑围棋中可以看到类似的研究进展模式，只不过推迟了20年。最初的巨大努力都花在利用人类知识，或围棋的特殊功能来避免搜索上面，但是一旦能够大规模有效地应用搜索，所有这些努力都证明与问题无关，甚至更糟。同样重要的是利用自我博弈学习来获取值函数（这在许多其他游戏中甚至在象棋中都是如此，即使学习并未在1997年首次击败世界冠军的程序中发挥重要作用）。通过自我博弈学习和学习通常就像搜索一样，它使得大量的计算得以应用。搜索和学习是AI研究中利用大量计算最重要的两类技术。在电脑围棋中，与电脑象棋一样，研究人员最初的努力是利用人类理解（这样所需的搜索就更少），而只有在很久以后，通过采用搜索和学习才取得了更大的成功。</p><p>在语音识别方面，DARPA在20世纪70年代发起了早期竞赛。参赛者包括大量利用人类知识的特殊方法—关于单词、音素、人类声道等的知识。另一方面是本质上更具统计学性质且执行更多计算的新方法，这些方法基于隐马尔可夫模型（HMM）。同样，统计学方法胜过了基于人类知识的方法。这导致所有自然语言处理发生了重大变化，在几十年间，统计学和计算逐渐主导了这一领域。深度学习在语音识别中的兴起是这一持续方向上最近的一步。深度学习方法对人类知识的依赖更少，并结合在大量训练集上进行学习，使用更多计算，以生成大大改善的语音识别系统。与游戏中一样，研究人员总是试图创建按照研究人员认为自己大脑工作的方式工作的系统—他们试图将这种知识纳入自己的系统—但最终证明适得其反，并且浪费了研究员大量时间，而通过摩尔定律，大量的计算已经可用，并且找到了将它们用作有用的方法。</p><p>在计算机视觉中，出现了类似的模式。早期的计算机视觉方法将其视为搜索边缘，或广义圆柱体，或根据SIFT特征。但如今，所有这些都被抛弃了。现代深度学习神经网络仅使用卷积和某些种类的不变性的概念来执行更好的性能。</p><p>这是一个重要的教训。作为一个领域，我们仍然没有透彻地学习到这一点，因为我们正在继续犯同样的错误。为了看到这一点并有效抵制它，我们必须理解这些错误的吸引力。我们必须吸取这样的惨痛教训：从长远来看，建立在我们认为自己思考的方式上是行不通的。这一惨痛教训基于以下历史观察：1) AI研究人员经常试图将知识构建到其代理中，2) 从短期来看，这总是会有所帮助，并且会让研究人员在个人上得到满足，但3) 从长远来看，它会达到平台期，甚至会阻碍进一步的进展，4) 最终的突破进展最终来自通过搜索和学习来扩展计算的基础方法。最终的成功带着些许苦涩，并且常常无法完全消化，因为它是对一种偏好的以人为中心的方法的成功。</p><p>从这一惨痛教训中应该吸取的一件事是通用方法的巨大力量，即使在可用计算量变得非常大的情况下，通用方法仍能继续随着计算的增加而扩展。似乎以这种方式任意扩展的两种方法是搜索和学习。</p><p>从这一惨痛教训中学到的第二个一般性观点是，心灵的实际内容极其、无可救药地复杂；我们应该停止试图找到思考大脑内容的简单方法，比如思考空间、物体、多重代理或对称性的简单方法。所有这些都是任意、内在复杂的外部世界的一部分。它们不应该是内置的，因为它们的复杂性是无穷的；相反，我们应该只内置能够找到并捕捉这种任意复杂性的元方法。对于这些方法至关重要的是，它们能找到很好的近似值，但对它们的搜索应该通过我们的方法，而不是通过我们。我们想要的是像我们一样可以发现的AI代理，而不是包含我们发现内容的AI代理。构建我们的发现只会让我们更难看到发现过程是如何完成的。</p><p>完~</p>]]></content>
      
      
      
        <tags>
            
            <tag> 经典文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux服务器上定位哪行代码导致CPU飙高</title>
      <link href="/2024/05/09/20240509-Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E5%AE%9A%E4%BD%8D%E5%93%AA%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AF%BC%E8%87%B4CPU%E9%A3%99%E9%AB%98/"/>
      <url>/2024/05/09/20240509-Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E5%AE%9A%E4%BD%8D%E5%93%AA%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AF%BC%E8%87%B4CPU%E9%A3%99%E9%AB%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Linux 服务器上的 Java 程序 CPU 持续飙高，如何排查？</p></blockquote><h3 id="第一步-首先使用-top-命令查看所有进程-top"><a href="#第一步-首先使用-top-命令查看所有进程-top" class="headerlink" title="第一步 首先使用 top 命令查看所有进程 top"></a>第一步 首先使用 top 命令查看所有进程 <code>top</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><h3 id="第二步-定位Java进程中-CPU-最高的线程"><a href="#第二步-定位Java进程中-CPU-最高的线程" class="headerlink" title="第二步 定位Java进程中 CPU 最高的线程"></a>第二步 定位Java进程中 CPU 最高的线程</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -Hp pid</span><br></pre></td></tr></table></figure><blockquote><p>获取线程id</p></blockquote><h3 id="第三步-将线程ID转换成十六进制"><a href="#第三步-将线程ID转换成十六进制" class="headerlink" title="第三步 将线程ID转换成十六进制"></a>第三步 将线程ID转换成十六进制</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;0x%x&quot;</span> &#123;上一步中获取的线程<span class="built_in">id</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="第四步-使用-jstack-工具跟踪堆栈定位代码"><a href="#第四步-使用-jstack-工具跟踪堆栈定位代码" class="headerlink" title="第四步 使用 jstack 工具跟踪堆栈定位代码"></a>第四步 使用 <code>jstack</code> 工具跟踪堆栈定位代码</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstack &#123;pid&#125; | grep &#123;第三步中获取到的线程<span class="built_in">id</span>的十六进制表示&#125; -A 5</span><br></pre></td></tr></table></figure><p>完~</p>]]></content>
      
      
      
        <tags>
            
            <tag> 问题排查 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI Agent</title>
      <link href="/2024/04/25/20240425-AI%20Agent/"/>
      <url>/2024/04/25/20240425-AI%20Agent/</url>
      
        <content type="html"><![CDATA[<blockquote><p><code>Agent</code> 的未来,人工智能即将彻底改变您使用计算机的方式,并颠覆整个软件行业</p></blockquote><p>如今，我和保罗·艾伦创立微软时一样，仍然深爱着软件。但是，尽管软件在此后的数十年里已取得了很大改善，但在很多方面，软件仍然相当愚笨。</p><p>若要在计算机上执行任何任务，您必须告诉设备使用哪个应用程序。您可以使用 Microsoft Word 和 Google Docs 起草商务提案，但它们无法帮助您发送电子邮件、分享自拍、分析数据、安排聚会或购买电影票。即使是最好的网站，也无法完全了解您的工作、个人生活、兴趣和关系，以及使用此信息为您做事的能力有限。这是如今只有其他人才能做到的，例如亲密的朋友或个人助理。</p><p>在未来五年内，这种情况将发生彻底改变。您不必为不同的任务使用不同的应用。您只需用日常语言告诉设备您想要做什么即可。根据您选择与之共享的信息量，该软件将能够做出个性化响应，因为它会深入了解您的生活。在不久的将来，任何在线人士都将拥有由远超现今技术水平的人工智能驱动的个人助理。</p><p>这种软件 - 能够对自然语言做出反应并基于其对用户的了解来完成许多不同任务的软件 - 称为 <code>Agent</code>。我几乎已经思考了 <code>Agent</code> 将近 30 年，并在我的 1995 年的著作《<strong>未来之路</strong>》中写到了它们，但由于人工智能的进步，它们最近才变得实用。</p><blockquote><p><a href="https://www.gatesnotes.com/The-Road-Ahead-after-25-years">https://www.gatesnotes.com/The-Road-Ahead-after-25-years</a></p></blockquote><p><code>Agent</code> 不仅将改变每个人与计算机的交互方式。它们还将颠覆软件行业，带来自我们从输入命令转为点击图标以来的计算机领域最伟大的革命。</p><h3 id="每个人都可以使用的个人助理"><a href="#每个人都可以使用的个人助理" class="headerlink" title="每个人都可以使用的个人助理"></a>每个人都可以使用的个人助理</h3><p>一些批评者指出，软件公司之前提供过此类产品，但用户并未完全接受它们。（人们仍然拿我们添加到 Microsoft Office 中并在随后弃用的数字助理 <strong>Clippy</strong> 开玩笑。）为什么人们会使用 <code>Agent</code> ？</p><blockquote><p><a href="https://edition.cnn.com/2021/07/15/tech/microsoft-clippy-emoji/index.html">https://edition.cnn.com/2021/07/15/tech/microsoft-clippy-emoji/index.html</a></p></blockquote><p>答案是它们会大幅改善。您将能够与它们进行细致入微的对话。它们将更加个性化，并且不会局限于写信等相对简单的任务。Clippy 与 <code>Agent</code> 之间的共同点与转盘电话与移动设备之间的共同点一样多。</p><p>如果您需要，<code>Agent</code> 将能够帮助您完成所有活动。获准跟踪您的在线互动和真实位置后，它将对您从事的人员、地点和活动形成强大的理解。它会了解您的个人关系、工作关系、爱好、偏好和日程。您可以选择它何时以何种方式介入提供帮助或要求您做出决定。</p><blockquote><p>“Clippy 是个机器人，不是个 agent。”</p></blockquote><p>要了解 <code>agent</code> 将带来的巨大改变，我们不妨将它们与当今可用的 AI 工具进行比较。其中大部分是机器人。它们的局限性只局限于一个应用，通常只有当你输入某个特定的词语或寻求帮助时才会介入。由于它们不记得你上次如何使用它们，因此它们不会变得更好或学习你的任何偏好。Clippy 是一个机器人而不是一个 <code>agent</code>。</p><p><code>agent</code> 更聪明。它们是主动的，可以在在你要求之前就提出建议。它们跨应用完成任务。由于它们会记住你的活动并在你的行为中识别意图和模式，因此它们会随着时间的推移而改进。基于这些信息，它们会提供它们认为你需要的东西，但你始终做出最终的决定。</p><p>想象一下，你想计划一次旅行。一个旅行机器人将识别符合你预算的酒店。一个 <code>agent</code> 会知道你的旅行时间，并且根据它对你是否总是尝试新目的地或喜欢反复返回同一位置的了解，它将能够提出建议的地点。当被问及时，它会根据你的兴趣和冒险倾向为你推荐一些活动，并且它会在你喜欢的餐厅类型中预订座位。如果你想要这种深度个性化的计划，你现在需要付费给一个旅行社并花时间告诉他们你的需求。</p><p>AI <code>agent</code> 最令人兴奋的影响在于它们将使当今对大多数人来说过于昂贵的服务变得大众化。它们将在四个领域产生特别大的影响：医疗保健、教育、生产力以及娱乐和购物。</p><h3 id="医疗保健"><a href="#医疗保健" class="headerlink" title="医疗保健"></a>医疗保健</h3><p>如今，人工智能在医疗保健领域的主要作用是帮助处理管理任务。例如， Abridge、Nuance DAX 和 Nabla Copilot 可以在医生问诊时捕捉音频，然后写成备忘，以便医生审阅。</p><blockquote><p><a href="https://www.abridge.com/">https://www.abridge.com/</a>, 加深对医疗保健的理解,最值得信赖的临床对话人工智能平台 - 直接集成在 Epic 内。</p></blockquote><blockquote><p><a href="https://www.nuance.com/healthcare/dragon-ai-clinical-solutions/dax-copilot/explore-dax-for-clinicians">https://www.nuance.com/healthcare/dragon-ai-clinical-solutions/dax-copilot/explore-dax-for-clinicians</a>.</p></blockquote><blockquote><p><a href="https://www.nabla.com/">https://www.nabla.com/</a>, Nabla 是领先的环境人工智能助手，可减少医生的倦怠并改善患者护理。</p></blockquote><p>真正的转变会出现在 <code>agent</code> 能够帮助患者进行基础分类、获取有关如何处理健康问题的建议以及决定是否需要寻求治疗之时。这些 <code>agent</code> 还可以帮助医护人员做出决策并提高工作效率。（Glass Health 等应用程序已经可以分析患者总结，并提出医生可考虑的诊断建议。）帮助患者和医护人员将对贫困国家的人们特别有利，在这些国家许多人根本无法看医生。</p><blockquote><p><a href="https://glass.health/">https://glass.health/</a>, AI 驱动临床决策支持, 我们利用 AI 平台为临床医生提供帮助，以开发鉴别诊断和起草临床计划。</p></blockquote><p>这些临床 <code>agent</code> 的推出将比其他 <code>agent</code> 慢，因为正确处理事情关乎生死。人们需要看到证据证明健康 <code>agent</code> 总体上有益，即使它们并不完美，会犯错。当然，人类也会犯错，而无法获得医疗保健也是一个问题。</p><blockquote><p>“所有需要心理健康的美国军人中，有一半都没有得到。”</p></blockquote><p>心理健康护理是 <code>agent</code> 将向几乎每个人提供服务的另一个示例。如今，每周的治疗课程似乎是一种奢侈。但有大量未得到满足的需求，以及许多本来可以从治疗中受益的人无法获得治疗。例如，兰德公司发现，所有需要心理健康护理的美国军人中，有一半没有得到治疗。</p><blockquote><p><a href="https://www.rand.org/health-care/projects/navigating-mental-health-care-for-veterans/barriers-to-care.html">https://www.rand.org/health-care/projects/navigating-mental-health-care-for-veterans/barriers-to-care.html</a></p></blockquote><p>接受过心理健康方面良好训练的 AI  <code>agent</code> 将使治疗变得更加经济实惠且更容易获得。Wysa 和 Youper 是这里较早出现的两个聊天机器人。但 <code>agent</code> 将更加深入。如果你选择与心理健康 <code>agent</code> 分享足够的信息，它将了解你的生活史和你的关系。它会在你需要时随时可用，而且它永远不会变得不耐烦。甚至，在征得你的允许后，它还可以通过智能手表监控你对治疗的身体反应——比如当你谈论与老板之间的问题时，你的心跳开始加速——并建议你何时去看人类治疗师。</p><blockquote><p><a href="https://www.wysa.com/">https://www.wysa.com/</a>, Wysa 经过临床验证的人工智能可在护理的第一步提供即时支持，并为需要更多服务的人提供人工指导。改变您的团队和家庭的支持感受。</p></blockquote><blockquote><p><a href="https://www.youper.ai/">https://www.youper.ai/</a>, 用于心理保健的富有同理心、安全且经过临床验证的聊天机器人。Youper 安全且经过临床验证的人工智能已经为超过 200 万人的心理健康提供了支持。</p></blockquote><h3 id="教育"><a href="#教育" class="headerlink" title="教育"></a>教育</h3><p>几十年来，我对软件在让老师的工作变得更容易和帮助学生学习方面的所有方式感到兴奋。它不会取代老师，但它会补充他们的工作——为学生个性化工作，并让老师从文书工作和其他任务中解脱出来，以便他们可以在工作中最重要的部分投入更多时间。这些变化终于开始以一种戏剧性的方式发生了。</p><p>现阶段最先进的是 Khanmigo，这是一个由可汗学院创建的基于文本的机器。它可以辅导学生学习数学、科学和人文科学——例如，它可以解释二次公式并创建数学问题以便练习。它还可以帮助老师做一些事情，例如编写课程计划。我一直是 Sal Khan 工作的粉丝和支持者，最近让他参加了我的播客来谈论教育和人工智能。</p><blockquote><p><a href="https://www.khanacademy.org/khan-labs">https://www.khanacademy.org/khan-labs</a></p></blockquote><p>但是，基于文本的机器只是第一波浪潮——智能体将开启更多学习机会。</p><p>例如，很少有家庭可以支付一位与学生一对一工作、补充他们课堂工作的家教。如果智能体能够捕捉到使一位家教有效的原因，那么他们将为每个人解锁这种补充性指导。如果一位家教智能体知道一个孩子喜欢 Minecraft 和泰勒·斯威夫特，它将用 Minecraft 教导他们如何计算形状的体积和面积，并用泰勒的歌词教导他们有关讲故事和押韵规则。这种体验将更加丰富——例如，带有图像和声音——并且比今天的基于文本的家教更个性化。</p><h3 id="生产力"><a href="#生产力" class="headerlink" title="生产力"></a>生产力</h3><p>这个领域已经有很多竞争了。微软正在将其 Copilot 纳入 Word、Excel、Outlook 和其他服务中。谷歌正在使用采用 Bard(现在的Gemini) 及其生产力工具的助理来做类似的事情。这些副驾驶可以做很多事情——比如将书面文档变成幻灯片组，使用自然语言回答有关电子表格的问题，以及总结电子邮件线程，同时代表每个人的观点。</p><p> <code>agent</code> 将做得更多。拥有一个 <code>agent</code> 就像有一个专门帮助你完成各种任务的人，并且如果你愿意，他们可以独立完成任务。如果你有一个商业想法， <code>agent</code> 将帮助你写一份商业计划，为其创建一个演示文稿，甚至生成你的产品可能是什么样子的图像。公司将能够让 <code>agent</code> 随时供其员工咨询，并参加每次会议，以便他们可以回答问题。</p><blockquote><p>“如果你的朋友刚做完手术，你的客服将会提供送花选项，并可以为你订花。”</p></blockquote><p>无论您是否在办公室工作，您的 <code>agent</code> 将能够以如今的个人助理支持高管的方式帮助您。如果您的朋友刚接受完手术，您的 <code>agent</code> 会主动提出送花，并能为您订花。如果您告诉它您想与您旧的大学室友叙旧，它将会与室友的 <code>agent</code> 安排相聚时间，并且就在您到达之前，它会提醒您室友最年长的孩子刚进入当地大学读大学。</p><h3 id="娱乐及购物"><a href="#娱乐及购物" class="headerlink" title="娱乐及购物"></a>娱乐及购物</h3><p>人工智能现在可以帮助您挑选新电视并推荐电影、书籍、节目和播客。Likewise，我投资的一家公司最近推出了 Pix，它允许您提问（“我喜欢哪些罗伯特·雷德福的电影，我可以在哪里观看？”），然后根据您过去喜欢的内容进行推荐。Spotify 拥有一位人工智能 DJ，它不仅会根据您的偏好播放歌曲，还会与您交谈，甚至可以叫您名字。</p><blockquote><p><a href="https://likewise.com/">https://likewise.com/</a></p></blockquote><blockquote><p><a href="https://newsroom.spotify.com/2023-02-22/spotify-debuts-a-new-ai-dj-right-in-your-pocket/">https://newsroom.spotify.com/2023-02-22/spotify-debuts-a-new-ai-dj-right-in-your-pocket/</a></p></blockquote><p> <code>agent</code> 不会仅仅进行推荐；他们还会帮助您对推荐采取行动。如果您想购买相机，您的 <code>agent</code> 会为您阅读所有评论，总结它们，提出建议，并在您做出决定后为您下单。如果您告诉您的 <code>agent</code> 您想观看《星球大战》，它会知道您是否订阅了正确的流媒体服务，如果没有，它会主动为您注册。如果您不知道自己想看什么，它会提出定制建议，然后找出如何播放您选择的电影或节目。</p><p>您还可以获得根据您的兴趣量身定制的新闻和娱乐信息。CurioAI 可以针对您询问的任何主题创建一个定制播客，它展示了未来发展趋势。</p><blockquote><p><a href="https://curio.io/home">https://curio.io/home</a>, 最好的新闻报道，旁白，跟上世界的步伐，不受屏幕影响。聆听来自 30 多家世界领先出版物的精选文章，以及原创节目和播客。</p></blockquote><h3 id="科技行业的冲击波"><a href="#科技行业的冲击波" class="headerlink" title="科技行业的冲击波"></a>科技行业的冲击波</h3><p>简而言之， <code>agent</code> 将能够帮助处理几乎任何一项活动和人生的任何一个领域。这将对软件业务和社会带来深远的影响。</p><p>在计算机产业中，我们谈论的是平台——构建应用和服务的技术。Android、iOS 和 Windows 均为平台。 <code>agent</code> 将成为下一个平台。</p><blockquote><p>“为了创建一个新应用或服务，你只需告诉你的 <code>agent</code> 你要什么。”</p></blockquote><p>开发新的应用程序或服务时无需了解如何编写代码或进行图形设计。你只需告诉你的 <code>agent</code> 你需要什么。它可以编写代码、设计应用程序的外观和感觉、创建徽标以及将应用程序发布到在线商店。 OpenAI 本周发布的 GTP 为非开发人员容易创建和分享自己的助手提供了未来见解。</p><p> <code>agent</code> 将影响我们使用软件以及编写软件的方式。它们将取代搜索网站，因为它们更擅长查找信息并为你总结信息。它们将取代许多电子商务网站，因为它们可以找到最优惠的价格，并且不会仅限于少数供应商。它们将取代文字处理器、电子表格和其他生产力应用程序。当今相互独立的企业——搜索广告、带广告的社交网络、购物、生产力软件——将成为一项业务。</p><p>我认为没有任何一家公司能够主导 <code>agent</code> 业务——将会有许多不同的 AI 引擎可用。如今， <code>agent</code> 嵌入在文字处理器和电子表格等其他软件中，但最终它们将独立运行。虽然一些 <code>agent</code> 可以免费使用（并受广告支持），但我认为你将为大多数 <code>agent</code> 付费，这意味着公司将有动力让 <code>agent</code> 为你工作，而不是为广告客户工作。如果仅今年开始从事人工智能工作的公司数量有任何迹象，那么竞争将异常激烈，这将使 <code>agent</code> 变得非常廉价。</p><p>但在上面描述的复杂 <code>agent</code> 成为现实之前，我们需要解决许多有关该技术及其使用方法的问题。之前我曾撰写过有关 AI 引发的问题的文章，因此我将在此专门关注 <code>agent</code> 。</p><h3 id="技术难题"><a href="#技术难题" class="headerlink" title="技术难题"></a>技术难题</h3><p>目前还没有人弄清楚 <code>agent</code> 的数据结构会是什么样子。要创建个人 <code>agent</code> ，我们需要一种新型数据库，可以捕捉到您所有的兴趣和关系的细微差别，并且可以在维护您隐私的同时快速召回信息。我们已经看到了一些存储信息的新方法，例如向量数据库，对于存储机器学习模型生成的数据来说，这些方法可能更好。</p><p>另一个悬而未决的问题是人们将与多少个 <code>agent</code> 进行互动。您的个人 <code>agent</code> 会与您的治疗师 <code>agent</code> 和您的数学老师分开吗？如果是这样，您希望他们在何时合作，在何时各司其职？</p><blockquote><p>“如果您的 <code>agent</code> 需要与您确认，它会和您通话或出现在您的手机上。”</p></blockquote><p>如何与你的 <code>agent</code> 互动？公司正在探索多种选择，包括应用程序、眼镜、吊坠、胸针，甚至是全息图。所有这些都是有可能的，但我认为人机交互领域的第一个重大突破将是耳塞。如果你的 <code>agent</code> 需要与你联系，它会与你通话或显示在你的手机上。（“你的航班延误了。你要等一等，还是我可以帮你重新预订？”）如果你愿意，它将监测进入你耳朵的声音，并通过屏蔽背景噪音、放大难以听清的语音，或使听懂口音较重的人的讲话更轻松来增强它。</p><p>其他挑战也有。目前还没有允许 <code>agent</code> 相互对话的标准协议。成本需要降低，这样每个人都能负担得起 <code>agent</code> 。以一种能给你正确答案的方式提示 <code>agent</code> 需要变得更容易。我们需要防止出现幻觉，特别是在健康等准确性非常重要的领域，并确保 <code>agent</code> 不会因其偏见而伤害他人。并且我们不希望 <code>agent</code> 能够做他们不应该做的事情。（尽管我更担心的是人类罪犯出于恶意目的使用 <code>agent</code> ，而不是流氓 <code>agent</code> 。）</p><h3 id="隐私和其他重大问题"><a href="#隐私和其他重大问题" class="headerlink" title="隐私和其他重大问题"></a>隐私和其他重大问题</h3><p>随着这一切的发展，在线隐私和安全问题将变得比现在更加紧迫。您希望能够决定 <code>agent</code> 可以访问哪些信息，这样您就可以确信您的数据仅与您选择的人和公司共享。</p><p>但是，您与 <code>agent</code> 共享的数据归谁所有，您如何确保它被适当地使用？没有人愿意开始看到与他们告诉他们的治疗师 <code>agent</code> 有关的广告。执法部门可以使用你的 <code>agent</code> 作为对你 不利的证据吗？你的 <code>agent</code> 什么时候会拒绝做一些可能对你或其他人有害的事情？谁来选择内置在 <code>agent</code> 中的价值观？</p><p>还有个问题是您的 <code>agent</code> 应该共享多少信息。假设你想见一个朋友：如果你的 <code>agent</code> 与他们的 <code>agent</code> 交谈，你不想让它说，“哦，她周二会见其他朋友，不想带上你。”而且，如果您的 <code>agent</code> 帮助您编写工作电子邮件，它需要知道它不应使用有关您的个人信息或来自之前的工作的专有数据。</p><p>其中许多问题已经成为科技行业和立法者的首要任务。我最近与其他技术领导者一起参加了参议员查克·舒默组织并由许多美国参议员参加的关于人工智能的论坛。我们分享了有关这些和其他问题的想法，并谈到了立法者制定强有力的法律的必要性。</p><p>但其他问题不会由公司和政府决定。例如， <code>agent</code> 可能会影响我们与朋友和家人的互动方式。今天，您可以通过记住他们生活中的细节向某人展示您关心他们——比如他们的生日。但是，当他们知道您的 <code>agent</code> 可能会提醒您并负责送花时，这对他们来说会有意义吗？</p><p>在遥远的未来， <code>agent</code> 甚至可能迫使人类面对关于目的的深刻问题。想象一下， <code>agent</code> 变得如此出色，以至于每个人都可以拥有高质量的生活，而无需像以前那样多工作。在这样的未来，人们会用他们的时间做什么？当 <code>agent</code> 有了所有的答案后，还会有人愿意接受教育吗？当大多数人都拥有大量空闲时间时，你能拥有一个安全而繁荣的社会吗？</p><p>但我们还有很长的路要走。与此同时， <code>agent</code> 正在到来。在未来几年内，他们将彻底改变我们在线上和线下的生活方式。</p><h3 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接"></a>原文链接</h3><p>[1]<a href="https://www.gatesnotes.com/AI-agents">https://www.gatesnotes.com/AI-agents</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> AI Agent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sam Altman的创业手册</title>
      <link href="/2024/03/31/Sam%20Altman%E7%9A%84%E5%88%9B%E4%B8%9A%E6%89%8B%E5%86%8C/"/>
      <url>/2024/03/31/Sam%20Altman%E7%9A%84%E5%88%9B%E4%B8%9A%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>中文版原文：<a href="https://jxp73q7qjsg.feishu.cn/docx/WCNZdKDa4o2eUrxK5ElcfBXEnah">https://jxp73q7qjsg.feishu.cn/docx/WCNZdKDa4o2eUrxK5ElcfBXEnah</a></p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在YC，我们花了很多时间给创始人们提供建议。尽管一对一的提出建议永远是最有效的，但是我们认为，如果我们能够把这些给YC系创始人们的建议里面最通用的一部分提炼出来变成一个创业手册，也许能够帮助我们扩大YC的规模。</p><p>随后我们发现，这本手册应该分享给所有人。这本手册是为新手创业者们准备的。对于很多已经熟知YC创业方法论的人来说，大部分内容都不会感到陌生。我们的目的是把这些建议集合起来。</p><p><strong>作为一家创业公司，你的目标是：做出用户们喜爱的产品</strong>。如果你做到了这一点，你就要开始搞明白<strong>怎么大量的获客</strong>。但是“做出用户们喜欢的产品”这一点是极其关键的，想想今天真正成功的公司，他们都是从一个备受早期用户喜欢的产品开始的。他们的早期用户是如此喜欢他们的产品，以至于会到处分享给其他人。</p><p>如果你无法做出用户们喜欢的产品，那么你会失败。如果你试图欺骗自己，假装你的用户喜欢你的产品，而实际上他们并不喜欢，那么你也会失败。</p><p>有非常非常多自认为可以跳过这一步的创业公司，但是他们都死了。</p><p>做一个少数用户真心热爱的产品，要比做一个很多用户有些喜欢的产品要好很多。虽然你获得的正面感受的总量可能是一致的，但是让人们从喜欢到爱上你的产品非常困难。而获取更多的用户则没那么难。</p><p>这里对于选择创业的创始人们有个警示：创业真的非常痛苦！我们从YC创始人们那里得到的最一致的反馈就是，创业比他们想象的要困难的多。因为他们没创业前对于创业公司所需要做的工作和强度是没有完整的概念的。通常情况来说，加入一个早期但是处于火箭般上升速度的创业公司，会是财务上好的多的选择。</p><p>另一方面，开启一个创业公司对你的职业生涯来说也没有那么大的风险。如果你真的很擅长技术，那么即使你失败了你也能找到工作。大多数人都没有那么擅长评估风险。<strong>我个人认为，比起创业，更有风险的选择是，当你有一个真正热爱的想法或者项目，但是你却停留在了一个安全，轻松，不尽如人意的工作中</strong>。</p><p>想要做个成功的创业公司，你需要：一个非常好的想法（包括非常大的市场），一个非常好的团队，一个非常好的产品，和非常好的执行。</p><h2 id="第一部分：想法"><a href="#第一部分：想法" class="headerlink" title="第一部分：想法"></a>第一部分：想法</h2><p>我们问YC系公司的第一个问题是，你们在创造什么？为什么？</p><p>我们想听到一个清晰，简洁的回答。</p><p>这个问题既是对于创始人的评估，也是对于创业想法本身的评估。<strong>作为一个创始人，能够清晰的思考和沟通是非常重要的</strong>：在<strong>招聘，融资，销售等各方面</strong>你都需要这个能力。并且通常来说，<strong>清晰的想法更容易传播，而复杂的想法几乎总是思维混乱或者假问题的标志。如果你的想法没有办法让至少一部分人在他们第一次听到的时候感到真正的兴奋，那么这是个很糟糕的事情</strong>。</p><p>另一个我们会问的问题：谁是最迫切渴望的需要这个产品的人？<br>最好的回答，你自己就是目标用户。第二好的回答，你极其理解你的目标用户。</p><p>如果一个公司已经有了用户，我们会问<strong>用户数量是多少</strong>，并且<strong>增长</strong>的速度有多快？我们会想弄清楚为什么用户数量没有增长的那么快。我们最想搞清楚的问题是，用户们是否真的热爱这款产品。通常来说热爱一个产品意味着用户们会自发的推荐这个产品给朋友们使用，不需要任何诱导。我们还会问公司是否产生了收入，如果没有，为什么？</p><p>如果公司还没有用户，我们会设法确定首先要构建的最小功能，以验证这个假设。也就是说，如果从理想的用户体验倒推，我们会努力找出应该从哪个关键点开始。</p><p><strong>测试一个想法的方法是，1.发布它并观察结果，2.尝试销售它</strong>（例如，在编写任何代码之前尝试获得一份意向购买合同）。前者更适用于To C类的想法（因为用户的口头调研可能是不诚实的），后者则更适用于To B类的想法（如果一家公司告诉您他们会购买某个产品，那就去开发这个产品）。</p><p>具体来说，如果您是一家To B公司，我们会问你的第一个问题是：你现在在开发的产品是否有来自客户的意向购买合同？</p><p>而对于大多数生物技术和硬科技公司来说，测试一个想法的方法是首先与潜在客户交流，然后找出你可以首先构建的技术子集中最小的部分。</p><p>当你获得了用户的反馈的时候，及时调整你的想法非常重要。深入的了解你的用户，是衡量你的想法，打造伟大的产品，做出伟大公司的至关重要的部分。</p><p>正如上文所说，做一家创业公司非常艰难。你需要非常长的时间，和持之以恒的高强度努力。创始人和员工们都需要有一种使命感去支撑他们。所以我们会问创始人，为什么会选择做这样一家公司。</p><p>我们还会问公司将如何在未来成为独占市场的垄断者。虽然有很多不同的说法，但我们使用的是彼得·泰尔的观点。当然，我们并不希望你的公司采取不道德的手段来对待竞争对手。相反，我们在寻找那些随着规模扩大而越来越强大并且难以模仿的企业。</p><p>最后，我们会问市场相关的问题。我们会询问市场目前的规模、增长速度以及为什么它在十年内会变得很大。我们努力了解市场为何会快速增长，以及为什么这对于初创公司来说是一个好市场。我们喜欢那些刚刚开始的重大技术变革，而大多数人尚未意识到这一点。——大公司在应对这样的情况时往往表现不佳。有点反直觉的是，最佳策略是在一个小市场中占据很大的份额。</p><p>一些其他关于想法的内容：</p><p>我们非常喜欢崭新的东西，而不是衍生出来的东西。大多数真正的巨型公司都是从一些根本性的新事物开始的。（新事物约等于比之前好十倍的东西）。如果同时有十家公司有相同的计划，并且要做的东西非常像一些已经存在的东西，我们会比较怀疑。</p><p>一个非常重要的反直觉的原因是，做全新的和困难的东西，要比做老的和容易的事情更简单。因为前者人们愿意帮助和加入你。后者不会。</p><p>最好的想法是那种，听起来很糟糕，但是实际上是很好的。因此，你不需要对你的想法过于保密。如果你的想法真的是个很好的主意，那么它听上去很可能并不值得抄袭。即使你的想法真的听上去很值得被抄袭，但是这个世界上愿意真正去付出很多努力将一个好想法打造成一个好公司的人是非常非常少的。相反，如果你告诉人们你正在做的事情，大家可能会提供帮助。</p><p>说到告诉人们你的想法。虽然好的想法需要让一部分人第一次听到时真的很激动。但是几乎所有的人都会告诉你，你的想法很糟糕。也许他们是对的。也许他们不擅长评估创业想法。也许他们仅仅是嫉妒。无论什么理由，这件事情都会经常发生。你当然会很受伤，即使你觉得你能接受，你依然会感到痛苦。你需要尽快的建立自信，无视黑子们的评价。不管你有多成功，黑子们永远都会有。</p><p>如果你还没有一个想法，但是你想创业该怎么办？我们的建议是也许不应该这么做。先有想法，再通过创业来实现你的想法是好得多的路径。</p><p>我们曾经做过一个实验，投资了一些非常优秀的，但是还没有想法的创始团队。我们希望他们在获得资金之后能够找到一个有前途的想法。</p><p>其中的每一家都失败了。我认为其中的一部分原因是因为，好的创始人通常都会有很多（甚至是过多）好的想法。但更大的问题是，一旦你有了一个创业公司，你就必须赶紧想出一个想法，而且因为这已经是一家正式的公司，所以你的想法不能太疯狂。你最终会得到一些听起来很合理但是缺乏创新的想法。这就是转型的危险所在。</p><p>所以，最好不要过于努力地强迫自己想出创业点子。相反，了解很多不同的事物。锻炼自己发现问题的能力，关注那些看似低效的事物和重大技术变革。投身于你感兴趣的项目。刻意与聪明、有趣的人为伍。在某个时刻，灵感就会涌现出来。</p><h2 id="第二部分：一个非常好的团队"><a href="#第二部分：一个非常好的团队" class="headerlink" title="第二部分：一个非常好的团队"></a>第二部分：一个非常好的团队</h2><p>平庸的团队不会建立伟大的公司。我们最看重的事情之一，就是创始人的能力。当我以前做一些比较靠后阶段的投资时，我会同样看重创始人所雇佣的员工们的能力。</p><p>什么是伟大的创始人？最重要的特质包括不可阻挡、决心、强悍和足智多谋。智力和热情也非常重要。这些特质比经验以及所谓的“语言X和框架Y的专业知识”要重要得多。</p><p>我们注意到，最成功的创始人通常是那些工作中容易相处、让人感到“无论面对什么情况都能完成任务”的人。有时候，凭借纯粹的意志力也可以取得成功。</p><p>好的创始人具备许多看似相互矛盾的特点，其中一个重要的特点是既要对公司核心以及使命的强烈信念，又要在其他方面非常灵活，愿意不断学习新的事物。</p><p>最好的创始人们会反应异常灵敏，这是一种反应了果断、专注、注意力和完成事情的能力的指标。那些很难沟通的创始人几乎都是糟糕的创业者。沟通是一种非常重要的创始人技能。说实话，我认为这是那些很少被提到的创业技能里，最重要的一个。</p><p>科技型创业公司，需要至少有一个创始人能够把产品和服务搭建出来，也需要至少一个创始人（或者通过学习可以成为）非常擅长销售和与用户交流的人。这两个人可以是一个人。</p><p>当你选择创业合伙人时，要考虑以下几点——这可是你最重要的决定之一，但通常人们都随随便便就做了。</p><p>你最好选一个你已经很熟悉的人，而不是在某个创业派对上刚认识的人。多了解一些信息，你才能更好地评估是否能和这个人合作，毕竟选错人可是要命的。另外，有时候创业公司的价值可能会暂时下降很多，这时如果你和合伙人创业之前已经很熟悉，你们不会轻易放弃，因为你们不想让对方失望，所以你们会一起克服困难。创业合伙人们闹掰是一个非常常见的的创业公司死亡的原因。并且我们经常看到这个事情发生在那些为了创业而相遇的合伙人身上。</p><p>最好的情况，是有一个很好的合伙人。第二好的情况是只有你一个人。最差的情况，是你有了一个不好的合伙人。如果事情不对，你们应该迅速分手。</p><p>关于股权的问题，要早日解决，因为随着时间推移，分配股权的讨论只会变得越来越复杂。最好尽早设定股权比例，近似平等是最好的，不过如果只有两个创始人，最好让其中一人多持有一点，以防万一在合伙人之间产生分歧时出现僵局。</p><h2 id="第三部分：一个非常好的产品"><a href="#第三部分：一个非常好的产品" class="headerlink" title="第三部分：一个非常好的产品"></a>第三部分：一个非常好的产品</h2><p>这里有一个成功的秘诀：拥有一个非常好的产品。这是所有伟大公司的唯一共同点。</p><p>如果你没有办法做出来一个让用户爱上的产品，你迟早会失败。虽然创始人们总想绕过这一点，但是创业是没有捷径的。</p><p>一个非常好的产品是长期来看唯一有效的增长方式。因为即使你用了一些别的增长手段，但是最终你会发现，随着你的体量变大，所有的其他手段都会失效，只有“人们真的想要用你的产品”不会失效。</p><p>这是理解那些超级成功的公司的最重要的事情。你可以想想，所有最成功的科技公司，他们都做到了这一点。</p><p>你需要在你的公司里搭建一个“产品改进引擎”。你应该和你的用户交谈，看着他们使用你的产品，找出哪些部分是需要改进的，从而让你的产品变得更好。重复去做这件事。这应该是你的公司里最重要的事情，并且由他来驱动所有别的事情。如果你真的能每周让你的产品变好5%，你会有巨大的复合增长。</p><p>这个循环越快，你的公司就会做的越好。在YC，我们会告诉创业者，他们应该打造产品并且和用户交谈，除此之外几乎没有什么别的事情了，当然别忘了吃饭，睡觉，锻炼，和爱的人相处。</p><p>你需要和你的用户离得非常近，来确保你的循环正确。一定要站在他们旁边盯着他们使用你的产品。记住他们说的话，和他们实际的操作。你不应该在你和用户之间放任何的人，你需要自己去做销售，客户支持，等等其他。</p><p>尽最大努力的去理解你的用户，尝试真正的找出他们需要的东西，他们在哪里，和是什么让他们真正心动。</p><p>“Do things that don’t scale”已经成为了创业公司们的口头禅。你需要一次次的去手动招募初始用户（Pinterest的创始人在咖啡馆里去请求陌生人使用他们的产品。），然后你需要去为他们创作他们想要的东西。许多创始人讨厌这个部分，想要通过媒体去发布他们的产品。但是这招基本永远不会有效。手动的招募用户，然后把这个产品做的非常好，这样你的用户们会分享给他们的朋友。</p><p>你也需要把事情分成非常小的部分，快速迭代和调整。不要尝试计划的太远，也绝对不要把所有的东西都集中到一个大的公共版本中。你需要从非常简单的东西开始。越小越好。并且比你想象的更快速的推出产品。事实上，简单的东西几乎都是好的。你需要永远试图把你的产品和公司都搞得尽可能简单。</p><p>对于一些有问题的公司，我们经常问的问题有：你的用户们会多次使用你的产品吗？你的用户们对你的产品很狂热吗？如果你的公司消失了，你的用户会不会真的感到沮丧？你的用户是否在自发的向其他人推荐你？如果你是一个ToB的公司，你是否有至少10个付费客户？</p><p>如果这些答案是否，那么产品不够好就是根本性的原因。我对一个公司发展缓慢的大多数的借口都很怀疑。因为最常见也最真实的原因就是产品做的不够好。</p><p>当创业公司不确定他们的产品下一步该怎么做，或者怀疑他们的产品是不是足够好。我们会让他们去和用户聊天。这当然不是每一次都有效（用户可能会告诉福特想要更快的马）。但是这确实是非常经常有效的办法。事实上，如果你的公司里有任何的意见不统一，你都应该去和你的用户聊一聊。</p><p>最好的创始人们经常看起来过度关注一些产品的细节，即使可能看上去不重要。但是这招真的有效。顺便说一句，产品包括所有用户和公司产生交互的东西。你需要有很好的客服，很好的销售代表等等。</p><p>记住，如果你没有做出来一个非常好的产品，什么也救不了你。</p><h2 id="第四部分：非常好的执行。"><a href="#第四部分：非常好的执行。" class="headerlink" title="第四部分：非常好的执行。"></a>第四部分：非常好的执行。</h2><p>虽然做出一个非常好的产品是必须的，但是你的任务仍然没有结束。你需要把这个非常好的产品，变成一个非常好的公司。并且你必须自己去做这件事。雇佣一个职业经理人去做这些工作的幻想极为普遍，同时也是极为失败的。你不能把工作长期外包给别人。</p><p>虽然听起来很明显，但是你必须要开始挣钱了。现在是思考如何实现盈利的好时机。</p><p>作为CEO，你唯一通用的职责就是确保公司获胜。即使你是创始人，也许有很多缺点不适合担任CEO，但只要你雇用的人能够弥补你的技能缺陷并充分发挥他们的能力，你仍然可以做好这项工作。与那些经验丰富、拥有高级商学院学位的CEO相比，你可能没有他们那样的技能，但你对用户更了解、你有更敏锐的产品直觉，并且对公司的成长更有热情。</p><h2 id="第四部分：非常好的执行-增长Part"><a href="#第四部分：非常好的执行-增长Part" class="headerlink" title="第四部分：非常好的执行-增长Part"></a>第四部分：非常好的执行-增长Part</h2><p>持续增长和发展势头是成功执行的关键。良好的增长（只要不是以亏本出售商品为代价的增长）可以解决所有问题，而缺乏增长只能通过增长来解决。如果你们在增长，你就会感觉自己在取得源源不断胜利，大家也会感到开心。如果你在增长，就会有不断的新角色和新责任，人们感觉自己的职业生涯在不断进步。而如果你没有增长，你们就会感觉自己正在输，人们会感到不满意并离开。如果你没有增长，人们就会争权夺利和相互指责。</p><p>没有增长的公司里面充满着沮丧的氛围，创始人和员工都非常的疲惫。很难说这究竟有多让人难受。</p><p>关于执行，最重要的指导是：永远不要失去增长的动能。但是你要怎么做到这一点？</p><p>我认为最重要的方法是，让保持增长变成你的第一优先级。CEO关注什么指标，整个公司就会去努力实现什么指标。</p><p>这里有几个例子。</p><p>Airbnb的创始人把他们的增长目标直观的写在纸上，并且贴的到处都是。贴在他们的冰箱，桌子，厕所上。如果他们达到了这个数字，那无事发生，如果没有达到，这会是他们所有人谈论的唯一事情。</p><p>扎克伯格曾经说过，Facebook最重要的创新之一，就是当增长遇到瓶颈的时候，建立了增长团队。FB的增长团队曾经是（也许现在还是）整个公司最有声望的团队。每个人都知道他们有多重要。</p><p>列一个清单记下所有阻碍增长的事项，并与公司成员一起探讨如何更快地增长。如果你知道限制增长的因素，你自然会想到如何解决它们。<br>对于你在考虑要不要做的任何事情，问你自己“这是优化增长的最佳方式吗？”例如，参加一个会议通常不是优化增长的最佳方式，除非你预期在会议上能够大量销售。</p><p>极度透明化内部数据指标（和财务状况）是一件好事。出于某种原因，创始人们总是非常害怕这种透明化。但这对于让整个公司专注于增长非常有好处。公司员工关注指标的程度似乎与公司业绩良好程度直接相关。如果你隐藏指标，人们就很难专注于它们。</p><p>谈到数据指标，不要用虚荣指标骗自己。一个非常常见的错误是专注在注册用户而不是留存用户上。但是留存是和获取新用户一样重要的事情。</p><p>建立内部的节奏以保持增长势头也很重要。你希望“有节奏的”做事，即不断推出新功能、获得新客户、招聘新员工、实现营收里程碑、建立新合作伙伴等，这些可以在内部和外部进行宣传。</p><p>你应该设定有野心但又拼尽全力勉强可以达到的目标，并每月检查进展情况。庆祝每一个胜利！时刻在内部讨论战略，告诉所有人你从客户那里听到的信息等等。你分享的信息越多，无论是好是坏，你的公司就会做得越好。</p><p>创始人们常常会陷入一些陷阱。其中一个陷阱是，如果公司的增长速度非常快，但似乎所有事情都异常混乱和低效，每个人都会担心事情会失控。实际上，这种情况几乎很少发生（Friendster是我可以指出的最近一家因技术债务而死亡的初创公司的例子）。出人意料的是，事实证明，如果你的增长速度很快，但一切都没有得到优化，那么你只需要修复这些问题，你就能获得更多的增长！我的最喜欢的投资是那些增长非常快但是没怎么优化的公司——它们被严重低估了。</p><p>另一个相关的陷阱是过度关注太远的未来问题——例如，“我们在大规模情况下应该如何解决问题？”正确的做法是，等到需要解决这个问题时再去考虑。很多初创公司会在争论这个问题时浪费太多的时间，而不是专注于解决当前的问题。一个好的经验法则是只考虑当前规模的 10 倍的情况。大多数早期的初创公司应该将“Do things that dont scale”挂在墙上记在心里。举个例子，好的创业公司总是有非常好的客服体验在早期，而糟糕的创业公司会担心这个会拖累他们的盈利能力并且不可规模化。但是很好的客户服务能够带来热情的早期用户，随着你的产品的优化，你会越来越不需要客服，因为你知道哪些问题是用户们被经常困住的地方，并且你解决了这些问题。（顺便说一句，有非常好的客户服务是一件特别重要的事情。）</p><p>这种策略的一个重要问题是——“Do things that dont scale”并不能成为你逃避盈利的借口。在初期，拥有不好的单位经济指标可能是可以接受的，但是你必须有一个很好的理由来说明为什么单位经济指标在以后会得到改善。</p><p>另一个陷阱是，即使产品的增长率很好，但绝对数字不理想，这会使你感到沮丧。不过人类在对指数增长的直觉上非常不准确。提醒你的团队这一点，以及所有巨型公司都是从小规模开始增长的。</p><p>一些最大的陷阱是，很多创始人们认为可以带来增长的事情，实际上几乎从来不起作用，但却会占用大量时间。常见的例子是与其他公司的协议和“重磅新闻发布会”。你要明白它们实际上没有用过。相反，像所有伟大的公司一样，打造深受用户喜爱的产品，手动招募初始用户，然后测试许多增长策略（广告、推荐计划、销售和市场营销等），投入真正对你有效的策略。问你的用户在哪里能够找到更多像他们一样的人。</p><p>记住，销售和市场营销并不是坏词。虽然如果没有出色的产品，它们都无法拯救你，但是它们都可以帮助你大幅加速增长。如果你是一家ToB公司，很可能需要提高你们在这方面的能力。</p><p>不要害怕销售。至少团队的一个创始人必须擅长让人们使用你的产品并为其付费。</p><p>Alex Schultz曾发表过一场关于To C公司增长的演讲，非常值得观看。</p><p>针对To B产品，我认为应该追踪每月的收入增长，记住销售周期较长意味着最初的几个月可能会表现不佳。（将初创公司作为最初的客户，可能会解决这个问题。）</p><h2 id="第四部分：非常好的执行-专注和高强度"><a href="#第四部分：非常好的执行-专注和高强度" class="headerlink" title="第四部分：非常好的执行-专注和高强度"></a>第四部分：非常好的执行-专注和高强度</h2><p>如果只能用两个词来总结我的运营建议，那么我会选择“专注”和“高强度”。这些词非常适用于我所见过的最优秀的创始人。</p><p>他们会全身心地专注于产品和增长，不会试图做所有事情。实际上，他们会频繁地说“不”（这很难，因为创业者通常都喜欢尝试新事物）。</p><p>通常来说，在你掌握第一件事情之前，不要让你的公司开始做下一件事情。我所知道的任何一家伟大的公司都不会同时做很多事情。他们通常会坚定地专注于一件事情，并一直执着的做下去。</p><p>你能做的事情比你想象中的要少得多。初创公司倒闭的常见原因之一就是做了太多错误的事情。因此，设定优先级至关重要，但也非常困难。（除了为公司设定优先级外，为自己设定战略的优先级同样重要。我发现对我个人而言，每天列出约3个主要任务和30个次要任务的清单，并编制一份年度所有的目标清单，是最有效的方法。）</p><p>优秀的创始人不会做太多大项目，但他们会非常专注地做任何一件事情。他们非常快速地完成任务，决策能力很强，这在创业公司中非常重要，因为你会收到许多冲突的建议。这些建议有时会引导你采取不同的方法，有时则是错误的建议。优秀的创始人会聆听所有的建议，然后快速做出自己的决策。</p><p>请注意，这并不意味着要对所有事情都进行强烈的投入——这是不可能的。你必须选择正确的事情。正如Paul Buchheit所说，要找到以10%的努力获得90%的价值的方法。市场并不关心你有多努力，它只关心你是否做了正确的事情。</p><p>优秀的创始人应该同时追求产品质量和快速推进，但这非常困难。这也是优秀创始人最显著的特征之一。</p><p>从未有一位行动很慢的创始人获得真正的成功。</p><p>你并不比别的创业公司特殊。你需要保持专注并且快速推进。即使是那些开发火箭和核反应堆的公司也可以快速行动。失败的公司常常觉得自己很特别，觉得不用快速行动。</p><p>当你找到有效的方法，要继续前进，不要被其他事情分心。不要松懈，继续保持。</p><p>不要被初期的成功所迷惑，不要花费过多的时间在社交活动和个人品牌上。创始人在初期取得成功后，要么继续埋头苦干，要么沉迷于成为一个创业明星。</p><p>拒绝参加会议和媒体宣传很难——这些活动让人感觉很好，特别是看到别的创业者受到关注时，更是难以抗拒参加的诱惑。但这种局面不会持续太久。媒体最终会发现谁是真正的赢家，如果你的公司真的成功了，你会拥有比你想象的更多的关注。那些早期有着自己公关团队的创业者（是的，真的有）几乎全部失败了。</p><p>长期来看，专注和高强度的做事会取得胜利。（Charlie Rose曾经说过，世界上的事情是通过专注和人际关系的结合完成的，这句话一直深深地印在我的脑海里。）</p><h2 id="第四部分：非常好的执行-CEO的工作"><a href="#第四部分：非常好的执行-CEO的工作" class="headerlink" title="第四部分：非常好的执行-CEO的工作"></a>第四部分：非常好的执行-CEO的工作</h2><p>之前我提到了 CEO 的唯一普遍工作描述是确保公司获得胜利。虽然这是正确的，但我想更具体地谈一下 CEO 应该如何分配时间。</p><p>CEO 必须：1）为公司设定愿景和战略，2）向每个人传递公司的使命愿景价值观，3）招聘和管理团队，特别是在自己不擅长的领域，4）筹集资金，5）设定执行质量标准。</p><p>除了这些职责，你要找到你最喜欢的那部分业务，保持持续参与。就像我在一开始提到的那样，这是一份高强度的工作。如果你成功了，它将在你的生活中占据你无法想象的程度——公司将时刻在你的脑海中。极度专注和高强度的工作意味着你很难平衡工作和生活。你对家庭或者别的重要事情的关心都不会超过对公司的。你必须时刻保持在线，有许多决定只有你能够做，无论你在授权方面多么出色。</p><p>你应该努力保持对团队和外部世界的高度敏感，始终保持清晰的战略和优先级，出现在所有重要的事情，并快速执行（特别是在别人搞不定的事情上）。你还应该采取“不惜一切代价”的态度——将有大量的不愉快的工作要做。如果团队看到你这样身先士卒，他们也会紧随其后。</p><p>管理好你自己的心态既非常困难，也非常重要。虽然这已经成为一个陈词滥调，但它确实是真实的——情绪上的高低波动非常剧烈，如果你不知道如何保持相对平稳，你就会遇到困难。作为一名CEO是孤独的。所以与其他CEO建立联系非常重要，这样当你遇到巨大的困难的时候，至少有个人能打电话（YC的一个很重要的作用是偶然发现的，为创始人们提供相互支持的同伴）。</p><p>一个成功的创业公司需要非常长的时间——肯定比大多数创始人在一开始想的时间更长。你不能将其视为通宵达旦的工作。你必须吃得好、睡得好、锻炼身体。你必须花时间与家人和朋友相处。你还需要在你真正热爱的领域工作——只有这样才能支撑你高强度的工作十年。</p><p>你会对着深渊嚼玻璃渣——灾难的多样性和严重性会让你感到惊讶。你的工作是在微笑中修复它们并安慰你的团队，告诉他们一切都会好起来的。通常情况下，事情并没有看上去那么糟糕，但有时确实非常糟糕。无论如何，你需要继续前进，继续成长。</p><p>作为CEO，你没有借口可以找。你会遇到很多不好和不公平的事情。但不要对自己，尤其是不要对团队说“如果我们有更多的钱”或“如果我们有另一个工程师”这样的话。要么找到一种解决方法，要么想办法绕过它。喜欢找借口的人几乎都失败了，尤其是创业公司的CEO。你可以沮丧一分钟，然后你要意识到需要你来想出解决方案。“你总能想出一些办法来解决任何问题”你会希望别人这么描述你。</p><p>你要扭曲别人眼中的现实，但是要对自己保持诚实，你要让别人相信你是未来10年最重要的公司，但你自己应该对可能出现的一切问题保持警惕。</p><p>要坚持。大多数创始人放弃创业得太快或者过快地转向下一个产品。如果情况不太好，找出问题的根本原因，并确保你解决了它。作为成功的初创企业CEO，坚持不懈是非常重要的（尽管你也不想顽固到无法理喻的地步——这是另一个明显的矛盾，需要做出艰难的判断）。</p><p>要保持乐观。虽然可能有一位极为悲观的CEO存在于世界上，但我还没有遇到过这个人。你要相信，并且要让整个公司感染这种信念：未来会更好，并且你们公司在其中发挥了重要作用。这在理论上很容易，但在面临现实的短期挑战下却很困难。不要失去对长期愿景的追求，并相信日复一日的困难终将被年复一年的进步所替代。</p><p>你最重要的工作之一是定义使命和价值观。这可能有些老套，但在早期就值得去做。你在开始时灌输的任何东西通常在多年后仍然有效。随着公司的发展，每一个新人都需要首先认同公司的使命和价值观，然后再去向其他人灌输。因此，早期就要把文化，价值观和使命写下来。</p><p>另一个我想重弹的老调是：建立公司有些类似于建立一种宗教。如果人们无法将日复一日所做的事情与他们关心的更崇高的目标联系起来，他们就不会做得很出色。我认为在Y Combinator网络中，Airbnb在这方面做得最好，强烈建议你查看他们的文化和价值观。</p><p>CEO们经常犯的一个错误是在非常成熟的领域创新，而不是在产品和解决方案方面进行创新。例如，许多创始人认为他们应该花时间去找一些人力资源、市场营销、销售、融资、公关等方面的新方法。这几乎总是不好的。这些方面找到成熟有效的做法即可，把你的创造力集中在你正在建立的产品或服务上。</p><h2 id="第四部分：非常好的执行-招聘和管理"><a href="#第四部分：非常好的执行-招聘和管理" class="headerlink" title="第四部分：非常好的执行-招聘和管理"></a>第四部分：非常好的执行-招聘和管理</h2><p>招聘是你最重要的工作之一，也是建立伟大公司的关键（而不是建立伟大产品）。</p><p>我关于招聘的第一个建议是先不要招聘。在Y Combinator与我们合作的最成功的公司通常会等待很长的一段时间，然后才开始招聘。员工是昂贵的，员工增加组织复杂性和沟通成本。有些事情你可以和联合创始人说，但是不能在员工在场时说。员工还会增加惯性——团队中的人越多，改变方向就越难。不要从你的员工数量来衡量你的自我价值。</p><p>最优秀的人才有很多机会。他们想加入成功的团队。如果你没有任何东西，那么很难招聘到他们。一旦你明显取得成功，他们会想要加入你的团队。</p><p>值得重复的是，优秀的人有很多选择，而你需要优秀的人才能建立一个伟大的公司。在股权、信任和责任方面要慷慨。要努力去争取那些你认为自己可能招不到的人。记住，你想雇佣的那些人如果愿意，他们可以自己创业。</p><p>当你处于招聘模式时（即从获得PMF到永远），你应该将约25%的时间用于招聘。至少一个创始人，通常是CEO，需要在招聘方面非常出色。这是大多数CEO最常花时间的活动。大家都说CEO应该花很多时间招聘，但在实践中，只有最好的CEO才能做到。这可能说明了一些东西。</p><p>不要在招聘人才的质量上妥协。每个人都知道这一点，但在迫切需要的时候，每个人都会妥协。每个人都会后悔，有时甚至会差点毁掉公司。好人和坏人都有感染力，如果你从平庸的人开始，平均水平通常不会向上趋势。那些最初雇佣平庸员工的公司几乎永远不会恢复。相信自己对人的直觉。如果你有疑虑，那么答案就是否定的。</p><p>不要雇佣性格消极的人。他们不适合早期创业公司，因为整个世界每天都会预测你的失败，所以整个团队要团结在一起并且坚定的相信你们会取得成功。</p><p>对于几乎所有的职位，重视素质而不是经验。寻找具有真正智慧和完成过很多事情的人。寻找你喜欢的人——你们将会在一起度过很多时间，而且经常处于紧张的情况下。对于你不认识的人，试着在他们全职加入之前一起做个项目。</p><p>努力锻炼自己成为一个很好的管理者。这对大多数创始人来说是很困难和反直觉的。但这很重要。找到可以帮助你提升管理能力的导师。如果你不擅长管理，你会很快失去员工，如果你不能留住员工，即使你是世界上最好的招聘人员，也毫无意义。大多数关于成为一个好的管理者的原则都已经有很好的讨论了，不过我要提到比较少见的一点“不要个人英雄主义”。大多数初次担任管理者的人都会在某个时候试图自己做所有事情，并变得对员工无法交流。这通常以一场灾难告终。绝对不要进入这种模式，你可以推迟项目以获得一个运作良好的团队。</p><p>谈到管理，努力让每个人都在同一个办公室里。由于某些原因，创业公司总是在这方面做出妥协。但几乎所有最成功的创业公司最初都是在一起工作的。我认为远程工作对于较大的公司可能很有效，但对于创业公司来说，这不是取得巨大成功的秘诀。</p><p>最后，要快速解雇不合适的员工。每个人都知道这个原则，但却没有人去做。但我觉得我还是应该说一下。同时，无论他们的工作能力有多强，也要解雇那些有毒的人。文化是由你雇佣、解雇和提拔的人定义的。<br>我写了一篇文章，里面更多细节。</p><h2 id="第四部分：非常好的执行-竞争对手"><a href="#第四部分：非常好的执行-竞争对手" class="headerlink" title="第四部分：非常好的执行-竞争对手"></a>第四部分：非常好的执行-竞争对手</h2><p>关于竞争对手，简单说一下：竞争对手是创业公司的杯弓蛇影。创业者们认为竞争对手是导致99%的创业公司死亡的罪魁祸首。但99%的创业公司死于自杀，而不是被竞争对手击败。相反，应该关注所有内部问题。如果你失败了，很可能是因为你没有做出一个伟大的产品和/或没有建立一个伟大的公司。</p><p>99%的情况下，你应该忽略竞争对手。特别是在竞争对手筹集大量资金或在媒体上大肆宣传时更应该忽略他们。不要担心竞争对手，直到他们用一个真正发布的产品打败你。新闻发布比编写代码更容易，而编写代码又比制作出一个伟大的产品更容易。用亨利·福特的话说：“真正应该担心的竞争对手是那些从不关心你，却一直在提高自己业务的人。”</p><p>每个巨型公司在小的时候都面临着比你现在面临的更严重的竞争威胁，它们都度过了难关。总会有对策。</p><h2 id="第四部分：非常好的执行-挣钱"><a href="#第四部分：非常好的执行-挣钱" class="headerlink" title="第四部分：非常好的执行-挣钱"></a>第四部分：非常好的执行-挣钱</h2><p>Oh Yes，谈到赚钱，你需要想办法实现这一点。<br>简短来说，你必须让人们付给你的钱比你提供产品/服务的成本更多。由于某些原因，人们总是忘记考虑自己的成本这个部分。</p><p>如果你有一个免费的产品，不要试图通过购买用户来增长。对于靠广告变现的企业来说，这非常困难。你需要做出人们愿意与他们的朋友分享的东西。</p><p>如果你有一个每个客户终身价值（LTV）低于500美元的付费产品，通常你负担不起销售费用。尝试使用不同的用户获取方法，如SEO/SEM，广告，邮件等，但要尝试在3个月内还清客户获取成本（CAC）。</p><p>如果你有一个每个客户LTV高于500美元（对你净收益而言）的付费产品，通常你负担得起直接销售费用。首先尝试自己销售产品以了解哪些方法有效。《Hacking Sales》是一本有用的书。</p><p>无论如何，尽可能快地实现“泡面盈利”，即赚足够的钱，让你们可以靠吃泡面维持生计。当你达到这个目标时，你就掌握自己的命运，不再受投资者和金融市场的任意摆布。</p><p>密切关注你的现金流。尽管听起来难以置信，但我们已经多次看到创始人在没有意识到自己正在用完钱的情况下，就把钱用光了（参考保罗·格雷厄姆的文章）。</p><h2 id="第四部分：非常好的执行-融资"><a href="#第四部分：非常好的执行-融资" class="headerlink" title="第四部分：非常好的执行-融资"></a>第四部分：非常好的执行-融资</h2><p>大多数创业公司在某个时候会去融资。</p><p>你应该在需要资金或在有很好的条款的情况下融资。注意不要失去你的节俭的感觉或者开始用金钱来解决问题。资金不足可能是不好，但是资金过多几乎总是不好的。</p><p>成功筹集资金的秘诀是拥有一个好的公司。创始人为了融资而做的所有其他的刻意优化，可能只占5%的重要性。投资者正在寻找的是那些无论他们是否投资都将非常成功的公司，但是外部资本可以加速其增长。成功的量级非常重要——因为投资者的回报主要取决于大型成功案例，如果投资者相信你有100%的机会创造一个价值1000万美元的公司，但几乎没有机会建立一个更大的公司，即使估值非常低，他/她也可能不会投资。你需要一直向投资人解释，为什么你可能会取得巨大的成功。</p><p>投资者受到两种恐惧的驱使，一种是错过下一个谷歌，另一种是担心在回顾时因为显而易见的愚蠢而做出的错误决策的损失。（对于最好的公司，他们同时担心这两种情况。）</p><p>当你的公司状态不足以吸引资本时，试图融资是一个坏主意。你将浪费时间并损失声誉。如果你筹集资金的过程很艰难，不要感到沮丧。许多最好的公司都面临这个问题，因为最好的公司往往在一开始看起来不好（并且它们几乎总是不时尚的）。当投资者拒绝你的时候，相信他们的否定，但不要相信他们的理由。记住，除了“是”的回答，其他的回答都是“否定”的——投资者有一种精妙的能力，可以让否定听起来很像是“或许是”。</p><p>并行的进行融资非常重要——不要按顺序列出你最喜欢的投资者清单。让投资者行动的方式是让他们担心其他投资者夺走他们的机会。</p><p>把融资视为必要的恶，尽快完成。一些创始人会迷上融资；这肯定不好。最好只让一个创始人去做它，这样公司不会停滞不前。</p><p>记住，大多数VC对大多数行业并不了解。数据是最有说服力的。</p><p>虽然情况正在发生改变，但大多数投资者（Y Combinator是一个著名的例外）很不幸仍然需要通过你们双方认识的人的介绍才会认真考虑你的项目。</p><p>坚持干净的条款（复杂的条款会逐轮恶化），但不要过度优化，特别是在估值上。估值是一种可以和别人对比的东西，所以创始人喜欢争取最高估值。但是少一些估值也没关系。</p><p>第一笔资金是最难获得的，因此将精力集中在获得第一笔资金上，通常意味着将注意力集中在最爱你的人身上。始终拥有多个计划，其中一个是不筹集任何资金，并且根据兴趣灵活调整——如果你可以好好利用更多的资金，并且以合理的条件可用，那么可以考虑接受这笔钱。</p><p>成为好的推销员的一个重要关键是使你的故事尽可能清晰易懂。当然，最重要的关键是真正拥有一个好的公司。有很多关于如何在路演中包含什么的想法，但至少你需要有：使命、问题、产品/服务、商业模式、团队、市场和市场增长率以及财务状况。</p><p>记住，每一轮融资的门槛都会变高很多。如果你在种子轮只是一个引人注目的演讲者，那么当你进行A轮融资时，你会发现这种策略行不通。</p><p>好的投资者确实能够为公司带来很大的价值，而不好的投资者则会给公司带来很大的负面影响。大多数投资者处于中间状态，既不会增加也不会减少价值。只投入少量资金的投资者通常对你没有任何帮助（例如那些参与派对式轮融资的投资者）。</p><p>伟大的董事会成员是公司除了用户以外的最佳外部约束机制。而外部约束机制的价值超出了大多数创始人的想象。为了得到一个非常投入的伟大的董事会成员，可以接受较低的估值。</p><p>我认为PG的这篇文章是关于融资最好的文章。</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>请记住，至少有一千人拥有很多伟大的想法，但只有其中一个会真正获得成功。这一切归根结底是因为执行。这是一个艰难的过程，每个人都希望跳过执行将“想法”转化为“成功”，但迄今为止还没有人找到。</p><p>因此，你所需要的只是一个伟大的想法、一个伟大的团队、一个伟大的产品和出色的执行。</p><p>这实在是太简单了！；）</p><p>感谢 Paul Buchheit, Erica Carpenter, Brian Chesky, Adam D’Angelo, Drew Houston, Justin Kan, Matt Krisiloff, Aaron Levie, Gabriel Leydon, Jessica Livingston, Dustin Moskovitz, David Rusenko and Colleen Taylor for contributing thoughts to this.</p><blockquote><p>From 海松：<br>翻译本文，作为我对即刻创业社区，中文创业社区，以及YC的一点致敬。感谢大家喜爱。<br>原文地址：<a href="https://playbook.samaltman.com/">https://playbook.samaltman.com/</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 创业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024年的Go微服务框架</title>
      <link href="/2024/03/30/2024%E5%B9%B4%E7%9A%84Go%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/"/>
      <url>/2024/03/30/2024%E5%B9%B4%E7%9A%84Go%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>哪个框架是最适合你的呢？</p></blockquote><p>Go 作为一种流行的编程语言不断增长，现在已经成为2024年构建云原生微服务应用程序的常见选择。Go 甚至进入了 <a href="https://www.tiobe.com/tiobe-index/">TIOBE 编程语言排行榜的前十名</a>。</p><p>尽管 Go 在历史上并没有强烈使用框架的文化，但已经有一些框架得到了确立，如今开发人员应该考虑它们以提高生产力。</p><p>然而，做出正确的选择可能具有挑战性，因此在本文中我们将介绍主要框架并比较功能、关键用例和潜在缺点。</p><h2 id="Go-微服务框架：概述"><a href="#Go-微服务框架：概述" class="headerlink" title="Go 微服务框架：概述"></a>Go 微服务框架：概述</h2><p>这里是本文中包含的不同框架的高级概述，这些框架根据对各种用例和功能的内置支持水平进行比较。</p><table><thead><tr><th></th><th>Encore</th><th>GoMicro</th><th>Go Kit</th><th>Gin</th></tr></thead><tbody><tr><td>描述</td><td>微服务框架和基础设施 SDK</td><td>微服务框架</td><td>Go库集合</td><td>Web框架</td></tr><tr><td>使用案例</td><td>事件驱动、分布式系统</td><td>事件驱动、分布式系统</td><td>分布式系统</td><td>高性能的HTTP API</td></tr><tr><td>支持协议</td><td>HTTP</td><td>HTTP,gRPC</td><td>HTTP,gRPC</td><td>HTTP</td></tr><tr><td>低模板</td><td>✅︎</td><td>✅︎</td><td>✅︎</td><td>✅︎</td></tr><tr><td>认证</td><td>✅︎</td><td>✅︎</td><td>✅︎</td><td>✅︎</td></tr><tr><td>服务发现</td><td>✅︎</td><td>✅︎</td><td>✅︎</td><td>❌</td></tr><tr><td>异步消息</td><td>✅︎</td><td>✅︎</td><td>❌</td><td>❌</td></tr><tr><td>内置API文档</td><td>✅︎</td><td>✅︎</td><td>❌</td><td>❌</td></tr><tr><td>自动本地开发基础设施</td><td>✅︎</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>内置跟踪</td><td>✅︎</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>内置架构图</td><td>✅︎</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>内置的秘密管理</td><td>✅︎</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>内置预览环境</td><td>✅︎</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>内置云基础设施自动化</td><td>✅︎</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>内置云成本分析</td><td>✅︎</td><td>❌</td><td>❌</td><td>❌</td></tr></tbody></table><h2 id="Encore"><a href="#Encore" class="headerlink" title="Encore"></a>Encore</h2><p>Encore是构建Go微服务的现代替代方案，旨在使构建面向事件驱动和分布式系统变得更简单。Encore解决了本地开发体验，并通过使用来自AWS和GCP的强大可扩展服务协助部署。它通过提供微服务框架和基础设施SDK来工作，让您将基础设施语义声明为应用程序代码的一部分。官方文档：<a href="https://encore.dev/%E3%80%82">https://encore.dev/。</a></p><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><p>定义一个服务</p><p>使用Encore，您通过在常规Go包中定义API来定义服务。 Encore将此视为服务，并使用包名称作为服务名称。部署时，Encore将自动为每个服务提供所需的基础设施。</p><p>在磁盘上的展示如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/my-app</span><br><span class="line">├── encore.app          // ... and other top-level project files</span><br><span class="line">│</span><br><span class="line">├── hello               // hello service (a Go package)</span><br><span class="line">│   ├── hello.go        // hello service code</span><br><span class="line">│   └── hello_test.go   // tests for hello service</span><br><span class="line">│</span><br><span class="line">└── world               // world service (a Go package)</span><br><span class="line">    └── world.go        // world service code</span><br></pre></td></tr></table></figure><p>这意味着构建微服务架构就像在应用程序中创建多个 Go 包一样简单。有关更多详细信息，请参阅应用程序结构文档。</p><p>定义一个API</p><p>要定义一个 API，只需在任何普通的 Go 函数上添加 <code>//encore:api</code> 注解。这会告诉 Encore 该函数是一个 API 端点。Encore 将自动在编译时生成必要的样板代码。</p><p>在下面的示例中，我们定义了 API 端点 <code>Ping</code>，在 <code>hello</code> 服务中，它会暴露为 <code>hello.Ping</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">package hello // service name</span><br><span class="line"></span><br><span class="line">//encore:api public</span><br><span class="line">func Ping(ctx context.Context, params *PingParams) (*PingResponse, error) &#123;</span><br><span class="line">    msg := fmt.Sprintf(&quot;Hello, %s!&quot;, params.Name)</span><br><span class="line">    return &amp;PingResponse&#123;Message: msg&#125;, nil</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义一个 Pub/Sub topic</p><p>如果您想要一个发布/订阅主题，可以直接在应用程序代码中声明它，就像这样。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import &quot;encore.dev/pubsub&quot;</span><br><span class="line"> </span><br><span class="line">type User struct &#123; /* fields... */ &#125;</span><br><span class="line"> </span><br><span class="line">var Signup = pubsub.NewTopic[*User](&quot;signup&quot;, pubsub.TopicConfig&#123;</span><br><span class="line">  DeliveryGuarantee: pubsub.AtLeastOnce,</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">// Publish messages by calling a method</span><br><span class="line">Signup.Publish(ctx, &amp;User&#123;...&#125;)</span><br></pre></td></tr></table></figure><p>要运行您的应用程序，只需使用<code>encore run</code>命令。Encore将自动设置本地基础设施并生成必要的样板代码。您还可以获得<a href="https://encore.dev/docs/observability/dev-dash">一个带有分布式跟踪功能的本地开发仪表板</a>，以帮助您轻松理解和调试应用程序行为。</p><p>当您想要部署到云端时，您的代码不会发生变化。Encore将在所有环境中生成必要的样板并配置必要的基础设施：</p><ul><li>NSQ 用于本地开发</li><li>GCP Pub/Sub 适用于 GCP 上的环境。</li><li>AWS 上的环境中的 SNS/SQS</li></ul><h3 id="关键特性"><a href="#关键特性" class="headerlink" title="关键特性"></a>关键特性</h3><ul><li>无样板文件：使用任何函数上的注释声明API，从Go包创建服务。</li><li>内置分布式跟踪：轻松追踪请求的路径和性能。</li><li>自动化API文档和架构图：自动保持文档和图表最新。</li><li>内置机密管理：安全处理敏感数据。</li><li>云基础设施自动化：在本地、预览以及GCP和AWS中自动配置基础设施。</li></ul><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><ul><li>可扩展性：Encore旨在设计大规模应用程序，是使用可伸缩云服务构建大型分布式系统的高效方式。</li><li>简单和快速：Encore将许多基础设施管理复杂性抽象化，使开发人员能够专注于编码。</li><li>标准化：提供了一种统一的构建微服务和API以及配置基础设施的方式，遵循最佳实践。</li><li>内置工具：Encore提供内置的分布式跟踪、自动化API文档、预览环境等功能。</li><li>云无关性：Encore应用可以部署到任何云提供商，提供灵活性并防止厂商锁定。</li></ul><h3 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h3><ul><li>为了从Encore中获得最大价值，您应该同时使用API框架和基础设施SDK，这取决于您当前的情况可能需要对当前基础设施管理流程进行更改。</li></ul><h3 id="适用于"><a href="#适用于" class="headerlink" title="适用于"></a>适用于</h3><ul><li>在<a href="https://encore.dev/signup">这里</a>注册，体验一下 Encore。</li><li>查看此<a href="https://encore.dev/docs/how-to/try-encore">指南</a>，了解如何根据您的情况和优先事项最好地评估 Encore。</li></ul><h2 id="GoMicro-Orb"><a href="#GoMicro-Orb" class="headerlink" title="GoMicro (Orb)"></a>GoMicro (Orb)</h2><p><a href="https://github.com/go-micro/go-micro">GoMicro（将更名为Orb）</a>是一个微服务框架，旨在简化构建可扩展和易维护应用程序的挑战。GoMicro提供了一种可插拔的架构，允许开发人员选择并调整框架以满足其需求，并与各种服务发现系统集成。</p><blockquote><p><strong>注意</strong>：自2023年4月以来，GoMicro尚未发布新版本，因此可能需要谨慎对待。</p></blockquote><h3 id="关键特性-1"><a href="#关键特性-1" class="headerlink" title="关键特性"></a>关键特性</h3><ul><li><p>可插拔架构：根据您项目的需求调整和扩展 GoMicro。</p></li><li><p>服务发现与负载均衡：原生集成确保高效且平稳运行。</p><blockquote><p>更多特性，可以查看官网：<a href="https://github.com/go-micro/go-micro">https://github.com/go-micro/go-micro</a></p></blockquote><h3 id="优势-1"><a href="#优势-1" class="headerlink" title="优势"></a>优势</h3></li><li><p>可扩展性：GoMicro旨在设计大规模应用程序，可以轻松处理增加的负载。</p></li><li><p>灵活性：可插拔的特性意味着它可以根据各种项目需求进行定制。</p></li></ul><h3 id="限制-1"><a href="#限制-1" class="headerlink" title="限制"></a>限制</h3><ul><li>复杂性：功能的广泛范围和可插拔性可能会让新手感到畏惧。</li><li>云原生依赖：可能不适合那些没有专注于云原生部署的项目。</li></ul><h3 id="适用于-1"><a href="#适用于-1" class="headerlink" title="适用于"></a>适用于</h3><p>对于专注于云原生应用程序的团队，尤其是那些受益于事件驱动方法的团队。</p><h3 id="什么时候考虑GoMicro"><a href="#什么时候考虑GoMicro" class="headerlink" title="什么时候考虑GoMicro?"></a>什么时候考虑GoMicro?</h3><ul><li>在开发可扩展、云原生和事件驱动的应用程序时。</li><li>当框架的灵活性和定制化是您的首要任务，并且愿意花费大量时间进行手动基础设施设置和维护时。</li></ul><h2 id="Go-kit"><a href="#Go-kit" class="headerlink" title="Go kit"></a>Go kit</h2><p><a href="https://gokit.io/">Go kit</a> 是一组 Go 包（库），用于在 Go 中构建微服务。它专注于提供常见挑战的解决方案，同时保持相对中立。</p><h3 id="关键特性-2"><a href="#关键特性-2" class="headerlink" title="关键特性"></a>关键特性</h3><ul><li>服务发现：与各种服务发现系统无缝集成。</li><li>可插拔传输：提供一系列传输机制，如HTTP和gRPC。</li></ul><h3 id="优势-2"><a href="#优势-2" class="headerlink" title="优势"></a>优势</h3><ul><li>标准化：提供了一种统一的构建服务的方式，符合最佳实践。</li><li>灵活性：尽管有自己的观点，但它提供了插入不同组件的方法。</li></ul><h3 id="限制-2"><a href="#限制-2" class="headerlink" title="限制"></a>限制</h3><ul><li>陡峭的学习曲线：它特有的做事方式可能需要一定时间的初始投资才能掌握。</li><li>潜在开销：对于更简单的项目，Go kit 可能显得过度复杂。</li></ul><h3 id="适用于-2"><a href="#适用于-2" class="headerlink" title="适用于"></a>适用于</h3><p>对于重视标准化但又保持灵活性的团队。</p><h3 id="什么使用考虑使用Go-kit"><a href="#什么使用考虑使用Go-kit" class="headerlink" title="什么使用考虑使用Go kit?"></a>什么使用考虑使用Go kit?</h3><ul><li>当您需要一个平衡标准化方法和灵活性的工具包时。</li><li>当您不介意投入时间和精力手动设置和维护云基础设施和可观测工具时。</li></ul><h2 id="Gin"><a href="#Gin" class="headerlink" title="Gin"></a>Gin</h2><p><a href="https://gin-gonic.com/">Gin</a> 是一个专注于性能的 Go Web 框架。Gin 的特点是极简主义，适用于构建小型、专注的应用程序。</p><h3 id="关键特性-3"><a href="#关键特性-3" class="headerlink" title="关键特性"></a>关键特性</h3><ul><li>快速入门：其极简的特性意味着您可以快速启动和运行。</li><li>多功能性：作为一款极简产品，Gin提供了很大的灵活性，但牺牲了内置工具。</li></ul><h3 id="优势-3"><a href="#优势-3" class="headerlink" title="优势"></a>优势</h3><ul><li>快速入门：其极简的特性意味着您可以快速启动和运行。</li><li>多功能性：作为一款极简产品，Gin提供了很大的灵活性，但牺牲了内置工具。</li></ul><h3 id="限制-3"><a href="#限制-3" class="headerlink" title="限制"></a>限制</h3><ul><li>面向Web：主要针对Web应用程序，可能不适合非Web微服务。</li><li>功能不够丰富：对于更复杂的需求，您可能需要依赖第三方工具和扩展。</li></ul><h3 id="适用于-3"><a href="#适用于-3" class="headerlink" title="适用于"></a>适用于</h3><ul><li>对于注重性能并希望创建简单轻量级网络应用的开发人员和小团队</li></ul><h3 id="什么时候考虑使用Gin"><a href="#什么时候考虑使用Gin" class="headerlink" title="什么时候考虑使用Gin?"></a>什么时候考虑使用Gin?</h3><ul><li>当您的项目需要性能并且整体范围较小时。</li><li>当您正在构建少量和简单的服务时，因此在设置基础设施方面的总时间投资较小。</li></ul><blockquote><p>原文链接: <a href="https://encore.dev/resources/go-frameworks">https://encore.dev/resources/go-frameworks</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Go, 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Prometheus监控实战》读书笔记</title>
      <link href="/2024/02/03/0100_%E7%9B%91%E6%8E%A7Prometheus/"/>
      <url>/2024/02/03/0100_%E7%9B%91%E6%8E%A7Prometheus/</url>
      
        <content type="html"><![CDATA[<h1 id="监控简介"><a href="#监控简介" class="headerlink" title="监控简介"></a>监控简介</h1><blockquote><p><a href="https://www.bilibili.com/video/BV1a64y1X7ys/">Prometheus-陈皓</a>，本书的核心是Prometheus，一个开源的监控系统，它从应用程序中实时获取时间序列数据，然后通过功能强大的规则引擎，帮助你识别监控环境所需的信息。本书可以指导你使用Prometheus来构建监控系统，重点放在动态云环境、Kubernetes环境和容器环境的监控。同时，还将研究如何从应用程序获取数据并将这些数据用于警报和可视化。</p></blockquote><p>相关的开源地址：</p><ul><li>prometheus 官网：<a href="https://prometheus.io/">https://prometheus.io/</a></li><li>prometheus github地址：<a href="https://github.com/prometheus/prometheus">https://github.com/prometheus/prometheus</a></li></ul><p>监控是构建和管理应用程序服务层级结构的基础。</p><p><strong>从底向上</strong>依次是监控，应急事件处理，事后总结/问题根源分析，测试+发布，容量规划，软件开发，产品设计。</p><p>根据服务价值设计自上而下的健康空系统是一个很好的方式，自上而下分别是业务逻辑，应用程序，操作系统，监控框架。</p><h3 id="指标"><a href="#指标" class="headerlink" title="指标"></a>指标</h3><ul><li>测量型：类型是上下增减的数字，本质上是特定度量的快照。如CPU, 内存和磁盘使用率等。</li><li>计数型：随时间增加而不会减少的数字。</li><li>直方图：对观察点进行采样的指标类型。</li></ul><h3 id="指标摘要"><a href="#指标摘要" class="headerlink" title="指标摘要"></a>指标摘要</h3><ul><li>计数：计算特定时间间隔内的观察点数。</li><li>求和：将特定时间间隔内所有观察点的值累计相加。</li><li>平均值：提供特定时间间隔内所有值的平均值。</li><li>中间数：数值的几何中点，正好50%的数值位于它前面，而另外一半位于它的后面。</li><li>百分位数：度量占总数特定百分比的观察点的值。</li><li>标准差：显示指标分布中与平均值的标准差，这可以侧聊出数据集的差异程度。标准差为0表示数据都等于平均值，较高的标准差意味着数据分布的范围很广。</li><li>变化率：显示时间序列中数据之间的变化程度。</li></ul><h2 id="监控方法论"><a href="#监控方法论" class="headerlink" title="监控方法论"></a>监控方法论</h2><h3 id="Brendan-Gregg-的-USE-Utilization-Saturation和Error"><a href="#Brendan-Gregg-的-USE-Utilization-Saturation和Error" class="headerlink" title="Brendan Gregg 的 USE(Utilization, Saturation和Error)"></a>Brendan Gregg 的 USE(Utilization, Saturation和Error)</h3><p>这个方法侧重于主机级监控，其中U指的是使用率，S指的是饱和度，E指的是错误。具体<a href="https://www.brendangregg.com/usemethod.html">USE方法</a>描述。USE可以被概括成<strong>针对每个资源，检查使用率，饱和度和错误。</strong></p><ul><li><strong>资源</strong>：系统的一个组件。在Gregg对模型的定义中，他是一个传统意义上的物理服务器组件，入CPU,磁盘等，但许多人也将软件资源定义在内。</li><li><strong>使用率</strong>：资源忙于平时工作的平均时间。它通常用随时间变化的百分比表示。</li><li><strong>饱和度</strong>：资源排队工作的指标，无法再处理额外的工作。通常用队列长度表示。</li><li><strong>错误</strong>：资源错误事件的技术。</li></ul><p>例如：从CPU开始</p><ul><li>CPU使用率随时间的百分比</li><li>CPU饱和度，等待CPU的进程数。</li><li>错误，通常对CPU资源不太有影响。</li></ul><h3 id="Google的四个黄金指标"><a href="#Google的四个黄金指标" class="headerlink" title="Google的四个黄金指标"></a>Google的四个黄金指标</h3><p>这四个指标分别是<strong>延迟，流量，错误和饱和度</strong>。这四个指标来自于Google SRE手册，是专注与应用程序级的监控。</p><ul><li><strong>延迟</strong>：服务请求所花费的时间，需要区分成功请求和失败请求。</li><li><strong>流量</strong>：针对系统，如每秒HTTP的请求数，或者数据库系统的事务。</li><li><strong>错误</strong>：请求失败的速率，如HTTP 500错误等显示失败，或者是返回错误内容或无效内容等隐式失败，或者是基于策略原因导致的失败。</li><li><strong>饱和度</strong>：应用程序有多“满”，或者受限的资源，如内存，IO【网络IO，磁盘IO】，磁盘。</li></ul><h3 id="Weaveworks的RED-Rate-Error和Duration"><a href="#Weaveworks的RED-Rate-Error和Duration" class="headerlink" title="Weaveworks的RED(Rate, Error和Duration)"></a>Weaveworks的RED(Rate, Error和Duration)</h3><p>可以读这篇<a href="https://www.weave.works/blog/the-red-method-key-metrics-for-microservices-architecture/">文章</a>，也可以看下这个<a href="https://grafana.com/files/grafanacon_eu_2018/Tom_Wilkie_GrafanaCon_EU_2018.pdf">PPT</a>。</p><h2 id="警报和通知"><a href="#警报和通知" class="headerlink" title="警报和通知"></a>警报和通知</h2><p>要建立一个出色的通知系统，需要考虑一下基础信息：</p><ul><li>哪些问题需要通知</li><li>谁需要被告知</li><li>如何告知他们</li><li>多久告知他们一次</li><li>何时停止告知以及何时升级到其他人</li></ul><h3 id="通知的标准"><a href="#通知的标准" class="headerlink" title="通知的标准"></a>通知的标准</h3><ul><li>使通知清晰、准确、可操作。使用由人而不是计算机编写的通知在清晰度和实用性方面有显著差异</li><li>为通知添加上下文，通知应包含组件的其他相关信息</li><li>仅发有意义的通知。</li></ul><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><h3 id="可视化构建"><a href="#可视化构建" class="headerlink" title="可视化构建"></a>可视化构建</h3><ul><li>清晰地显示数据</li><li>引发思考（而不是视觉效果）</li><li>避免扭曲数据</li><li>使数据集保持一致</li><li>允许更改颗粒度而不影响理解</li></ul><h3 id="推荐书籍"><a href="#推荐书籍" class="headerlink" title="推荐书籍"></a>推荐书籍</h3><ul><li>The Visual Display of Quantitative Information-Edward Tufte</li><li><a href="https://www.datadoghq.com/blog/timeseries-metric-graphs-101/">https://www.datadoghq.com/blog/timeseries-metric-graphs-101/</a></li><li>The Art of Monitoring</li><li><a href="https://riemann.io/">https://riemann.io/</a></li></ul><h1 id="Prometheus安装"><a href="#Prometheus安装" class="headerlink" title="Prometheus安装"></a>Prometheus安装</h1><h3 id="下载软件Prometheus"><a href="#下载软件Prometheus" class="headerlink" title="下载软件Prometheus"></a>下载软件<code>Prometheus</code></h3><ul><li><a href="https://prometheus.io/download/">https://prometheus.io/download/</a></li></ul><p>在Linux上安装prometheus</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mkdir prometheus</span><br><span class="line">cd prometheus</span><br><span class="line">wget https://github.com/prometheus/prometheus/releases/download/v2.49.1/prometheus-2.49.1.linux-amd64.tar.gz</span><br><span class="line">tar xvf prometheus-2.49.1.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>Prometheus默认的配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my global config</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">15s</span> <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span> <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">          <span class="comment"># - alertmanager:9093</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="comment"># - &quot;first_rules.yml&quot;</span></span><br><span class="line">  <span class="comment"># - &quot;second_rules.yml&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A scrape configuration containing exactly one endpoint to scrape:</span></span><br><span class="line"><span class="comment"># Here it&#x27;s Prometheus itself.</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># metrics_path defaults to &#x27;/metrics&#x27;</span></span><br><span class="line">    <span class="comment"># scheme defaults to &#x27;http&#x27;.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;localhost:9090&quot;</span>]</span><br></pre></td></tr></table></figure><ul><li>global: 控制prometheus服务行为的安全配置<ul><li>scrape_interval: 指定应用程序或服务抓取数据的时间间隔</li><li>evaluation_interval: 用来指定Prometheus评估规则的频率。目前有两种规则：<ul><li>记录规则：允许预先计算使用频率且开销大的表达式，并将结果保存为一个新的时间序列数据。</li><li>报警规则：允许定义报警条件</li></ul></li></ul></li><li>alerting: 用来设置Prometheus的报警</li><li>rule_files: 指定包含记录规则或报警规则的文件列表。</li><li>scrape_configs：用来指定prometheus抓取的所有目标。</li></ul><h3 id="启动程序"><a href="#启动程序" class="headerlink" title="启动程序"></a>启动程序</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/prometheus</span><br><span class="line">cp prometheus.yml /etc/prometheus/</span><br><span class="line">prometheus --help</span><br><span class="line">prometheus --config.file &quot;/etc/prometheus/prometheus.yml&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">代码校验工具</span></span><br><span class="line">promtool check config prometheus.yml</span><br><span class="line">Checking prometheus.yml</span><br><span class="line"> SUCCESS: prometheus.yml is valid prometheus config file syntax</span><br></pre></td></tr></table></figure><h3 id="使用Docker运行Prometheus"><a href="#使用Docker运行Prometheus" class="headerlink" title="使用Docker运行Prometheus"></a>使用Docker运行Prometheus</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 9090:9090 -v /tmp/prometheus.yml:/etc/prometheus/</span><br></pre></td></tr></table></figure><p>访问：<a href="http://ip:9090/graph">http://ip:9090/graph</a></p><p><a href="https://prometheus.io/docs/prometheus/latest/querying/basics/">https://prometheus.io/docs/prometheus/latest/querying/basics/</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>quantile=<span class="string">&quot;0.5&quot;</span><span class="punctuation">,</span>instance=<span class="string">&quot;localhost:9090&quot;</span><span class="punctuation">,</span>__name__=<span class="string">&quot;go_gc_duration_seconds&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><a href="https://graphiteapp.org/#gettingStarted">https://graphiteapp.org/#gettingStarted</a></p><p><a href="https://www.robustperception.io/translating-between-monitoring-languages/">https://www.robustperception.io/translating-between-monitoring-languages/</a></p><h3 id="使用prometheus-grafana-node-exporter搭建机器的监控"><a href="#使用prometheus-grafana-node-exporter搭建机器的监控" class="headerlink" title="使用prometheus + grafana + node_exporter搭建机器的监控"></a>使用prometheus + grafana + node_exporter搭建机器的监控</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><ul><li><p>prometheus的下载见上面的步骤</p></li><li><p>grafana的下载：<a href="https://grafana.com/grafana/download?edition=oss">https://grafana.com/grafana/download?edition=oss</a></p><ul><li>分两个版本，一个是企业版，一个是OSS版本，也可以使用docker版本</li><li><code>docker run -d -p 3000:3000 --name grafana grafana/grafana-enterprise:9.4.7</code></li></ul></li><li><p>node_exporter 下载：<a href="https://github.com/prometheus/node_exporter">https://github.com/prometheus/node_exporter</a></p></li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li><p>要实现<code>Node Exporter Full</code>这个功能，请先参考文章，<a href="https://grafana.com/grafana/dashboards/1860-node-exporter-full/">https://grafana.com/grafana/dashboards/1860-node-exporter-full/</a></p></li><li><p>先配置<code>prometheus</code>，在<code>/etc/prometheus/prometheus.yml</code>中添加如下配置</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my global config</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">15s</span> <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span> <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">          <span class="comment"># - alertmanager:9093</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="comment"># - &quot;first_rules.yml&quot;</span></span><br><span class="line">  <span class="comment"># - &quot;second_rules.yml&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;localhost:9090&quot;</span>]  </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;localhost:9100&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li>配置完成后启动<code>prometheus</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prometheus --config.file &quot;/etc/prometheus/prometheus.yml&quot;</span><br></pre></td></tr></table></figure><ul><li>把node_exporter命令放入路径<code>/usr/local/bin</code>路径下，并启动node_exporter。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node_exporter --collector.systemd --collector.processes</span><br></pre></td></tr></table></figure><ul><li>解压grafana软件包，或者使用grafana docker镜像</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">命令行方式</span></span><br><span class="line">./grafana_server</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker 启动方式</span></span><br><span class="line">docker run -d -p 3000:3000 --name grafana grafana/grafana-enterprise:9.4.7</span><br></pre></td></tr></table></figure><p>到此，都全部都配置完成了。</p><h3 id="配置监控"><a href="#配置监控" class="headerlink" title="配置监控"></a>配置监控</h3><p>验证prometheus是否启动成功，浏览器地址栏中输入 <code>ip:9090/graph</code>，看是否有下面的页面。</p><p><img src="https://github.com/MarkShen1992/markshen1992.github.io/assets/40328786/4cc08049-13a3-42c2-adad-6918e7e4eba7" alt="1"></p><p>接下来是验证grafana是否启动成功，在浏览器中输入<code>ip:3000</code>,能看到下面页面就成功了。</p><p><img src="https://github.com/MarkShen1992/markshen1992.github.io/assets/40328786/a6983db4-68f5-4f59-b5b5-a0acd1baea57" alt="2"></p><p>输入用户名和密码，默认的是<code>admin/admin</code>. 用默认密码登录后，请马上更新新的密码。</p><p><img src="https://github.com/MarkShen1992/markshen1992.github.io/assets/40328786/5e79a6d1-200d-416c-8661-0e6cf65f1846" alt="3"></p><p>接下来创建dashboard，新建一个tab页，输入网址<a href="https://grafana.com/grafana/dashboards/1860-node-exporter-full/">https://grafana.com/grafana/dashboards/1860-node-exporter-full/</a></p><p><img src="https://github.com/MarkShen1992/markshen1992.github.io/assets/40328786/f00ffda4-f33e-4dd3-926b-3f6fd961fa15" alt="4"></p><p>具体操作如下面这个gif图片中所示，按照图片下来就已经配置完成了，这里还用到了视频转gif的网站：<a href="https://www.img2go.com/zh/convert-video-to-gif">https://www.img2go.com/zh/convert-video-to-gif</a></p><p><img src="https://github.com/MarkShen1992/markshen1992.github.io/assets/40328786/e6c63884-c309-4cac-a4db-20312d35bc6e" alt="Video_2024-02-03_214731"></p><p>本文暂时告一段落~</p>]]></content>
      
      
      
        <tags>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>请告诉孩子，原来这才是正确的读书方式</title>
      <link href="/2024/01/26/%E8%AF%B7%E5%91%8A%E8%AF%89%E5%AD%A9%E5%AD%90%EF%BC%8C%E5%8E%9F%E6%9D%A5%E8%BF%99%E6%89%8D%E6%98%AF%E6%AD%A3%E7%A1%AE%E7%9A%84%E8%AF%BB%E4%B9%A6%E6%96%B9%E5%BC%8F/"/>
      <url>/2024/01/26/%E8%AF%B7%E5%91%8A%E8%AF%89%E5%AD%A9%E5%AD%90%EF%BC%8C%E5%8E%9F%E6%9D%A5%E8%BF%99%E6%89%8D%E6%98%AF%E6%AD%A3%E7%A1%AE%E7%9A%84%E8%AF%BB%E4%B9%A6%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="请告诉孩子，原来这才是正确的读书方式"><a href="#请告诉孩子，原来这才是正确的读书方式" class="headerlink" title="请告诉孩子，原来这才是正确的读书方式"></a>请告诉孩子，原来这才是正确的读书方式</h2><blockquote><p><strong>编者按：</strong></p><p>很多人经常在问，读书到底为了什么？读书和做人又有什么关系？</p><p>关于读书，董宇辉说过这样一段话：“读书不一定能让你前程似锦，功成名就，但至少可以让你出言有尺，嬉闹有度，说话有德，做事有余。读书能够让你有更大的心胸，更坚定的认知，更周全的理解，更美好的追求，更稳定的内核，而不是把你变成书呆子。”</p><p>“知者行之始，行者知之成。”读书不仅仅是为了打发时间，也不仅仅是应付考试，关于读书真正的意义，楼宇烈老先生在《中国文化的根本精神》一书中，也给出了答案，我们一起来看看。</p></blockquote><h2 id="读书与做人"><a href="#读书与做人" class="headerlink" title="读书与做人"></a>读书与做人</h2><p>“读书与做人”这个题目中有两个词，一个是读书，一个是做人，中间加了一个“与”字。我想，最好把这个“与”字改成一个等号，即：读书=做人，做人=读书。</p><p>清初学者陆陇其说过，读书做人不是两件事。<strong>将所读之书，句句落实到自己身上，便是做人之法，如此方叫得能读书。</strong>如果不落实到自己身上去领会书中的道理，则读书自读书，做人自做人，只算作不能读书的人。我认为，一定要让读书与做人变成一回事，不要把它看作两件事。</p><h3 id="读书的第一个目的是通晓人道，明白事理。"><a href="#读书的第一个目的是通晓人道，明白事理。" class="headerlink" title="读书的第一个目的是通晓人道，明白事理。"></a><strong>读书的第一个目的是通晓人道，明白事理。</strong></h3><p>通晓人道，即要懂得怎样做人。《淮南子》一书中有这样一段话：“遍知万物而不知人道，不可谓智；遍爱群生而不爱人类，不可谓仁。”当今社会的状况跟古代相似，很多人知识很丰富，知晓群生万物的道理，就是不懂得怎样做人，我们不能说这样的人有智慧；很多人爱万物群生，却唯独不爱惜人类自己，那么就不能说这样的人具有仁这种德行。</p><p>在中国传统文化中，观察、思考问题都是从人入手的。以人为本的人文精神的根本特点就是看一切问题都和人联系在一起，都要思考它对人有何教益。</p><h3 id="读书的第二个目的是变化气质，完善人格。"><a href="#读书的第二个目的是变化气质，完善人格。" class="headerlink" title="读书的第二个目的是变化气质，完善人格。"></a><strong>读书的第二个目的是变化气质，完善人格。</strong></h3><p>我们不是只懂得道理就可以了，就像陆陇其所说的，要学一句就对照一下自己，并督促自己按照正确方法去做。在没有学习之前，我们不明白事理，不通晓人道，这没有关系。<strong>在学习之后，我们就要根据所明白的事理，所通晓的人道去改变自己。</strong>学和行、知和行一定要结合起来，只学而不行是毫无意义的。</p><p>中国传统文化重视“为己之学”。在《论语》一书中，孔子说：“古之学者为己，今之学者为人。”从字面的意义上看，今人要比古人好，古人学习是为自己打算，今人学习是为别人打算。<strong>其实不断完善自己，提升自己的学问才是为己之学，它不是为了炫耀给别人看。</strong>荀子说：“君子之学也，以美其身；小人之学也，以为禽犊。”这也就是说君子之学是为了完善自己，提升自己的学问，而小人之学是将学问当作礼物来取悦别人的，从耳朵里听进去，嘴里就说出来了，只不过丝毫没有提升自己。</p><h3 id="读书还有第三个目的是拓展知识，学习技能。"><a href="#读书还有第三个目的是拓展知识，学习技能。" class="headerlink" title="读书还有第三个目的是拓展知识，学习技能。"></a><strong>读书还有第三个目的是拓展知识，学习技能</strong>。</h3><p>这三个目的是有先后顺序的，通晓人道，明白事理是第一位的，然后再去改变气质，完善人格，最后通过实践去拓展我们的知识和技能。就像孔子讲的：“弟子入则孝，出则悌，谨而信，泛爱众，而亲仁。行有余力，则以学文。”(《论语·学而》)我们首先要“志于道”。学习做人的道理，连人都做不好，事情怎么能做好呢?其实，一个人不管做什么事，都要看他有没有胸怀、志向。我们做任何事决不能仅仅为了个人享乐。反之，<strong>我们要胸怀大志，为国为民，志存高远，行在脚下。</strong>我们也不能只有高远的志向，夸夸其谈，而不去行动。</p><h3 id="我们应该读什么样的书呢？"><a href="#我们应该读什么样的书呢？" class="headerlink" title="我们应该读什么样的书呢？"></a><strong>我们应该读什么样的书呢？</strong></h3><p>中国有句老话，叫作“开卷有益”，意思是读什么书都是可以的。但是，我们最好还是要有所选择，因为我们会被书中负面的内容所干扰。书籍是五花八门、琳琅满目的，可读之书非常多，中国传统文化典籍可分为甲、乙、丙、丁四类，或者叫经、史、子、集四类。</p><p><strong>经书可以说是具有长久生命力的经典。</strong>所谓“经者，常也”，它是讲贯穿古今、万物，认识天道、地道、人道最根本的道理，这就是经。先秦时就提出了“六经”的概念。即《诗》《书》《礼》《乐》《春秋》。经书后来又有所扩展，增加了《论语》《孟子》《孝经》《尔雅》。除了《仪礼》这部经典之外，又添加了解释礼的书《礼记》。</p><p><strong>通过读经书，我们就可以明天理，晓人道，知道应该怎样做人、做事，我们的言行举止应该遵什么样的规矩。</strong>“没有规矩不成方圆”，人的行为也是如此。大家也许都很喜欢孔子的话：“七十而从心所欲。”但是，我们不要忘了后面还有三个字：“不逾矩。”</p><p><strong>礼教告诉人们应该遵守的言行举止方面的规矩</strong>，其根本目的就是让我们认识到自己是一个什么身份的人，这样身份的人应该遵守什么样的规矩。很多人可能一听到这些就会头痛，觉得它是封建礼教的腐朽思想。我常讲，人如果想活得自由就必须要遵守规矩，如果所做的事情不符合身份，那就会四面碰壁。如果每个社会成员都能够尽伦尽职，这个社会一定是和谐的。尽伦尽职就是要求：在什么位置上，就应该尽这个位置上的职。</p><p><strong>史，即历史，是明古今之变的。</strong>司马迁讲天下的学问无非两大类，“究天人之际，通古今之变”。前者是探究人跟天地万物之间的关系；后者就是来了解人类社会的人事变动、朝代更替的经验教训。史学具有非常重要的作用，中国文化中有两个重要的传统：一个是“以史为鉴”；另一个是“以天为则”。唐太宗讲：“以铜为鉴，可正衣冠；以古为鉴，可知兴替。”古人强调“观今宜鉴古”，要看出今天的问题，要拿来说当一面镜子照一下。</p><p>历史承载着文化，一个不懂得自己国家民族文化的人，让他来热爱自己的国家，对中国传统文化有信心，这怎么可能呢？因此，清代学者龚自珍讲了一句非常深刻的话：<strong>“欲知大道，必先为史。灭人之国，必先去其史。”</strong></p><p><strong>子书就是各种不同的学派对天道、地道、人道的认识。</strong>我们的世界本来就是丰富多彩的，人们会从不同的角度去观察、思考，也会有不同的解释，这就是我们常常讲的文化的多样性、多元性。《孟子》里有一句话：“物之不齐，物之性也。”通过学习诸子百家对事物的不同看法，可以增长我们的智慧。</p><p>集部就更复杂多样了。<strong>集部里又分总集、别集、专集。读集部的书，可以长见识、养情性。</strong>文学、艺术作品等都归在集部中。集部的书，让我们从各个方面去体悟人生，可以让我们成为一个有艺术生活的人。我希望每个人多一点业余爱好，在艺术的人生里去发掘、学习人生的艺术，干巴巴的人生是总结不出人生的艺术的。<strong>读书要读出智慧来，不要读成知识的奴隶。</strong></p><h3 id="怎样读书呢？"><a href="#怎样读书呢？" class="headerlink" title="怎样读书呢？"></a><strong>怎样读书呢？</strong></h3><p>从根本上讲，<strong>读书就是要“得其意”，能够举一反三。</strong></p><p>《增广贤文》中有一句话“好书不厌百回读”，好的书我们读一百遍都不会厌倦。</p><p>我在后面接了一句“精意勤求十载功”，我们求得“精意”，恐怕要花10年的工夫。现在读书或者做学问时，常常是把简单的问题复杂化，化简为繁常被看作是有学问的体现。</p><p>其实，<strong>大道至简，真理平凡。</strong>例如，很多人学佛，总觉得学佛好像很深奥，修行很神秘。我认为，<strong>修行的真谛是平静地对待每天都要碰到的事情，做好自己的本分。</strong></p><h3 id="读书的次第是什么？"><a href="#读书的次第是什么？" class="headerlink" title="读书的次第是什么？"></a><strong>读书的次第是什么？</strong></h3><p>我觉得就是《中庸》中所说的：<strong>博学、审问、慎思、明辨、笃行。</strong></p><p>什么叫“博学”？黄侃先生讲过一句话：“所谓博学者，谓明白事理多，非记事多也。”<strong>博学是因为明白很多事理，而不是记住了很多事情。</strong>明白事理是一种智慧，中国的传统文化是一种学智慧的文化，而不是单纯的学知识的文化。知识是静止的，智慧是变动的，智慧是一种发现、掌握、运用知识的能力。</p><p><strong>审问就是要多问为什么，要不耻下问。</strong>子日：“三人行，必有我师焉。”(《论语·述而》)我们身边永远都有值得学习的人和事，不要以自己的长处去比别人的短处，那就没有学习的必要了，我们应该<strong>时刻看到自己的不足</strong>。</p><p><strong>慎思，即认真的思考。</strong>孔子说：“君子有九思：视思明，听思聪，色思温，貌思恭，言思忠，事思敬，疑思问，忿思难，见得思义。”(《论语·季氏》)我们碰到事情就要思考，读书更要思考。慎思然后就要明辨，分辨是非、疑惑，<strong>知道哪些事情该做，哪些事情不该做</strong>等等。</p><p><strong>笃行，即身体力行。</strong>荀子讲：“知之不若行之，学至于行而止矣。”(《荀子·儒效》)明白不如做到，<strong>学到并做到，才算达到了读书的最高境界。</strong></p><p>智、仁、勇这三种品德是每个人都应该具备的，《中庸》里讲：“好学近乎知，力行近乎仁，知耻近乎勇。”老子说：“知人者智，自知者明。胜人者有力，自胜者强。”人最难的就是做到“自知”，<strong>人贵有白知之明，人更贵有自胜之强，能够战胜自己的人才是强者。</strong></p><p>一个社会永远是有善恶、美丑的，我们不能太理想主义。人的身体、社会现象的平衡不是简单的百分之五十和百分之五十的比例，也许有的是要这个百分之七十，那个百分之三十才是平衡，很多事情都不能一概而论。</p><p>和谐、平衡不是我迁就你，你迁就我，而是你尊重我，我尊重你，保持各自的差异和特点，不需要改变我的看法来附和你，也不需要改变你的看法来附和我，这才叫和谐、平衡。</p><p>原文链接：<a href="https://mp.weixin.qq.com/s/7uXyVP4E58d4153aQtIvOA">请告诉孩子，原来这才是正确的读书方式 (qq.com)</a> 本文摘自楼宇烈《中国文化的根本精神》</p>]]></content>
      
      
      
        <tags>
            
            <tag> 知行合一 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C中的int a = 4;对应的汇编码</title>
      <link href="/2024/01/07/C%E8%AF%AD%E8%A8%80%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%AF%B9%E5%BA%94%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
      <url>/2024/01/07/C%E8%AF%AD%E8%A8%80%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%AF%B9%E5%BA%94%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<p>下面的代码对应的汇编是什么呢？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">func</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> a == <span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，从ubuntu中使用<code>gcc</code>命令编译下的结果如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -S -fno-asynchronous-unwind-tables demo.c</span><br></pre></td></tr></table></figure><p>生成的汇编代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">        .file   &quot;demo.c&quot;</span><br><span class="line">        .text</span><br><span class="line">        .globl  func1</span><br><span class="line">        .type   func1, @function</span><br><span class="line">func1:</span><br><span class="line">        endbr64</span><br><span class="line">        pushq   %rbp</span><br><span class="line">        movq    %rsp, %rbp</span><br><span class="line">        movl    $1, -4(%rbp)</span><br><span class="line">        nop</span><br><span class="line">        popq    %rbp</span><br><span class="line">        ret</span><br><span class="line">        .size   func1, .-func1</span><br><span class="line">        .ident  &quot;GCC: (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0&quot;</span><br><span class="line">        .section        .note.GNU-stack,&quot;&quot;,@progbits</span><br><span class="line">        .section        .note.gnu.property,&quot;a&quot;</span><br><span class="line">        .align 8</span><br><span class="line">        .long   1f - 0f</span><br><span class="line">        .long   4f - 1f</span><br><span class="line">        .long   5</span><br><span class="line">0:</span><br><span class="line">        .string &quot;GNU&quot;</span><br><span class="line">1:</span><br><span class="line">        .align 8</span><br><span class="line">        .long   0xc0000002</span><br><span class="line">        .long   3f - 2f</span><br><span class="line">2:</span><br><span class="line">        .long   0x3</span><br><span class="line">3:</span><br><span class="line">        .align 8</span><br><span class="line">4:</span><br></pre></td></tr></table></figure><ul><li><p><a href="https://hjlarry.github.io/sicp/asm/">汇编语言知识</a></p><ul><li><a href="https://github.com/hjlarry/hjlarry.github.io">bak</a></li></ul></li><li><p><a href="https://cdrdv2-public.intel.com/782156/325383-sdm-vol-2abcd.pdf">Instruction Set Reference, A-Z</a></p></li></ul><p>以上仅仅是一个简单例子，可以使用上面的方法来看一看c语言中的那些关键字都是怎么实现的。实现方式都是基于CPU中的ISA(Instruction Set Architecture)来实现的。</p><p>使用gcc生成汇编代码除了上面的命令还是如下的方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -Og -S xxx.c</span><br></pre></td></tr></table></figure><p>生成<code>xxx.o</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -Og -c xxx.c</span><br></pre></td></tr></table></figure><p>将<code>xxx.o</code>文件反汇编成<code>xxx.s</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">objdump -d xxx.o</span><br></pre></td></tr></table></figure><p>本文会不断完善，c语言关键字对应的汇编码。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 汇编语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机基础课程</title>
      <link href="/2024/01/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%A8%8B/"/>
      <url>/2024/01/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>任何行业想要走的远，要有足够扎实的基础，对于计算机行业的话，也有一些我们从业人员必须学习的基础知识，包括计算机组成原理，计算机操作系统，数据结构与算法，计算机网络，计算机编译原理。</p><blockquote><p>首先大家要有亮剑精神哈，计算机这些技术都是非常硬核的，所以会很难啃，但是要想成为专业的技术人才，这些课程是一定要从头到尾啃完的，加油！</p></blockquote><h2 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a>计算机组成原理</h2><h3 id="推荐书籍"><a href="#推荐书籍" class="headerlink" title="推荐书籍"></a>推荐书籍</h3><ul><li><a href="https://book.douban.com/subject/26912767/">深入理解计算机系统</a></li></ul><h3 id="推荐视频"><a href="#推荐视频" class="headerlink" title="推荐视频"></a>推荐视频</h3><ul><li><a href="https://www.bilibili.com/video/BV1Xu411r7Vz/?spm_id_from=333.337.search-card.all.click&vd_source=901e0b3c23d3cff6094d75383834207f">【哈工大】计算机组成原理 刘宏伟（全41讲）</a></li></ul><h2 id="计算机操作系统"><a href="#计算机操作系统" class="headerlink" title="计算机操作系统"></a>计算机操作系统</h2><h3 id="推荐视频-1"><a href="#推荐视频-1" class="headerlink" title="推荐视频"></a>推荐视频</h3><ul><li><p>蒋炎岩·南京大学</p><ul><li><a href="https://www.bilibili.com/video/BV1N741177F5?p=2&spm_id_from=pageDriver&vd_source=901e0b3c23d3cff6094d75383834207f">2020 南京大学 “操作系统：设计与实现</a></li><li><a href="https://www.bilibili.com/video/BV1HN41197Ko/?spm_id_from=333.337.search-card.all.click&vd_source=901e0b3c23d3cff6094d75383834207f">2021 南京大学 “操作系统：设计与实现</a></li></ul></li><li><p>李治军·哈工大</p><ul><li><a href="https://www.bilibili.com/video/BV19r4y1b7Aw/?spm_id_from=333.337.search-card.all.click&vd_source=901e0b3c23d3cff6094d75383834207f">操作系统 李治军（全32讲）</a></li></ul></li></ul><h2 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h2><h3 id="推荐书籍-1"><a href="#推荐书籍-1" class="headerlink" title="推荐书籍"></a>推荐书籍</h3><ul><li><a href="https://www.hello-algo.com/">hello-algo</a></li><li><a href="https://book.douban.com/subject/19952400/">算法</a></li><li><a href="https://book.douban.com/subject/20432061/">算法导论</a></li></ul><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><h3 id="推荐视频-2"><a href="#推荐视频-2" class="headerlink" title="推荐视频"></a>推荐视频</h3><ul><li><p><a href="https://www.bilibili.com/video/BV19M411S7V7/?spm_id_from=333.337.search-card.all.click&vd_source=901e0b3c23d3cff6094d75383834207f">《计算机网络：自顶向下方法》原书视频教学，作者Jim Kurose亲授</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1JV411t7ow/?spm_id_from=333.337.search-card.all.click&vd_source=901e0b3c23d3cff6094d75383834207f">中科大郑烇、杨坚全套《计算机网络（自顶向下方法 第7版，James F.Kurose，Keith W.Ross）》课程</a></p></li></ul><h2 id="计算机编译原理"><a href="#计算机编译原理" class="headerlink" title="计算机编译原理"></a>计算机编译原理</h2><h3 id="推荐视频-3"><a href="#推荐视频-3" class="headerlink" title="推荐视频"></a>推荐视频</h3><ul><li><p><a href="https://www.bilibili.com/video/BV1dL4y1H7T8/?spm_id_from=333.337.search-card.all.click&vd_source=901e0b3c23d3cff6094d75383834207f">【编译原理】哈工大公开课（高清版）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV17W41187gL/?spm_id_from=333.337.search-card.all.click&vd_source=901e0b3c23d3cff6094d75383834207f">编译原理 — 中科大</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1NE411376V/?spm_id_from=333.337.search-card.all.click&vd_source=901e0b3c23d3cff6094d75383834207f">CS143 斯坦福大学编译原理</a></p></li></ul><h2 id="其他资源"><a href="#其他资源" class="headerlink" title="其他资源"></a>其他资源</h2><h3 id="推荐书籍-2"><a href="#推荐书籍-2" class="headerlink" title="推荐书籍"></a>推荐书籍</h3><ul><li><p><a href="https://book.douban.com/subject/20260928/">编码</a></p></li><li><p><a href="https://csdiy.wiki/">CS自学指南</a></p></li></ul><h2 id="基础学习流程"><a href="#基础学习流程" class="headerlink" title="基础学习流程"></a>基础学习流程</h2><ul><li><a href="https://www.bilibili.com/video/BV1Fg4y1Z7P8/?spm_id_from=333.880.my_history.page.click">计算机底层学习路径</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper学习笔记</title>
      <link href="/2023/10/26/ZooKeeper%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/10/26/ZooKeeper%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="软件简介"><a href="#软件简介" class="headerlink" title="软件简介"></a>软件简介</h2><ul><li>Apache ZooKeeper is an open-source server for highly reliable distributed coordination of cloud applications.<a href="https://www.bilibili.com/video/BV1mw411d7Cc/?spm_id_from=333.337.search-card.all.click">2</a> It is a project of the Apache Software Foundation.</li><li>ZooKeeper is essentially a service for distributed systems offering a hierarchical key-value store, which is used to provide a distributed configuration service, synchronization service, and naming registry for large distributed systems (see Use cases).<a href="https://cn.dubbo.apache.org/zh-cn/">3</a> ZooKeeper was a sub-project of Hadoop but is now a top-level Apache project in its own right.</li><li>如果你想了解更多信息，可以访问软件的官网:<ul><li><a href="https://zookeeper.apache.org/doc/r3.9.1/index.html">https://zookeeper.apache.org/doc/r3.9.1/index.html</a></li></ul></li></ul><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h3><ul><li>在软件安装前，要先下载软件，可以到官网的下载页面下载软件，我们使用的软件版本是 3.6.4，请注意，选择这个版本仅是学习使用，如果要在线上环境使用，请选择非 EoL 版本。<ul><li><a href="https://zookeeper.apache.org/releases.html">https://zookeeper.apache.org/releases.html</a></li></ul></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 软件下载</span></span><br><span class="line">wget https://archive.apache.org/dist/zookeeper/zookeeper-3.6.4/apache-zookeeper-3.6.4-bin.tar.gz</span><br></pre></td></tr></table></figure><ul><li>在本软件安装教程中前置条件<ul><li>虚拟机软件 VMWare16 pro</li><li>操作系统：CentOS 7</li><li>JDK 的安装可以参照之前的文章<a href="http://markshen1992.top/2023/10/23/Java%E5%9C%A8Linux%E4%B8%8A%E5%AE%89%E8%A3%85/">在 Linux 系统上安装 Java 环境</a>一文</li></ul></li></ul><p>以上准备好之后，就可以进行软件安装了</p><h3 id="软件安装-1"><a href="#软件安装-1" class="headerlink" title="软件安装"></a>软件安装</h3><ul><li>创建软件安装目录</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /opt/zk</span><br></pre></td></tr></table></figure><ul><li>将下载好的软件拷贝到这个目录中</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> apache-zookeeper-3.6.4-bin.tar.gz /opt/zk</span><br></pre></td></tr></table></figure><ul><li>解压软件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvf apache-zookeeper-3.6.4-bin.tar.gz</span><br></pre></td></tr></table></figure><ul><li>进入软件路径修改软件配置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> apache-zookeeper-3.6.4-bin/conf</span><br><span class="line"><span class="built_in">cp</span> zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure><ul><li>在配置文件中配置<code>ZK_HOME</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑 /etc/profile 文件</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="comment"># 添加如下代码</span></span><br><span class="line"><span class="comment">#ZK</span></span><br><span class="line"><span class="built_in">export</span> ZK_HOME=/opt/zk/apache-zookeeper-3.6.4-bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$ZK_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># 重新生效</span></span><br><span class="line"><span class="built_in">source</span>|. /etc/profile</span><br></pre></td></tr></table></figure><ul><li>启动 ZK</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start|stop|restart|status</span><br><span class="line"><span class="comment"># 启动软件的话，直接使用下面的命令</span></span><br><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><p>以上就可以在 CentOS7 上启动 ZK 了。</p><h2 id="ZK-集群环境搭建"><a href="#ZK-集群环境搭建" class="headerlink" title="ZK 集群环境搭建"></a>ZK 集群环境搭建</h2><p>对于集群环境，需要做的前置准备就是要准备三台虚拟机，现阶段给其做的规划如下表</p><table><thead><tr><th>IP 地址</th><th>ZK</th></tr></thead><tbody><tr><td>192.168.32.10</td><td>ZK1</td></tr><tr><td>192.168.32.11</td><td>ZK2</td></tr><tr><td>192.168.32.12</td><td>ZK3</td></tr></tbody></table><p>11，12 这两台机器是基于 10 虚拟机的镜像版本，如果这样的话，这三台虚拟机上都有 ZK 软件了，接下来的操作就是搭建集群环境了</p><ul><li>修改 10 机器上 ZK 的配置文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/zk/apache-zookeeper-3.6.4-bin</span><br><span class="line"><span class="comment"># 创建data文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在进入存放配置的文件夹</span></span><br><span class="line"><span class="built_in">cd</span> conf</span><br><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line">vim zoo.cfg</span><br><span class="line"><span class="comment"># 修改 `dataDir` 属性为下面的值</span></span><br><span class="line">dataDir=/opt/zk/apache-zookeeper-3.6.4-bin/data</span><br><span class="line"><span class="comment"># 以下三行在配置文件末尾加</span></span><br><span class="line">server.1=192.168.32.10:2888:3888</span><br><span class="line">server.2=192.168.32.11:2888:3888</span><br><span class="line">server.3=192.168.32.12:2888:3888</span><br></pre></td></tr></table></figure><ul><li>将配制好的内容分发到其他两台计算机，同时创建 data 数据目录，再在这个目录下创建一个 myid 文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在这个目录，创建myid文件</span></span><br><span class="line">/opt/zk/apache-zookeeper-3.6.4-bin/data</span><br><span class="line"><span class="comment"># 对于10那台机器:</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; myid</span><br><span class="line"><span class="comment"># 对于11那台机器</span></span><br><span class="line"><span class="built_in">echo</span> 2 &gt; myid</span><br><span class="line"><span class="comment"># 对于12那台机器</span></span><br><span class="line"><span class="built_in">echo</span> 3 &gt; myid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将11，12两台机器上的zk全删除</span></span><br><span class="line"><span class="built_in">rm</span> -rf /opt/zk/apache-zookeeper-3.6.4-bin</span><br><span class="line"><span class="comment"># 将10上的zk分发到11，12服务器上，如果配置免密的话，执行这句话的时候不需要输入用户名密码</span></span><br><span class="line">scp -r /opt/zk/apache-zookeeper-3.6.4-bin/ root@192.168.32.11|12:/opt/zk</span><br><span class="line"><span class="comment"># 然后修改 /opt/zk/apache-zookeeper-3.6.4-bin/data 目录中的 myid 文件，将其该成对应的 2, 3</span></span><br></pre></td></tr></table></figure><ul><li>关闭系统防火墙</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启命令：</span></span><br><span class="line">systemctl start firewalld</span><br><span class="line"><span class="comment">#临时关闭命令：</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="comment">#永久关闭命令：</span></span><br><span class="line">systemctl <span class="built_in">disable</span>|<span class="built_in">enable</span> firewalld</span><br></pre></td></tr></table></figure><ul><li>或者，开启指定的端口</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> firewall-cmd --zone=public --add-port=3000/tcp --permanent</span><br><span class="line"><span class="built_in">sudo</span> firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> firewall-cmd --remove-port=3000/tcp --permanent</span><br></pre></td></tr></table></figure><ul><li>启动服务，分别在三台机器上执行下面命令</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><ul><li>验证 ZK 是否启动成功以及服务具体角色，结果是一台机器上的 ZK 角色是 leader，其他两台角色是 follower</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh status</span><br></pre></td></tr></table></figure><h2 id="ZK-的使用场景"><a href="#ZK-的使用场景" class="headerlink" title="ZK 的使用场景"></a>ZK 的使用场景</h2><ul><li><a href="https://www.bilibili.com/video/BV1mw411d7Cc/?spm_id_from=333.337.search-card.all.click">分布式锁</a></li><li>服务注册发现，跟 <a href="https://cn.dubbo.apache.org/zh-cn/">Dubbo</a> 结合使用</li><li><a href="https://www.oreilly.com/library/view/kafka-the-definitive/9781492043072/">Kafka 集群搭建</a><ul><li>使用 ZK 存储 Kafka 集群元数据信息和消费者客户端详情</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux系统上安装Java环境</title>
      <link href="/2023/10/23/Java%E5%9C%A8Linux%E4%B8%8A%E5%AE%89%E8%A3%85/"/>
      <url>/2023/10/23/Java%E5%9C%A8Linux%E4%B8%8A%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="软件安装前的准备"><a href="#软件安装前的准备" class="headerlink" title="软件安装前的准备"></a>软件安装前的准备</h2><ul><li>下载镜像，可以从站点：<a href="https://repo.huaweicloud.com/java/jdk">https://repo.huaweicloud.com/java/jdk</a> 下载。<ul><li>我下载的镜像是：jdk-8u202-linux-x64.tar.gz</li></ul></li><li>在解压软件前，把软件放在 <code>/opt</code> 目录下，如果没有这个目录的话，创建目录。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 /opt 目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /opt</span><br><span class="line"><span class="comment"># 把镜像文件拷贝到这个文件夹中</span></span><br><span class="line"><span class="built_in">cp</span> jdk-8u202-linux-x64.tar.gz /opt</span><br></pre></td></tr></table></figure><ul><li>解压命令解压软件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf jdk-8u202-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul><li>编辑 <code>/etc/profile</code> 文件，在文件最末尾添加如下代码：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/jdk-8u202-linux-x64</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br></pre></td></tr></table></figure><ul><li>添加完后，<code>wq</code> 保存并退出，使用下面命令从新加载 <code>/etc/profile</code> 文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><ul><li>然后执行下面命令判断是否执行成功</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">javac</span><br><span class="line">用法: javac &lt;options&gt; &lt;<span class="built_in">source</span> files&gt;</span><br><span class="line">其中, 可能的选项包括:</span><br><span class="line">  -g                         生成所有调试信息</span><br><span class="line">  -g:none                    不生成任何调试信息</span><br><span class="line">  -g:&#123;lines,vars,<span class="built_in">source</span>&#125;     只生成某些调试信息</span><br><span class="line">  -nowarn                    不生成任何警告</span><br><span class="line">  -verbose                   输出有关编译器正在执行的操作的消息</span><br><span class="line">  -deprecation               输出使用已过时的 API 的源位置</span><br><span class="line">  -classpath &lt;路径&gt;            指定查找用户类文件和注释处理程序的位置</span><br><span class="line">  -<span class="built_in">cp</span> &lt;路径&gt;                   指定查找用户类文件和注释处理程序的位置</span><br><span class="line">  -sourcepath &lt;路径&gt;           指定查找输入源文件的位置</span><br><span class="line">  -bootclasspath &lt;路径&gt;        覆盖引导类文件的位置</span><br><span class="line">  -extdirs &lt;目录&gt;              覆盖所安装扩展的位置</span><br><span class="line">  -endorseddirs &lt;目录&gt;         覆盖签名的标准路径的位置</span><br><span class="line">  -proc:&#123;none,only&#125;          控制是否执行注释处理和/或编译。</span><br><span class="line">  -processor &lt;class1&gt;[,&lt;class2&gt;,&lt;class3&gt;...] 要运行的注释处理程序的名称; 绕过默认的搜索进程</span><br><span class="line">  -processorpath &lt;路径&gt;        指定查找注释处理程序的位置</span><br><span class="line">  -parameters                生成元数据以用于方法参数的反射</span><br><span class="line">  -d &lt;目录&gt;                    指定放置生成的类文件的位置</span><br><span class="line">  -s &lt;目录&gt;                    指定放置生成的源文件的位置</span><br><span class="line">  -h &lt;目录&gt;                    指定放置生成的本机标头文件的位置</span><br><span class="line">  -implicit:&#123;none,class&#125;     指定是否为隐式引用文件生成类文件</span><br><span class="line">  -encoding &lt;编码&gt;             指定源文件使用的字符编码</span><br><span class="line">  -<span class="built_in">source</span> &lt;发行版&gt;              提供与指定发行版的源兼容性</span><br><span class="line">  -target &lt;发行版&gt;              生成特定 VM 版本的类文件</span><br><span class="line">  -profile &lt;配置文件&gt;            请确保使用的 API 在指定的配置文件中可用</span><br><span class="line">  -version                   版本信息</span><br><span class="line">  -<span class="built_in">help</span>                      输出标准选项的提要</span><br><span class="line">  -A关键字[=值]                  传递给注释处理程序的选项</span><br><span class="line">  -X                         输出非标准选项的提要</span><br><span class="line">  -J&lt;标记&gt;                     直接将 &lt;标记&gt; 传递给运行时系统</span><br><span class="line">  -Werror                    出现警告时终止编译</span><br><span class="line">  @&lt;文件名&gt;                     从文件读取选项和文件名</span><br></pre></td></tr></table></figure><p>以上，执行命令如上所示，即安装成功</p><p>完~</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我电脑上的软件</title>
      <link href="/2023/07/30/%E6%88%91%E7%94%B5%E8%84%91%E4%B8%8A%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
      <url>/2023/07/30/%E6%88%91%E7%94%B5%E8%84%91%E4%B8%8A%E7%9A%84%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://www.sumatrapdfreader.org/free-pdf-reader">PDF 阅读器</a></li><li>命令行工具<ul><li><a href="https://mobaxterm.mobatek.net/">MobaXterm</a></li><li><a href="https://github.com/kingToolbox/WindTerm">WindTerm</a></li><li><a href="https://github.com/Eugeny/tabby">Tabby Terminal</a></li></ul></li><li>通讯软件<ul><li><a href="https://tim.qq.com/">Tim</a></li><li><a href="https://weixin.qq.com/">微信</a></li><li><a href="https://slack.com/">Slack</a></li></ul></li><li>开发工具<ul><li><a href="https://spring.io/tools/">SpringToolSuite</a></li><li><a href="https://code.visualstudio.com/">VsCode</a></li><li><a href="https://www.mysql.com/">MySQL</a></li><li><a href="https://dbeaver.io/">DBeaver</a></li><li><a href="https://github.com/winmerge/winmerge">代码版本比对合并工具-WinMerge</a></li><li><a href="https://www.virtualbox.org/">虚拟机-VirtualBox</a></li><li><a href="https://git-scm.com/">Git</a></li><li><a href="https://tortoisegit.org/">Git Tortoice</a></li></ul></li><li><a href="https://www.capcut.cn/">视频剪辑-剪映</a></li><li><a href="https://github.com/marktext/marktext">MarkDown 工具-marktext</a></li><li>远程工具<ul><li><a href="https://sunlogin.oray.com/">向日葵</a></li><li><a href="https://rustdesk.com/zh/">Rustdesk</a></li></ul></li><li><a href="https://www.voidtools.com/">电脑文件搜索-Everything</a></li><li><a href="https://www.videolan.org/vlc/">视频播放器-VLC media player</a></li><li><a href="https://www.drawio.com/">画图工具-draw.io</a></li><li>协作工具<ul><li><a href="https://meeting.tencent.com/">会议工具-腾讯会议</a></li><li><a href="https://www.notion.so/">notion</a></li><li><a href="https://docs.qq.com/">腾讯文档</a></li><li><a href="https://www.kdocs.cn/welcome">金山文档</a></li></ul></li><li><a href="https://www.cyotek.com/cyotek-webcopy/downloads">网站归档软件-WebCopy</a></li><li>网盘<ul><li><a href="https://www.aliyundrive.com/">阿里云盘</a></li><li><a href="https://pan.baidu.com/">百度云盘</a></li></ul></li><li><a href="https://www.wireshark.org/">网络抓包软件-wireshark</a></li><li>接口调试<ul><li><a href="https://www.postman.com/downloads/">Postman</a></li><li><a href="https://apifox.com/">Apifox</a></li></ul></li><li>Chrome 浏览器中的插件<ul><li>Cookie-Editor</li><li>CSS Peeper</li><li>JSON Formatter</li><li>Talend API Tester</li><li>Vue.js devtools</li><li>沙拉查词</li></ul></li><li><a href="https://obsproject.com/">推流软件-OBS</a></li><li><a href="https://pc.qq.com/detail/7/detail_2447.html">一款小众的思维导图工具-ThinkingExpress</a></li><li><a href="https://www.7-zip.org/">压缩软件-7zip</a></li><li>番茄时钟网页版<ul><li><a href="https://www.tomatolist.com/timer.html">番茄时钟</a></li><li><a href="https://alloyteam.github.io/AlloyTimer/">Alloy Timer</a></li><li><a href="https://pomofocus.io/">pomofocus</a></li><li><a href="https://www.tomatotimers.com/">tomatotimers</a></li></ul></li><li>硬件信息<ul><li><a href="https://www.ludashi.com/">鲁大师</a></li><li><a href="https://www.cpuid.com/softwares/cpu-z.html">CPUZ</a></li></ul></li><li>装机 U 制作<ul><li><a href="https://www.laomaotao.net/">老毛桃</a></li><li><a href="https://rufus.ie/en/">Rufus</a></li><li><a href="https://github.com/ventoy/Ventoy">Ventoy</a></li></ul></li><li>AI 工具<ul><li><a href="https://yiyan.baidu.com/welcome">文心一言</a></li><li><a href="https://qianwen.aliyun.com/">通义千问</a></li><li><a href="https://xinghuo.xfyun.cn/">讯飞星火认知大模型</a></li><li><a href="https://hunyuan.tencent.com/">混元大模型</a></li></ul></li></ul><p>未完，以后会不断更新~</p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github advanced search</title>
      <link href="/2023/05/22/Github-advanced-search/"/>
      <url>/2023/05/22/Github-advanced-search/</url>
      
        <content type="html"><![CDATA[<h2 id="Github-Advanced-Search"><a href="#Github-Advanced-Search" class="headerlink" title="Github Advanced Search"></a><a href="https://github.com/search/advanced">Github Advanced Search</a></h2><blockquote><p>学好Github搜索，可以在Github中找到自己需要的项目，一定要熟练使用Github的站内<strong>搜索</strong>。</p><p>学习文档如下:</p><ul><li><a href="https://docs.github.com/en/search-github">官网文档</a> </li><li><a href="https://docs.github.com/zh/search-github">官方文档-zh</a></li><li><a href="https://docs.github.com/zh/search-github/getting-started-with-searching-on-github/about-searching-on-github">关于在GitHub上搜索</a></li></ul></blockquote><p>下图于2023年5月22日截取于Github网站。</p><p><img src="https://user-images.githubusercontent.com/40328786/239930540-11365707-cc8c-4705-9b7f-a583f781e151.png" alt="github_advanced_search"></p><h3 id="高级选项"><a href="#高级选项" class="headerlink" title="高级选项"></a>高级选项</h3><table><thead><tr><th>具体用法</th><th>例子</th></tr></thead><tbody><tr><td>user:MarkShen1992</td><td>github, atom, electron, octokit</td></tr><tr><td>repo:MarkShen1992/leet-code</td><td>twbs/bootstrap, rails/rails</td></tr><tr><td>created:&gt;2023-01-01</td><td>&gt;YYYY-MM-DD, YYYY-MM-DD</td></tr><tr><td>language:Java</td><td><a href="https://github.com/collections/programming-languages">programming lang</a></td></tr></tbody></table><h3 id="仓库选项"><a href="#仓库选项" class="headerlink" title="仓库选项"></a>仓库选项</h3><table><thead><tr><th>具体用法</th><th>例子</th></tr></thead><tbody><tr><td>stars:&gt;1000</td><td>0..100, 200, &gt;1000</td></tr><tr><td>forks:&gt;1000</td><td>50..100, 200, &lt;5</td></tr><tr><td>size:100KB</td><td>Repository size in KB</td></tr><tr><td>pushed:&lt;2020-01-01</td><td>&lt;YYYY-MM-DD</td></tr><tr><td>license:artistic-2.0</td><td>license:artistic-2.0</td></tr><tr><td>Return repositories {not|and|only}  including forks.</td><td>-</td></tr></tbody></table><h3 id="Code-选项"><a href="#Code-选项" class="headerlink" title="Code 选项"></a>Code 选项</h3><table><thead><tr><th>具体用法</th><th>例子</th></tr></thead><tbody><tr><td>path:*.rb</td><td>rb, py, jpg</td></tr><tr><td>path:/net</td><td>/foo/bar/baz/qux</td></tr><tr><td>path:**/README.md</td><td>app.rb, footer.erb</td></tr><tr><td>Return code {not|and|only} including forks.</td><td>-</td></tr></tbody></table><h3 id="Issues-选项"><a href="#Issues-选项" class="headerlink" title="Issues 选项"></a>Issues 选项</h3><table><thead><tr><th>具体用法</th><th>例子</th></tr></thead><tbody><tr><td>state:open|close</td><td>open|close</td></tr><tr><td>reason:completed</td><td>completed|not planned|reopened</td></tr><tr><td>comments:100..1000</td><td>100..1000, 100, &gt;100, &gt;=100, &lt;100, &lt;=100</td></tr><tr><td>label:bug</td><td>bug, ie6</td></tr><tr><td>author:octocat</td><td>hubot, octocat</td></tr><tr><td>mentions:mattt</td><td>tpope, mattt</td></tr><tr><td>assignee:jim</td><td>twp, jim</td></tr><tr><td>updated:&lt;2020-01-01</td><td>&lt;2020-01-01</td></tr></tbody></table><h3 id="用户选项"><a href="#用户选项" class="headerlink" title="用户选项"></a>用户选项</h3><table><thead><tr><th>具体用法</th><th>例子</th></tr></thead><tbody><tr><td>fullname:MarkShen1992</td><td>Grace Hopper</td></tr><tr><td>location:San</td><td>San Francisco, CA</td></tr><tr><td>followers:20..50</td><td>20..50, &gt;100</td></tr><tr><td>repos:&lt;100</td><td>&lt;100, 100..200</td></tr><tr><td>language:C++</td><td><a href="https://github.com/collections/programming-languages">programming lang</a></td></tr></tbody></table><h3 id="Wiki选项"><a href="#Wiki选项" class="headerlink" title="Wiki选项"></a>Wiki选项</h3><table><thead><tr><th>具体用法</th><th>例子</th></tr></thead><tbody><tr><td>updated:&lt;2023-01-01</td><td>&lt;YYYY-MM-DD</td></tr></tbody></table><h3 id="平时经常使用的一些例子"><a href="#平时经常使用的一些例子" class="headerlink" title="平时经常使用的一些例子"></a>平时经常使用的一些例子</h3><ul><li>2020-01-01之前的仓库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">created:&lt;2020-01-01</span><br></pre></td></tr></table></figure><ul><li>git 学习资料</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 从repo名称和描述中匹配</span><br><span class="line">git 最好 学习 资料</span><br></pre></td></tr></table></figure><ul><li>基于上面的搜索结果, 我想搜索在 <code>readme</code> 文件中包含上面的词汇的项目, 或者在具体的某个文件。做推广, 每个工程的<code>readme</code>要好好设计里面的内容。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git 最好 学习 资料 in:readme</span><br></pre></td></tr></table></figure><ul><li>如何在原来的条件上再过滤，根据 <strong>stars</strong>，<strong>forks</strong>来搜索</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git 最好 学习 资料 in:readme stars:&gt;1000 forks:&gt;1000 language:Java</span><br></pre></td></tr></table></figure><ul><li>搜索自己想要的代码, 一定要<strong>登录</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;after_script:&#x27; + &#x27;stage: deploy&#x27; filename:.gitlab-ci.yml</span><br></pre></td></tr></table></figure><ul><li>博客</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog easily start in:readme stars:&gt;5000</span><br></pre></td></tr></table></figure><h3 id="还有一些例子"><a href="#还有一些例子" class="headerlink" title="还有一些例子"></a><a href="https://gist.github.com/bonniss/4f0de4f599708c5268134225dda003e0">还有一些例子</a></h3><p>完~</p>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Search </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>知识源头集</title>
      <link href="/2023/04/13/%E7%9F%A5%E8%AF%86%E6%BA%90%E5%A4%B4%E9%9B%86/"/>
      <url>/2023/04/13/%E7%9F%A5%E8%AF%86%E6%BA%90%E5%A4%B4%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>如果要研究软件开发艺术，单纯研究代码是不够的，必须同时研究写下那些代码的人。</p></blockquote><blockquote><p>成为一名杰出的程序员其实跟写代码没有太大的关系。做程序员确实要一些技术能力，当然还要有坚韧不拔的精神。但除此之外，更重要的还是要有良好的沟通技巧。</p></blockquote><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ul><li><a href="https://base64.guru/learn/what-is-base64">What is Base64?</a></li></ul><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><ul><li><a href="https://www.json.org/json-zh.html">Json</a></li></ul><h2 id="SaaS"><a href="#SaaS" class="headerlink" title="SaaS"></a>SaaS</h2><ul><li><a href="https://12factor.net/zh_cn/">12-factors</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 知识源头 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>敏捷开发(Agile Develop)</title>
      <link href="/2023/03/12/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91-Agile-Develop/"/>
      <url>/2023/03/12/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91-Agile-Develop/</url>
      
        <content type="html"><![CDATA[<h2 id="敏捷开发相关"><a href="#敏捷开发相关" class="headerlink" title="敏捷开发相关"></a>敏捷开发相关</h2><ul><li><a href="https://agilemanifesto.org/iso/zhchs/manifesto.html">敏捷软件开发宣言</a></li><li><a href="https://agilemanifesto.org/iso/zhchs/principles.html">敏捷软件的十二条原则</a></li><li><a href="https://www.scrumcn.com/agile/scrum/category/scrum-agile-practices">敏捷文章</a></li></ul><h2 id="敏捷工具"><a href="#敏捷工具" class="headerlink" title="敏捷工具"></a>敏捷工具</h2><ul><li><a href="https://trello.com/">Trello</a></li><li><a href="https://www.zentao.net/">bug 记录工具-禅道</a></li><li><a href="https://www.redmine.org/">Redmine</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 敏捷开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我是怎么参与开源项目的</title>
      <link href="/2023/03/08/%E6%88%91%E6%98%AF%E6%80%8E%E4%B9%88%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%9A%84/"/>
      <url>/2023/03/08/%E6%88%91%E6%98%AF%E6%80%8E%E4%B9%88%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<p>大家好，我是 MarkShen, 今天我跟大家聊聊我是如何参与开源项目的。</p><p>说起做参与开源项目这个话题，我从很久之前就开始参与做开源项目了。其实，作为一个小白的话呢？有小白参与开源项目的方式，作为资深开源人也有其他的方式参与开源。今天我就主要跟大家分享作为一个小白，如何参与开源项目。作为小白我们参与开源项目要记住：</p><blockquote><p>要做开源项目，从看开源项目的文档开始。</p></blockquote><p>今天跟大家分享一个我自己的例子。昨天我看到 <a href="https://kubevela.net/zh/docs/"><code>kubevela</code></a> 这个开源项目的文档。再浏览阅读的过程中发现文档中多了一个字 <strong>“的”</strong> 。所以，我就决定晚上给<code>kubevela</code>贡献 PR。简单说下流程：首先找到<code>kubevela</code>这个开源软件的文档的 repo 的<code>Github</code>地址，然后把它<code>fork</code>到我自己的<code>github</code>中，然后再把这个远程仓库的内容下载到我本地，在本地修改完后，再提交到本地代码仓库，再提交到远程代码仓库，<strong>然后提 PR</strong>，如果 PR 通过会有人<code>review</code>你的 PR，<code>review</code>通过后，就会走<code>github</code>的自动化发部流程，将构建好的文档发布到线上环境，这个就是我参与开源项目的整个流程了。构建好后，文档上就会有你的名字，如下图：</p><p><img src="https://user-images.githubusercontent.com/40328786/223740706-b673166c-d7f2-4439-8d24-1e8bc2398e83.png" alt="kubevela"></p><p>其中，要特别强调的是过程是：<a href="https://kubevela.io/docs/contributor/code-contribute#create-a-pull-request"><strong>提 PR</strong></a>。</p><p><img src="https://user-images.githubusercontent.com/40328786/223741927-20787e6d-40ac-4267-b828-f74669403fce.png"></p><p>在提交 PR 的时候一定要符合 <a href="https://kubevela.io/docs/contributor/code-contribute#create-a-pull-request"><code>kubevela贡献的要求</code></a> 这里主要参考<strong>提 PR</strong>这个文档。在这个文档中，会有很多信息值得学习，比如</p><ul><li><a href="https://kubevela.io/docs/contributor/code-conventions#go-code-conventions">Code Conventions</a></li><li><a href="https://google.github.io/eng-practices/review/reviewer/">Code review</a></li><li><a href="https://cbea.ms/git-commit/">Formatting guidelines</a></li><li><a href="https://www.conventionalcommits.org/zh-hans/v1.0.0/">约定式提交</a></li><li><a href="https://oam.dev/">OAM</a></li><li><a href="https://google.github.io/styleguide/">Google Style Guides</a></li><li>在开源项目中学习<ul><li><strong>阅读开源项目中的 pr, issues 和 discussions</strong></li></ul></li><li><a href="https://opensource.guide/how-to-contribute/">How to Contribute to Open Source</a></li></ul><p>完~</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《你安全吗？》中的那些有关网安的技术</title>
      <link href="/2023/03/04/%E3%80%8A%E4%BD%A0%E5%AE%89%E5%85%A8%E5%90%97%EF%BC%9F%E3%80%8B%E4%B8%AD%E7%9A%84%E9%82%A3%E4%BA%9B%E6%9C%89%E5%85%B3%E7%BD%91%E5%AE%89%E7%9A%84%E6%8A%80%E6%9C%AF/"/>
      <url>/2023/03/04/%E3%80%8A%E4%BD%A0%E5%AE%89%E5%85%A8%E5%90%97%EF%BC%9F%E3%80%8B%E4%B8%AD%E7%9A%84%E9%82%A3%E4%BA%9B%E6%9C%89%E5%85%B3%E7%BD%91%E5%AE%89%E7%9A%84%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/40328786/222858115-535baa65-46d3-4e0b-9894-0eb5d3a9ddeb.png"></p><p>2022 年比较火的一部剧《你安全吗》拍的很不错。下面是我看完这部剧整理出来的一些开源项目和一些值得分享的内容：</p><h2 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h2><ul><li><a href="https://sqlmap.org/">sqlmap:Automatic SQL injection and database takeover tool</a></li><li><a href="https://www.computec.ch/projekte/vulscan/">vulscan</a><ul><li><a href="https://github.com/scipag/vulscan">vulscan</a></li></ul></li><li><a href="https://github.com/certbot/certbot">Certbot</a></li><li><a href="http://www.sleuthkit.org/autopsy/">autospy</a><ul><li><a href="https://github.com/sleuthkit/autopsy">autospy_github</a></li></ul></li><li><a href="https://fluxionnetwork.github.io/fluxion/">Fluxion</a></li><li><a href="https://github.com/rajkumardusad/IP-Tracer">IP-Tracer</a></li><li><a href="https://github.com/maurosoria/dirsearch">Web path scanner-dirsearch</a></li><li><a href="https://github.com/traccar/traccar">Traccar GPS Tracking System</a></li><li><a href="https://github.com/SpiderLabs/ModSecurity">SpiderLabs-ModSecurity</a></li></ul><h2 id="技术文章"><a href="#技术文章" class="headerlink" title="技术文章"></a>技术文章</h2><ul><li><a href="https://www.microsoft.com/zh-cn/security/business/security-101/what-is-a-ddos-attack">DDoS 攻击</a></li><li><a href="https://www.cloudflare.com/zh-cn/learning/ddos/dns-amplification-ddos-attack/">DNS 放大攻击</a></li><li><a href="https://www.cnblogs.com/endust/p/11960901.html">HTTP 慢速攻击</a></li><li><a href="https://blog.cloudflare.com/zh-cn/dns-encryption-explained-zh-cn/">DNS 加密说明</a></li><li><a href="https://www.cloudflare.com/learning/ddos/what-is-a-ddos-attack/">What is a DDoS attack?</a><ul><li><a href="https://www.cloudflare.com/zh-cn/learning/ddos/what-is-a-ddos-attack/">中文版</a></li></ul></li><li><a href="https://www.cloudflare.com/zh-cn/learning/">Cloudflare 学习中心</a></li></ul><h2 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h2><ul><li><a href="https://www.cvedetails.com/">https://www.cvedetails.com/</a></li><li><a href="https://deeplearningsystems.ai/">https://deeplearningsystems.ai/</a></li><li><a href="https://cisofy.com/lynis/">https://cisofy.com/lynis/</a></li><li>键盘劫持</li><li>Wifi 探针</li><li><a href="https://book.douban.com/subject/30192800/">《Python 神经网络编程》</a></li><li><a href="https://nmap.org/">https://nmap.org/</a></li><li><a href="https://www.pingplotter.com/">https://www.pingplotter.com/</a></li><li><a href="http://traceroute.org/">http://traceroute.org/</a></li><li><a href="https://www.transcend-info.com/Support/Software-4">数据恢复工具-RecoveRx</a></li><li><a href="https://www.nslookup.io/">nslookup 工具</a></li><li>移动基站</li><li>行车数据</li><li><a href="http://www.55vi.com/">GPS system</a></li><li>自动 P 图</li><li>生活缴费公众号</li><li>12123 交管 app</li><li>垃圾桶潜水</li><li><a href="https://www.kismetwireless.net/">Kismet is a sniffer, WIDS, and wardriving tool for Wi-Fi, Bluetooth, Zigbee, RF, and more</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 开源软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不公平优势(Unfair Advantage)</title>
      <link href="/2023/02/19/%E4%B8%8D%E5%85%AC%E5%B9%B3%E4%BC%98%E5%8A%BF-Unfair-Advantage/"/>
      <url>/2023/02/19/%E4%B8%8D%E5%85%AC%E5%B9%B3%E4%BC%98%E5%8A%BF-Unfair-Advantage/</url>
      
        <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/40328786/219921706-af96536f-aa41-49d6-b0f7-da3a08dbdf27.jpeg" alt="MILES"></p><blockquote><p>从事商业活动，就是整合优势资源</p></blockquote><h2 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h2><blockquote><p>并不是要具备所有前述不公平优势才能成功。最佳策略是在选择创业的时候，选择的对象拥有你没有的不公平优势，实现优势互补。</p></blockquote><h2 id="动机：你为什么会做某件事情"><a href="#动机：你为什么会做某件事情" class="headerlink" title="动机：你为什么会做某件事情"></a>动机：你为什么会做某件事情</h2><ul><li><a href="https://bigfive-test.com/test">Big 5 personality test</a><ul><li>开放性</li><li>责任心</li><li>外倾性</li><li>宜人性</li><li>神经质性</li></ul></li></ul><blockquote><p>创业者需要保持好奇心，有自己的想法，不惧体验新事物。</p></blockquote><ul><li><a href="https://www.themyersbriggs.com/en-US/Products-and-Services/Myers-Briggs">Myers-Briggs assessment</a></li></ul><h2 id="思维模式（地基部分最为重要）"><a href="#思维模式（地基部分最为重要）" class="headerlink" title="思维模式（地基部分最为重要）"></a>思维模式（地基部分最为重要）</h2><ul><li>固定型思维</li><li>成长型思维</li><li>现实-成长型思维(贴近实际，靠谱)<ul><li>远见</li><li>足智多谋</li><li>不断成长和终身学习</li><li>勇气和毅力</li></ul></li></ul><blockquote><p>如果你对某件事情足够渴望，甚至会获得改变人生的力量。</p></blockquote><h2 id="金钱"><a href="#金钱" class="headerlink" title="金钱"></a>金钱</h2><blockquote><p>想要赚钱，先要有钱。</p></blockquote><blockquote><p>谈到金钱的时候，我们通常指的是财富。然而，财富不仅仅是金钱，还包括你所有的任何资产（房子，土地，股票，以及你可以变卖还钱的任何其他东西）。金钱还有另一个名字-资本。</p></blockquote><blockquote><p>所有人都有三类资本：经济资本，社会资本和文化资本。其中，社会资本和文化资本属于地位。</p></blockquote><ul><li>经济资本：金钱</li><li>社会资本：我们的朋友和盟友形成的关系网络</li><li>文化资本：基本上包含其他能够让我们获得尊重和声望的一切，比如知识，资质，头衔，职业，言谈举止，口音，衣着品味，肢体语言，爱好等。</li></ul><h3 id="生命周期和烧钱速度"><a href="#生命周期和烧钱速度" class="headerlink" title="生命周期和烧钱速度"></a>生命周期和烧钱速度</h3><blockquote><p>生命周期：在创业公司耗尽资金被迫关闭前创业者所拥有的时间。烧钱速度指创业公司每个月损失的金钱数量。</p></blockquote><blockquote><p>简单来说， 金钱越多意味着生命周期越长。另外，烧钱速度越慢，生命周期越长。</p></blockquote><blockquote><p>不要过度节俭，该花的钱还是要花。</p></blockquote><blockquote><p>我们应该关注那些比我们领先 5-10 年的普通成功者，而非那些亿万富翁。</p></blockquote><h3 id="将钱作为你的不公平优势"><a href="#将钱作为你的不公平优势" class="headerlink" title="将钱作为你的不公平优势"></a>将钱作为你的不公平优势</h3><blockquote><p>一般来讲，判断的经验法则是，如果辞去全职工作，你需要至少 6-18 个月的生命周期，也就是说，你的金钱足够支撑这段时间。要判断金钱是否是你的不公平优势，请思考以下问题：</p></blockquote><ul><li>你现在的账户中是否有这笔钱？</li><li>你是否有朋友和家人可以预先投资这笔钱？</li><li>你可以通过目前的工作攒下这笔钱吗？</li></ul><blockquote><p>如果你有足够的金钱来启动自己的公司，并且在你所需的生命周期内提供支持，那么非常好。金钱就是你的不公平优势。那如果没有，你该做些什么呢？</p></blockquote><ul><li>尽量减少生活开支</li><li>学习营销和销售知识</li><li>筹集资金</li><li>学习编程</li><li>开启自由职业</li></ul><blockquote><p>培养人的“饥饿感” （很重要）</p></blockquote><h2 id="智力和洞察力"><a href="#智力和洞察力" class="headerlink" title="智力和洞察力"></a>智力和洞察力</h2><blockquote><p>智力的多个维度，智商，书本智力，社会智力和创新智力。</p></blockquote><ul><li><p>书本智力：对理论的理解能力。理解世界的工具</p><ul><li>刨根问底学习者</li></ul></li><li><p>社会智力：课堂之外学到的知识称为“社会智力”，社会智力主要指人际交往能力。需要通过实践积累，要提升社会智力，还要依靠我们感悟自身的生活经验或者学习他人的生活经验</p><ul><li>社交和情感智力</li><li>常识</li><li>拆穿假话的能力</li></ul></li><li><p>创新智力</p><ul><li>将分散在不同领域中的点联系起来，提出独特的解决方案。</li></ul></li><li><p>洞察力</p><ul><li>透过现象看本质的能力，是优先于他人东西事态的能力。</li><li>怎么获得洞察力？<ul><li>与潜在的客户沟通。</li><li>关注用户，如果你就是目标用户，那就更好了，可以深入了解客户需求，以小见大，解决用户群体问题。</li><li>我们只有具备行业工作经历，才能获得宝贵的洞察力，看到痛点，发现工作中那些环节效率较低，然后设计更好的产品或者流程来解决问题。</li><li>痛点，痒点和爽点</li></ul></li></ul></li></ul><blockquote><p>我是在正确的时间，出现在了正确的地方</p></blockquote><blockquote><p>评估自己创造力和社会智力可以思考的问题</p></blockquote><ul><li>你与他人合作的能力如何？</li><li>你的人机关系如何？</li><li>你是否让身边的人发现了他们更好的一面？</li><li>你是否能正确认识自己的情绪？</li><li>你是否能仅凭直觉便洞悉别人的意图？换句话说，你是否能经常察觉对方的恶意？</li></ul><blockquote><p>要提升智力和洞察力，必须做到以下几点：</p></blockquote><ul><li>培养好奇心</li><li>多问问题</li><li>多做试验</li><li>关心他人的感受和事物对他们情感的影响</li><li>做个有心人，留意他人谈到的哪些事情做起来很麻烦或者不方便，做好积累。这将成为洞察力的富矿</li><li>掌握自己的情绪和心情，确保自己的言行不受它们左右</li></ul><h2 id="位置和运气"><a href="#位置和运气" class="headerlink" title="位置和运气"></a>位置和运气</h2><blockquote><p>想要获取非比寻常的成功，需要两个条件：第一，天时地利；第二，利用好第一个条件。位置和运气一位置天时地利，即在正确的时间出现在正确的位置</p></blockquote><blockquote><p>卵巢彩票</p></blockquote><ul><li>开店选址</li><li>企业趋向于向特定地区聚集</li><li>行业代名词</li><li>STEM 学科<ul><li>科学</li><li>技术</li><li>工程</li><li>数学</li></ul></li></ul><h3 id="创业公司集群"><a href="#创业公司集群" class="headerlink" title="创业公司集群"></a>创业公司集群</h3><ul><li><a href="https://m.thepaper.cn/baijiahao_16189417">伦敦东区，破茧重生的「小硅谷」</a></li><li><a href="https://www.sohu.com/a/483566001_121123890">硅沼</a></li><li><a href="https://oxfordsp.com/">牛津科学园</a></li><li><a href="https://www.entrepreneurship.manchester.ac.uk/">Masood Entrepreneurship Centre</a></li><li><a href="https://mcieb.org/">曼彻斯特中国创新创业基地 （MCIEB）</a></li><li><a href="https://www.thepaper.cn/newsDetail_forward_18884514">英国「M4 科创走廊」的心脏，为何是小城布里斯托尔？</a><ul><li>中国城市中心</li></ul></li><li><a href="https://finance.sina.cn/2022-08-15/detail-imizirav8245196.d.html">英国硅谷”的心脏，为何是小城布里斯托尔？</a></li><li><a href="https://www.thepaper.cn/newsDetail_forward_1654183">边度假边工作：数字游民的可持续间隔年</a></li></ul><blockquote><p>位置决定你所处的氛围和环境。我们的水平是与我们相处时间最长的 5 个人的平均水平。此外，所谓位置，不一定是实际存在的地点。位置还可以是你所处的环境。在虚拟空间中，我们拥有更强的掌控力，可以选择社交媒体上关注和添加好友的对象，可以选择我们接收的内容，所以可以主动营造和设计我们所处的环境。在虚拟世界中，位置的重要性以搜索引擎排名的形式体现出来。位置可以让你获得资本（投资人和风险投资公司往往集中在创业中心），高技能人才和其他重要<strong>资源</strong>。</p></blockquote><ul><li><a href="https://www.tmtpost.com/3771913.html">科技公司崛起，班加罗尔成为“印度硅谷”？</a></li></ul><blockquote><p>你的受众在哪里，你就该在哪里</p></blockquote><ul><li><a href="https://myinstagirls.com/zh/cn-huda-kattan/">胡达·卡坦 (Huda Kattan)</a></li><li><a href="https://hudabeauty.com/us/en_US/home">美妆</a></li></ul><blockquote><p>亚马逊-找到万事俱备的地方</p></blockquote><blockquote><p>Basecamp-摆脱对实体办公室的迷恋</p></blockquote><h3 id="运气"><a href="#运气" class="headerlink" title="运气"></a>运气</h3><blockquote><p>我发现运气其实很容易预测。如果你想更走运，就多尝试几次，更加积极主动，多抛投露面。</p></blockquote><blockquote><p>无论你的技能多么出众，决心多么坚定，如果缺少了运气，那么终将一事无成。</p></blockquote><ul><li><a href="https://www.idealab.com/cn/">idealab</a></li><li><a href="https://www.goto.com/">goto</a></li><li><a href="https://www.londonstockexchange.com/raise-finance/equity/main-market/high-growth-segment">High Growth Segment</a></li></ul><h3 id="抓住时机"><a href="#抓住时机" class="headerlink" title="抓住时机"></a>抓住时机</h3><ul><li>时机<ul><li>太早和太迟都不行。最理想的情况是瞄准一个规模不大但是不断增长的市场。这时候进入市场才算刚好</li></ul></li><li>团队和执行</li><li>创业点子</li></ul><p>运气、时机和位置的例子</p><ul><li>任天堂——捉住历史性时机</li><li>Deliveroo——准备好点子，只待正确时机</li></ul><h3 id="如何变得更加幸运"><a href="#如何变得更加幸运" class="headerlink" title="如何变得更加幸运"></a>如何变得更加幸运</h3><blockquote><p>财布施，法布施，无畏布施</p></blockquote><blockquote><p>在生活中创造好运的四大基本法则</p></blockquote><ul><li>最大限度地利用所有机会</li><li>相信你的直觉和预感，尤其当你已经有过类似的幸运经历时</li><li>期待幸运的到来</li><li>化厄运为好运</li><li>增加尝试的次数</li></ul><h2 id="教育和专长"><a href="#教育和专长" class="headerlink" title="教育和专长"></a>教育和专长</h2><h3 id="教育"><a href="#教育" class="headerlink" title="教育"></a>教育</h3><blockquote><p>走出校门并不意味着教育的终止，我们无时不刻不在学习，看着两本书，有字的书和没有字的书。接受良好的教育就是巨大的不公平优势</p></blockquote><ul><li><a href="https://debretts.com/">德倍礼</a>每年都会评选出在英国最具影响力的人物</li></ul><h4 id="知识、人脉、标志"><a href="#知识、人脉、标志" class="headerlink" title="知识、人脉、标志"></a>知识、人脉、标志</h4><ul><li><p>知识，接受教育最明确的目的。是我们在学校学到的内容，包括识字，算数以及与世界有关的其他内容。</p></li><li><p>人脉，为什么很多人要非常努力进名校，进大厂，因为可以见到非常优秀的人。<strong>你要见到优秀的人，首先你得先变成优秀的人。</strong></p></li><li><p>标志，信誉就是向别人展示你具备从事某些工作的技能和智慧</p></li><li><p><a href="https://www.technologyreview.com/2020/02/26/906029/aileen-lee-92/">Aileen Lee ’92</a></p></li><li><p><a href="http://www.sagemetering.com.cn/">赛捷计量仪器</a></p></li></ul><h4 id="技术不公平优势"><a href="#技术不公平优势" class="headerlink" title="技术不公平优势"></a>技术不公平优势</h4><ul><li><a href="https://logos.fandom.com/wiki/Google">backrub</a></li><li><a href="https://www.unrealengine.com/zh-CN/developer-interviews/park-beyond-is-a-theme-park-sim-that-allows-its-players-to-create-impossible-experiences">Park Beyond</a></li><li><a href="https://www.deepmind.com/">DeepMind</a></li><li><a href="https://github.com/deepmind">DeepMind Github</a></li></ul><h3 id="专长"><a href="#专长" class="headerlink" title="专长"></a>专长</h3><blockquote><p>真正的学习始于你将理论知识付诸实践，通过现实世界的反馈来了解理论的应用情况。只有这样，你才能够成为真正的专家</p></blockquote><blockquote><p>只要在某个领域完成工作的质量远远优于大部分普通人，那么就可以被称为该领域的专家</p></blockquote><blockquote><p>如果我们在某个领域有明确且可衡量的成果，那么就更容易成为或者说被认为是该领域的专家</p></blockquote><blockquote><p>每遇到 20 岁出头的年轻人，我们总建议他们在择业的时候不要选择报酬最高的工作，而是要选择能够学到最多东西的工作。通过大量学习，年轻人可以发展某个行业的专长，可以为今后的职业技能打下坚实的基础，可以获得极具价值的简介。</p></blockquote><blockquote><p>积极在生活中用我们学到的知识，坚持终身学习</p></blockquote><blockquote><p>要成为专家，你必须长期深耕，苦心钻研，不断精进，才能做到专家的位置</p></blockquote><h3 id="将教育和专长作为你的不公平优势"><a href="#将教育和专长作为你的不公平优势" class="headerlink" title="将教育和专长作为你的不公平优势"></a>将教育和专长作为你的不公平优势</h3><blockquote><p>无论何时，选择继续学习，提高自己的知识水平和技能水平，永远不会太迟。</p></blockquote><blockquote><p>思考几个问题：</p></blockquote><ul><li>你是否具备自己创办公司所需的技能？</li><li>你是否知道自己在哪方面是专家？</li><li>你想成为哪方面的专家？</li></ul><blockquote><p>成为专家要做什么？</p></blockquote><ul><li>在线学习</li><li>阅读<ul><li><a href="https://mp.weixin.qq.com/s/OPvETiG5S9ohgL3-hIHk-w">阅读通往自由</a></li></ul></li><li>结识导师<ul><li>找导师的时候，将目标锁定为那些领先自己 2-5 年的人，因为他们可以教给你最为实用的技能</li></ul></li><li>自己动手<ul><li>费曼学习法，讲是最好的学【直播方式】</li><li>写文章输出</li><li>录制视频课</li></ul></li></ul><blockquote><p>选择领域</p></blockquote><ul><li>选择那些有人才需求而你又有浓厚兴趣的领域</li><li>对于你有天赋并乐意花时间去学习的事情，要加倍努力</li><li>对于专长之外的领域，要依靠他人，寻求帮助。你可能在某个领域具备了洞察力，但是还没有培养出专长</li></ul><blockquote><p>跨学科思考往往是创造力的源泉，所以不要把思维局限于某个学科或者某种专业知识。博览群书，广泛地涉猎各种知识有助于我们创造更大的价值</p></blockquote><h2 id="地位"><a href="#地位" class="headerlink" title="地位"></a>地位</h2><blockquote><p>更多时候，社会奖励是功绩的外在表现，而非功绩本身</p></blockquote><blockquote><p>你的地位就是你的个人品牌，它指人们如何看待你，你在社会中所处的位置，你的外表，性别，年龄，衣着，站姿，谈吐。它也指你在社会中的可信度</p></blockquote><blockquote><p>社会学家讲地位定义为大家眼中你相对别人的社会价值，你可以为大家贡献什么</p></blockquote><h3 id="外在地位"><a href="#外在地位" class="headerlink" title="外在地位"></a>外在地位</h3><blockquote><p>地位是他认为你在为其增加价值方面具备的能力。</p></blockquote><ul><li><p>文化资本与我们的社会阶层（甚至是所处的亚文化）有关，体现出社会阶层的是我们的口音，资历，品味，爱好，消遣方式，谈话方式，衣着方式，肢体语言，私人物品等</p></li><li><p><a href="https://www.gov.uk/government/organisations/social-mobility-commission">social-mobility-commission</a></p></li></ul><blockquote><p>社会资本的第三种方式，我们各种人际关系，人脉。</p></blockquote><ul><li><a href="https://spanx.com/">spanx</a></li></ul><blockquote><p>与对方处于同一亚文化或者阶层有助于你们建立关系，因为你们之间可能会存在共同点：对音乐和时尚有相似的品味或者相似的兴趣和爱好</p></blockquote><ul><li><a href="https://tellymix.co.uk/tag/the-x-factor">The X Factor news</a></li></ul><blockquote><p>建立人脉的关键在于积极主动地形成和维持<strong>互惠互利</strong>的关系。</p></blockquote><h3 id="内在地位"><a href="#内在地位" class="headerlink" title="内在地位"></a>内在地位</h3><blockquote><p>如果你觉得自己因为过往的罪过，恶习或者其他原因而不值得爱，那么你要明白，只要你意识到自己的问题，并且愿意改变，你依旧值得自爱</p></blockquote><ul><li>自信</li><li>专长</li><li>要记住别人的名字</li><li><a href="https://mp.weixin.qq.com/s/FS4yGrgGOBfqD6ghiGSbDQ">《了凡四训》</a></li></ul><h4 id="冒充者综合征"><a href="#冒充者综合征" class="headerlink" title="冒充者综合征"></a>冒充者综合征</h4><blockquote><p>“经常有人说，‘所有的创造者偶尔都会觉得自己是骗子’。我的感受是：‘天啊，我从来没有觉得自己是骗子……这么说，我真的是创造者吗？’但我转念一想：‘算了，别考虑这些了。我很棒！’”</p></blockquote><ul><li><a href="https://www.chronicle.com/">高等教育纪事报</a></li><li><a href="https://movie.douban.com/subject/4919240/">与卡戴珊一家同行 第一季 Keeping Up with the Kardashians</a></li><li><a href="https://www.thepaper.cn/newsDetail_forward_8742635">澎湃记者教你如何做好人物采访</a></li><li><a href="https://www.interviewmagazine.com/">Interview</a></li><li><a href="https://www.infzm.com/">南方周末</a></li></ul><h2 id="本书中一些用到的网站"><a href="#本书中一些用到的网站" class="headerlink" title="本书中一些用到的网站"></a>本书中一些用到的网站</h2><ul><li><a href="https://www.just-eat.co.uk/">just eat</a></li><li><a href="https://www.crunchbase.com/organization/fare-exchange-network">fare exchange</a></li><li><a href="https://www.washplus.org/">washplus</a></li><li><a href="https://www.uber.com/">Uber</a></li><li><a href="https://www.uhubs.co/">uhubs</a></li><li><a href="https://www.snapchat.com/">snapchat</a></li><li><a href="https://tinder.com/">Tinder</a></li><li><a href="https://www.insider.com/author/business-insider">Business Insider</a></li><li><a href="https://www.imdb.com/title/tt0423776/">The X Factor</a></li><li><a href="https://www.airbnb.com/">Airbnb</a></li><li><a href="https://basecamp.com/">Basecamp</a></li><li><a href="https://www.apple.com/">Apple</a></li><li><a href="https://customerservice.costco.com/">Costco</a></li><li><a href="https://www.wholefoodsmarket.co.uk/">whole foods</a></li><li><a href="https://www.zoopla.co.uk/">zoopla</a></li><li><a href="https://www.crunchbase.com/">Crunchbase</a></li><li><a href="https://stripe.com/">stripe</a></li><li><a href="https://www.crunchbase.com/organization/auctomatic">auctomatic</a></li><li><a href="https://btyoungscientist.com/">btyoungscientis</a></li><li><a href="https://www.ycombinator.com/">Y Combinator</a></li><li><a href="https://walkerandcompany.com/">Walker &amp; Company</a></li><li><a href="https://foursquare.com/">Foursquare is the leading cloud-based location technology platform for unlocking the power of places and movement.</a></li><li><a href="https://www.stanford.edu/about/">斯坦福</a></li><li><a href="https://www.kleinerperkins.com/about">KLEINER PERKINS</a></li></ul><h2 id="本书中引用的书籍"><a href="#本书中引用的书籍" class="headerlink" title="本书中引用的书籍"></a>本书中引用的书籍</h2><ul><li><a href="https://book.douban.com/subject/36074115/">混序小团队管理</a></li><li><a href="https://book.douban.com/subject/30184215/">重来</a></li><li><a href="https://book.douban.com/subject/26952718/">好好学习</a></li><li><a href="https://book.douban.com/subject/26873486/">运营之光</a></li><li><a href="https://book.douban.com/subject/35218970/">非线性增长</a></li><li><a href="https://book.douban.com/subject/10773362/">随机漫步的傻瓜</a></li><li><a href="https://book.douban.com/subject/25863621/">Outliers: The Story of Success</a></li><li><a href="https://book.douban.com/subject/24530336/">至关重要的关系</a></li><li><a href="https://www.forbeschina.com/">福布斯</a></li><li><a href="https://book.douban.com/subject/1837006/">人性的弱点</a></li><li><a href="https://book.douban.com/subject/24753752/">正能量 2:幸运的方法</a></li><li><a href="https://book.douban.com/subject/34326931/">掌控习惯</a></li></ul><h2 id="纪录片"><a href="#纪录片" class="headerlink" title="纪录片"></a>纪录片</h2><ul><li><a href="https://www.bilibili.com/bangumi/play/ss39573">卧底老板</a></li><li><a href="https://www.imdb.com/title/tt0443370/">Dragon’s Den</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的正则表达式</title>
      <link href="/2023/02/15/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2023/02/15/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="常用的正则表达式"><a href="#常用的正则表达式" class="headerlink" title="常用的正则表达式"></a>常用的正则表达式</h2><blockquote><p><a href="https://www.runoob.com/regexp/regexp-tutorial.html">正则表达式教程</a></p></blockquote><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions">js 中使用正则表达式</a></p></blockquote><h3 id="Windows-文件名正则表达式校验"><a href="#Windows-文件名正则表达式校验" class="headerlink" title="Windows 文件名正则表达式校验"></a>Windows 文件名正则表达式校验</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> windowsFileNamePattern = <span class="regexp">/[\\/:*?&quot;&lt;&gt;|]+/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试字符串中是否含有上面的字符，有，返回true, 否则，返回false</span></span><br><span class="line">windowsFileNamePattern.<span class="title function_">test</span>(<span class="string">&#x27;j&lt;js&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">windowsFileNamePattern.<span class="title function_">test</span>(<span class="string">&#x27;\\fa&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">windowsFileNamePattern.<span class="title function_">test</span>(<span class="string">&#x27;s/js&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">windowsFileNamePattern.<span class="title function_">test</span>(<span class="string">&#x27;s:js&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">windowsFileNamePattern.<span class="title function_">test</span>(<span class="string">&#x27;s*js&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">windowsFileNamePattern.<span class="title function_">test</span>(<span class="string">&#x27;s?js&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">windowsFileNamePattern.<span class="title function_">test</span>(<span class="string">&#x27;s&quot;js&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">windowsFileNamePattern.<span class="title function_">test</span>(<span class="string">&#x27;da&gt;s&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">windowsFileNamePattern.<span class="title function_">test</span>(<span class="string">&#x27;d|fd&#x27;</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年俞老师跨年直播内容笔记</title>
      <link href="/2023/01/01/2022%E5%B9%B4%E4%BF%9E%E8%80%81%E5%B8%88%E8%B7%A8%E5%B9%B4%E7%9B%B4%E6%92%AD%E5%86%85%E5%AE%B9%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/01/01/2022%E5%B9%B4%E4%BF%9E%E8%80%81%E5%B8%88%E8%B7%A8%E5%B9%B4%E7%9B%B4%E6%92%AD%E5%86%85%E5%AE%B9%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="人是-♥-的动物"><a href="#人是-♥-的动物" class="headerlink" title="人是 ♥ 的动物"></a>人是 ♥ 的动物</h2><h2 id="时间就是一个容器。你打算在新的一年往里面放什么东西呢？"><a href="#时间就是一个容器。你打算在新的一年往里面放什么东西呢？" class="headerlink" title="时间就是一个容器。你打算在新的一年往里面放什么东西呢？"></a>时间就是一个容器。你打算在新的一年往里面放什么东西呢？</h2><ul><li>个人的维度和家人的维度<ul><li>一屋不扫，何以扫天下</li></ul></li><li>事业进步<ul><li>稳定的工作</li><li>有没有升职加薪</li><li>个人能力有没有提升</li><li>能不能量化</li></ul></li><li>思想、见识的提升和进步<ul><li>读好书</li><li>找有见解的人听他们聊天，听他们讲课，视频内容</li><li>独立思考，独立判断的能力</li></ul></li><li>自律，自控<ul><li>事能知足心常乐，人到无求品自高</li><li>规定好的任务有没有完成，主次分明地完成(80%，90%，100%)</li><li>一个人成熟的标志，能做自己不愿意做但必须做的事情，能和自己不愿意打交道但必须打交道的人打交道</li><li>遇到苦难，挫折，坚韧不拔</li><li>能控制自己的情绪</li></ul></li><li>心态<ul><li>活在当下，创造积极，开心的 moments</li><li>积极，乐观的心态</li></ul></li><li>每年给自己留下什么回忆，下面这些都是俞老师的内容，你的呢？<ul><li>时间过去了，留下了什么？</li><li>这一年过去了，给自己打个分：10 分制，为什么打这些分？</li><li>读书，精读了多少本，略读了多少本</li><li>对谈的人，留下的文字</li><li>锻炼身体，同时听得到，或者播客</li><li>日记，文学，<strong>老俞闲话</strong>（公众号）</li><li>出版的书</li><li>公益活动，老师培训</li><li>请专家，名人给山区的孩子们讲课</li><li>和朋友的聚会，和家人的关系</li><li>不做不接地气的事情</li><li><strong>平常心</strong></li></ul></li></ul><h2 id="如何度过-2023-年"><a href="#如何度过-2023-年" class="headerlink" title="如何度过 2023 年"></a>如何度过 2023 年</h2><ul><li><strong>内心的期许，期待，心里足够地想做</strong></li><li><strong>用 2 天的时间好好想下今年要做的事情</strong></li><li><strong>积极的</strong>心态</li><li>胸怀：做事情不小气，要大气，自黑，自嘲，不记仇<ul><li><strong>拿得起，放得下，入得去，出得来</strong></li></ul></li><li>规划<ul><li>年、季度、月、周、日</li><li>任何得计划，规划都要切合实际，切实可行，能落地</li><li>在定目标的时候，使用<strong>SMART</strong>原则</li><li>紧急，重要四象限</li></ul></li><li>执行<ul><li>做之前想清楚</li></ul></li><li>学会纠错<ul><li>自我反省的能力</li></ul></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>俞老师抖音直播回放，大家如果感兴趣的话，可以再看下原直播回放内容~</p>]]></content>
      
      
      <categories>
          
          <category> 俞敏洪 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 跨年直播 </tag>
            
            <tag> 俞敏洪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用网络命令</title>
      <link href="/2022/12/25/Linux%E5%B8%B8%E7%94%A8%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/12/25/Linux%E5%B8%B8%E7%94%A8%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux-常用网络命令"><a href="#Linux-常用网络命令" class="headerlink" title="Linux 常用网络命令"></a>Linux 常用网络命令</h3><h4 id="Linux-命令学习方法"><a href="#Linux-命令学习方法" class="headerlink" title="Linux 命令学习方法"></a>Linux 命令学习方法</h4><p>Linux 命令都可以通过 Linux 提供的手册自己学习，一般来讲有三种方式查看命令的用法，如下：</p><p>就拿最常用的 <code>ls</code> 命令来举例子吧</p><p>第一种：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>第三种：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>大家可以使用 <code>命令 --help</code>, <code>info + 命令</code>, <code>man + 命令</code> 三种方式来学习新的命令，大家也可以使用 <a href="https://www.kernel.org/doc/man-pages/">The Linux man-pages project</a> 来查找对应的命令。说到这里，让我们来学习下 Linux 的常用网路命令吧</p><h4 id="Linux-常用网络命令-1"><a href="#Linux-常用网络命令-1" class="headerlink" title="Linux 常用网络命令"></a>Linux 常用网络命令</h4><p>今天主要跟大家分享下 Linux 系统常用网络的命令:</p><ul><li>ifconfig</li><li>ifup</li><li>ifdown</li><li>ip</li><li>route</li><li>ip route</li><li>ping</li><li>traceroute</li><li>netstat</li><li>nslookup</li></ul><h5 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h5><p>查看所有网卡信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ ifconfig -a</span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.3.2  netmask 255.255.255.0  broadcast 192.168.3.255</span><br><span class="line">        ether b4:b6:86:<span class="built_in">fc</span>:12:07  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.56.1  netmask 255.255.255.0  broadcast 192.168.56.255</span><br><span class="line">        inet6 fe80::6715:52aa:2c80:112f  prefixlen 64  scopeid 0xfd&lt;compat,<span class="built_in">link</span>,site,host&gt;</span><br><span class="line">        ether 0a:00:27:00:00:03  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth2: flags=64&lt;RUNNING&gt;  mtu 1500</span><br><span class="line">        inet 169.254.202.32  netmask 255.255.0.0</span><br><span class="line">        inet6 fe80::971b:12ac:b88c:961d  prefixlen 64  scopeid 0xfd&lt;compat,<span class="built_in">link</span>,site,host&gt;</span><br><span class="line">        ether 7c:76:35:43:62:9f  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth3: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.22.96.1  netmask 255.255.240.0  broadcast 172.22.111.255</span><br><span class="line">        inet6 fe80::584c:ccd0:e077:634c  prefixlen 64  scopeid 0xfd&lt;compat,<span class="built_in">link</span>,site,host&gt;</span><br><span class="line">        ether 00:15:5d:41:e6:ee  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 1500</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0xfe&lt;compat,<span class="built_in">link</span>,site,host&gt;</span><br><span class="line">        loop  (Local Loopback)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">wifi0: flags=64&lt;RUNNING&gt;  mtu 1500</span><br><span class="line">        inet 169.254.169.148  netmask 255.255.0.0</span><br><span class="line">        ether 7c:76:35:43:62:9b  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">wifi1: flags=64&lt;RUNNING&gt;  mtu 1500</span><br><span class="line">        inet 169.254.112.16  netmask 255.255.0.0</span><br><span class="line">        ether 7c:76:35:43:62:9c  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">wifi2: flags=64&lt;RUNNING&gt;  mtu 1500</span><br><span class="line">        inet 169.254.241.4  netmask 255.255.0.0</span><br><span class="line">        ether 7e:76:35:43:62:9b  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>其余，参数大家可以通过手册自行学习，这里要大家注意下 <a href="https://www.cloudflare.com/learning/network-layer/what-is-mtu/">MTU</a> 这个关键参数，大家可以根据着篇 blog 进行学习。</p><p>大家也可以参照<a href="https://www.geeksforgeeks.org/ifconfig-command-in-linux-with-examples/">这篇 Blog</a> 学习这个命令。</p><h5 id="ifup"><a href="#ifup" class="headerlink" title="ifup"></a>ifup</h5><p>激活网络接口<code>eth0</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ ifup eth0</span><br></pre></td></tr></table></figure><p>大家也可以参照<a href="https://www.geeksforgeeks.org/ifup-command-in-linux-with-examples/">这篇 Blog</a> 学习这个命令。</p><h5 id="ifdown"><a href="#ifdown" class="headerlink" title="ifdown"></a>ifdown</h5><p>禁用网络端口<code>eth0</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ ifdown eth0</span><br></pre></td></tr></table></figure><p>大家也可以参照<a href="https://www.geeksforgeeks.org/ifdown-command-in-linux-with-examples/">这篇 Blog</a> 学习这个命令。</p><h5 id="ip"><a href="#ip" class="headerlink" title="ip"></a>ip</h5><p>查看机器所有网卡的 ip</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ ip a</span><br></pre></td></tr></table></figure><p>大家也可以参照<a href="https://www.geeksforgeeks.org/ip-command-in-linux-with-examples/">这篇 Blog</a> 学习这个命令。</p><h5 id="route"><a href="#route" class="headerlink" title="route"></a>route</h5><p>查看 Linux 内核路由表</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ route</span><br></pre></td></tr></table></figure><p>大家也可以参照<a href="https://www.geeksforgeeks.org/route-command-in-linux-with-examples/">这篇 Blog</a> 学习这个命令。</p><h5 id="ip-route"><a href="#ip-route" class="headerlink" title="ip route"></a>ip route</h5><p>查看默认路由表（main）路由</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ ip route</span><br></pre></td></tr></table></figure><p>大家也可以参照<a href="https://blog.csdn.net/zhongmushu/article/details/108220232">这篇 Blog</a> 学习这个命令。</p><h5 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h5><p>查看网络链路是否通</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ ping www.baidu.com</span><br><span class="line">shenjy@DESKTOP-MCQT724:~$ ping localhost</span><br><span class="line">shenjy@DESKTOP-MCQT724:~$ ping 127.0.0.1</span><br></pre></td></tr></table></figure><p>大家也可以参照<a href="https://www.geeksforgeeks.org/ping-command-in-linux-with-examples/">这篇 Blog</a> 学习这个命令。</p><h5 id="traceroute"><a href="#traceroute" class="headerlink" title="traceroute"></a>traceroute</h5><p>追踪网络数据包的路由途径，也可以顺道学习下 <code>tracert</code> 这个命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ traceroute www.baidu.com</span><br></pre></td></tr></table></figure><p>大家也可以参照<a href="https://www.geeksforgeeks.org/traceroute-command-in-linux-with-examples/">这篇 Blog</a> 学习这个命令。</p><h5 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h5><p>Print network connections, routing tables, interface statistics, masquerade connections, and multicast member‐<br>ships</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ netstat -i</span><br><span class="line">Kernel Interface table</span><br><span class="line">Iface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg</span><br><span class="line">eth0      1500        0      0      0 0             0      0      0      0 BMRU</span><br><span class="line">eth1      1500        0      0      0 0             0      0      0      0 BMRU</span><br><span class="line">eth3      1500        0      0      0 0             0      0      0      0 BMRU</span><br><span class="line">lo        1500        0      0      0 0             0      0      0      0 LRU</span><br></pre></td></tr></table></figure><p>大家也可以参照<a href="https://www.geeksforgeeks.org/netstat-command-linux/">这篇 Blog</a> 学习这个命令。</p><h5 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h5><p>Nslookup is a program to query Internet domain name servers. Nslookup has two modes: interactive and non-interactive.<br>Interactive mode allows the user to query name servers for information about various hosts and domains or to print a list<br>of hosts in a domain. Non-interactive mode is used to print just the name and requested information for a host or domain.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">shenjy@DESKTOP-MCQT724:~$ nslookup baidu.com</span><br><span class="line">Server:         8.8.8.8</span><br><span class="line">Address:        8.8.8.8#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:   baidu.com</span><br><span class="line">Address: 39.156.66.10</span><br></pre></td></tr></table></figure><p>大家也可以参照<a href="https://www.geeksforgeeks.org/nslookup-command-in-linux-with-examples/">这篇 Blog</a> 学习这个命令。</p><p>以上就是一些常用的 Linux 网络命令了，但是还没有完，以后如果遇到一些新的命令，我还会继续往这里追加的, 也欢迎大家留言~</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> network command </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins持续集成</title>
      <link href="/2022/12/16/Jenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
      <url>/2022/12/16/Jenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</url>
      
        <content type="html"><![CDATA[<h3 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h3><p>由于近期部门在用 <code>Java</code> 系框架 <code>springboot</code> 做一个项目, 程序发布流程太繁琐了. 下面我说下我司目前的部署步骤:</p><ul><li>使用本地 <code>IdeaJ</code> 或者 <code>Maven</code> 命令将源代码打成 <code>jar</code> 包</li><li>然后把 <code>jar</code> 包上传到服务器上</li></ul><p>最后, 启动与 <code>Java</code> 包配套的启动脚本启动程序</p><p>也就是说, 只要我写完一些功能, 想把功能发布到测试环境给前端同学调用, 我就得执行上面的三个步骤. 我觉得太麻烦了, 所以我打算使用 <code>Jenkins</code> 和 <code>Gitlab</code> 实现只要我一提交代码, 或者 <code>merge</code> 代码, 我就把代码从代码仓库中拿到测试服务器上, 执行编译, 打包, 发布这几个我之前手动做的功能. 这个操作就能够大大提高自己的效率了, 同时也能提高团队的效率. 虽然, 现在这个操作感觉非常好, 但是在提交代码之前, 我们还要做到基本的步骤, 就是你改完的代码要能在你机器上运行, 或者能够编译通过, 满足这两个步骤之一, 才可以提交代码.</p><h3 id="搭建环境中遇到的问题"><a href="#搭建环境中遇到的问题" class="headerlink" title="搭建环境中遇到的问题"></a>搭建环境中遇到的问题</h3><p>接下来, 我给大家分享下, 这次搭建环境全过程. 还有些注意问题在这里要跟大家交代下:</p><p>在 Jenkins 启动之前, 要确保所有的构建环境已经安装. 如果构建软件没有安装, 就要安装构建软件后重新启动 Jenkins.</p><p>环境</p><ul><li>Jenkins 2.332.1(官方推荐使用 Java 11)</li><li>Windows Server 2008 R2</li><li>JDK1.8.1</li><li>Maven 3.8.4</li></ul><p>因为之前服务器上已经安装了, JDK1.8.1, maven 环境, 这里将不再细说. 下面我主要给大家说下 Jenkins 的一些事情.</p><p>虽然是 windows 操作系统, 但是我并没有安装 windows 版本的 Jenkins. 而是使用官网提供的 war 包. 下载地址: <a href="https://www.jenkins.io/download/">https://www.jenkins.io/download/</a>. 在启动 Jenkins 前, 要首先设置下环境变量 JENKINS_HOME , 设置完这个才可以运行启动 jenkins 的代码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -war jenkins.war --httpPort=9090</span><br></pre></td></tr></table></figure><h4 id="Gitlab-Webhook-配置时遇到的问题"><a href="#Gitlab-Webhook-配置时遇到的问题" class="headerlink" title="Gitlab Webhook 配置时遇到的问题"></a>Gitlab Webhook 配置时遇到的问题</h4><p><code>Jenkins</code> 启动完成后, 需要安装一些插件, 我这里直接使用 <code>Jenkins</code> 默认安装的一些插件. 安装完后, 创建用户, 登录进入 <code>Jenkins</code> 就好了. 这是首先要创建一个 <code>pipeline</code> , 首先要配置 <code>pipeline</code> 中的构建触发器, 主要配置 <code>Gitlab</code> 与 <code>Jenkins</code> 的联动, 在 <code>Gitlab</code> 中还要设置 <code>Webhook</code> , 当提交代码或者合并代码时候触发 <code>Webhook</code> 执行构建.</p><p><img src="https://user-images.githubusercontent.com/40328786/209425706-bf95a700-b495-4529-816d-c7ac3ec9ea09.png"></p><p>上图是在 Jenkins 中配置的内容, 下图是在 <code>Gitlab</code> 中的配置.</p><p><img src="https://user-images.githubusercontent.com/40328786/209425711-8ac6a0e6-6570-44e2-9ce6-78896d761269.png"></p><p>配置好 <code>Webhook</code> 后要测试下, 这里 <code>Gitlab</code> 中可以模拟 <code>Push events</code> , 这里还要做一个小小的配置, 配置<code>-Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=true</code> ,完整命令如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar -Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=<span class="literal">true</span> jenkins.war --httpPort=9090</span><br></pre></td></tr></table></figure><p>除了配置以上内容还要配置如下参数: <code>Manage Jenkins</code> → <code>Configure Global Security</code> → <code>授权策略</code>, 具体如下图:</p><p><img src="https://user-images.githubusercontent.com/40328786/209425714-1016b5b0-ba45-4da9-9be0-fa0703a71ab9.png"></p><p>以上操作完成后, 就可以使用 <code>Jenkins</code> 完成构建.</p><h4 id="执行完-pipeline-程序并没有起来"><a href="#执行完-pipeline-程序并没有起来" class="headerlink" title="执行完 pipeline 程序并没有起来"></a>执行完 pipeline 程序并没有起来</h4><p>这个配置好了, 接下来就是 <code>pipeline</code> 了, 代码如下</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line"></span><br><span class="line">    environment &#123;</span><br><span class="line">        REPOSITORY=&quot;git@sdasalksdfasl.git&quot; // 仓库地址</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    stages &#123;</span><br><span class="line">       stage(&#x27;build and run&#x27;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">          // 编译, 打包文件</span><br><span class="line">          bat &quot;&quot;&quot;</span><br><span class="line">            mvn clean package -Dmaven.test.skip=true</span><br><span class="line">            &quot;&quot;&quot;</span><br><span class="line">          // 在执行前, 先关闭之前的程序</span><br><span class="line">          bat &quot;&quot;&quot;</span><br><span class="line">            <span class="built_in">taskkill</span> /FI &quot;WindowTitle eq service1*&quot; /T /F</span><br><span class="line">            &quot;&quot;&quot;</span><br><span class="line">          // 执行自己的程序</span><br><span class="line">          bat &quot;&quot;&quot;</span><br><span class="line">            <span class="built_in">cd</span> target</span><br><span class="line">            <span class="built_in">xcopy</span> /y xxx-SNAPSHOT.jar d:\\ps-svc</span><br><span class="line">            <span class="built_in">cd</span> d:/ps-svc</span><br><span class="line">            <span class="built_in">start</span>.bat</span><br><span class="line">            &quot;&quot;&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>以上 <code>pipeline</code> 完成, 但是在使用 <code>Jenkins</code> 执行的时候也并没有出现什么问题, 但是可以观察到最后的程序可以起来, 但是当 <code>pipeline</code> 执行完后, 原来运行起来的 <code>springboot</code> 服务也关闭了. 这个问题我在网上查了下, 可以在 <code>Jenkins</code> 启动的时候配置参数<code>-Dhudson.util.ProcessTree.disable=true</code>. 这时候 <code>Jenkins</code> 全部的命令就编程了如下代码.</p><p><code>start.bat</code></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">ECHO</span> OFF</span><br><span class="line"><span class="comment">@REM start a service</span></span><br><span class="line"><span class="comment">@REM set BUILD_ID=dontkillme</span></span><br><span class="line"><span class="built_in">start</span> &quot;service1&quot; java -jar xxx-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上就是我在折腾 Jenkins 所遇到的两个问题以及解决方法, 这里分享给你. 当然我这里还是有疑问的:<br>第一，进程如何起来的？<br>第二，这里有关操作系统的知识？</p><p>Jenkins 如何实现杀掉所有 pipeline 带起来的进程的, 这里可以看看 jenkins 源码.<br>接下来, 我还会继续查资料来解决我的疑问的, 加油。</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>[1] <a href="https://ss64.com/nt/start.html">https://ss64.com/nt/start.html</a><br>[2] <a href="https://www.jenkins.io/doc/book/managing/system-properties/">https://www.jenkins.io/doc/book/managing/system-properties/</a></p>]]></content>
      
      
      <categories>
          
          <category> DEVOPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 持续集成 </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作中如何Coding</title>
      <link href="/2022/12/10/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E5%A6%82%E4%BD%95Coding/"/>
      <url>/2022/12/10/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E5%A6%82%E4%BD%95Coding/</url>
      
        <content type="html"><![CDATA[<p>当我接到一个开发任务的时候，我不是第一时间就去着手开发，我首先要干的是以下几件事情：</p><ul><li><p><strong>第一，看产品的文档，根据当前系统的功能，评估下产品的设计是否合理。</strong>不合适的地方，还要跟产品讨论，如果问题在刚开始的时候没有被发现，而是干着干着才发现这个问题，这就非常糟糕，这就需要平时经验的积累。一般是<strong>问题越早发现，解决的成本越低</strong>。</p></li><li><p><strong>第二，分析这次开发的影响范围</strong>。如果都是新功能，新建数据库表等，这就无所谓了；但如果此次开发是基于原有代码的变更，就要注意影响范围了。比方说，这次版本变更会影响到的点有 3 点，但是如果你只修改了 2 点，剩下的一点就是 Bug。这是非常可怕的事情，在实际开发的时候一定要注意这个问题。那如果你是个新人，你并不知道系统有多少个地方需要修改的时候，那么你可以问下团队中对系统了解非常透彻的人，让他帮你确定系统变更范围。但是，这种事情还是少做，<strong>自己要在没有事情的时候多去熟悉系统，熟悉业务</strong>。</p></li><li><p><strong>第三，确定影响范围后，要整理出一个文档</strong>。文档中要写明，系统变更版本，相关人员。此次变更的功能点。对于变更的功能点还要写明：</p><ul><li>变更背景（为什么这个变更？）</li><li>变更的 log，原来是什么样的，现在变更成什么样子的</li></ul></li><li><p><strong>第四，前后端合作沟通，确定完成这些需求需要多少个接口</strong>。前后端沟通的时候，最好也要注意接口定义的几个问题：</p><ul><li>返回数据格式，都返回哪些字段</li><li>请求方法，Get, Post 等</li><li>出错处理</li></ul></li><li><p><strong>第五，测试开发的功能</strong>。写测试 case, 按 case 来做相关的测试。测试的一般顺序是，自己开发的功能自己测一遍，然后团队成员测，如果没问题，发生产环境。否则，修改代码，本地测试，测试环境测试功能，如果还有问题，重复以上步骤，直至功能发线上环境。</p></li><li><p><strong>第六，提交代码时要注意的问题</strong>。两个后端或者两个前端或几个全站一起工作的时候，在本地编译没问题后才能提交代码，你不能提完代码，大家本地都运行不了了，这不行。</p></li><li><p><strong>第七，提交信息如何填写</strong>。这里推荐一篇阮一峰老师的文章《<a href="http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html">Commit message 和 Change log 编写指南</a>》。</p></li></ul><p>本次分享就到这里啦~</p>]]></content>
      
      
      <categories>
          
          <category> 团队开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 团队开发 </tag>
            
            <tag> coding </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好用的工具集合</title>
      <link href="/2022/12/07/%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E9%9B%86%E5%90%88/"/>
      <url>/2022/12/07/%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h3 id="系统学习知识"><a href="#系统学习知识" class="headerlink" title="系统学习知识"></a>系统学习知识</h3><ul><li><a href="https://www.googleguide.com/category/query-input/">google guide</a></li></ul><h3 id="优势识别"><a href="#优势识别" class="headerlink" title="优势识别"></a>优势识别</h3><ul><li><a href="https://www.apesk.com/holland/index.html">霍兰德职业兴趣量表(完整专业版)</a></li><li><a href="https://www.jianshu.com/p/de4af98bdbfc">盖洛普优势识别</a></li></ul><h3 id="软件工具"><a href="#软件工具" class="headerlink" title="软件工具"></a>软件工具</h3><ul><li><a href="https://ffmpeg.org/">音视频处理开源软件 FFmpeg</a></li><li><a href="https://sslip.io/">ip 即域名</a></li></ul><h3 id="免费-CDN-站点"><a href="#免费-CDN-站点" class="headerlink" title="免费 CDN 站点"></a>免费 CDN 站点</h3><ul><li><a href="https://cloudinary.com/">cloudinary</a></li><li><a href="https://geekflare.com/free-cdn-list/#geekflare-toc-gcore-cdn">6 FREE CDN to Speed Up and Secure Your WebSite</a></li></ul><h3 id="调研数据统计工具"><a href="#调研数据统计工具" class="headerlink" title="调研数据统计工具"></a>调研数据统计工具</h3><ul><li><a href="https://www.wjx.cn/">问卷星</a></li><li><a href="https://www.jinshuju.net/">金数据</a></li></ul><h3 id="在线修图"><a href="#在线修图" class="headerlink" title="在线修图"></a>在线修图</h3><ul><li><a href="https://ps.gaoding.com/">online ps</a></li></ul><h3 id="海报制作工具"><a href="#海报制作工具" class="headerlink" title="海报制作工具"></a>海报制作工具</h3><ul><li><a href="https://www.canva.cn/">canva</a></li></ul><h3 id="在线产品设计软件"><a href="#在线产品设计软件" class="headerlink" title="在线产品设计软件"></a>在线产品设计软件</h3><ul><li><a href="https://www.figma.com/">Figma</a></li></ul><h3 id="代码管理工具"><a href="#代码管理工具" class="headerlink" title="代码管理工具"></a>代码管理工具</h3><ul><li><p>国外</p><ul><li><a href="https://github.com/">Github</a></li><li><a href="https://about.gitlab.com/">Gitlab</a></li><li><a href="https://bitbucket.org/">Bitbucket</a></li></ul></li><li><p>国内</p><ul><li><a href="https://gitee.com/">Gitee</a></li><li><a href="https://coding.net/">腾讯云 Coding</a></li></ul></li><li><p>自建</p><ul><li><a href="https://gitbucket.github.io/">GitBucket</a></li><li><a href="https://github.com/gogs/gogs">Gogs</a></li><li><a href="https://github.com/go-gitea/gitea">Gitea</a></li></ul></li></ul><h3 id="CI-CD-工具"><a href="#CI-CD-工具" class="headerlink" title="CI/CD 工具"></a>CI/CD 工具</h3><ul><li><a href="https://www.jenkins.io/">Jenkins</a></li><li><a href="https://circleci.com/">Circle CI</a></li><li><a href="https://github.com/features/actions">Github Actions</a></li></ul><h3 id="Site-Analytics-工具"><a href="#Site-Analytics-工具" class="headerlink" title="Site Analytics 工具"></a>Site Analytics 工具</h3><ul><li><a href="https://tongji.baidu.com/web5/welcome/login">百度统计</a></li><li><a href="https://umami.is/">umami</a></li><li><a href="https://www.cloudflare.com/zh-cn/web-analytics/">cloudflare web analytics</a></li></ul><h3 id="Web-版查询代码"><a href="#Web-版查询代码" class="headerlink" title="Web 版查询代码"></a>Web 版查询代码</h3><ul><li><a href="https://github1s.com/">github1s.com</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes学习笔记</title>
      <link href="/2022/12/07/Kubernetes%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/12/07/Kubernetes%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="Kubernetes-学习资料"><a href="#Kubernetes-学习资料" class="headerlink" title="Kubernetes 学习资料"></a>Kubernetes 学习资料</h2><ul><li><a href="https://kubernetes.io/">kubernetes 官网</a></li><li><a href="https://lib.jimmysong.io/kubernetes-handbook/">Kubernetes 基础教程</a></li><li><a href="https://lib.jimmysong.io/kubernetes-hardening-guidance/">Kubernetes 加固指南</a></li><li><a href="https://github.com/kelseyhightower/kubernetes-the-hard-way">kubernetes-the-hard-way</a></li></ul><h2 id="云原生-学习资料"><a href="#云原生-学习资料" class="headerlink" title="云原生 学习资料"></a>云原生 学习资料</h2><ul><li><a href="https://lib.jimmysong.io/cloud-native-infra/">云原生基础架构</a></li><li><a href="https://github.com/rootsongjc/awesome-cloud-native">awesome-cloud-native</a></li><li><a href="https://www.cncf.io/">CNCF</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
          <category> cloud native </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 运维 </tag>
            
            <tag> 云原生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记</title>
      <link href="/2022/12/07/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/12/07/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h2><ul><li><a href="https://mp.weixin.qq.com/s/miyqsuZhC9FG_3n8pe91Aw">如何阅读一本书</a></li><li><a href="https://mp.weixin.qq.com/s/ia3FNt1ZEpoOUXLBVgegvA">TED 演讲的力量</a></li><li><a href="https://mp.weixin.qq.com/s/jSyWiZewPpZ65u2DFW1n9w">想和做</a></li><li><a href="https://mp.weixin.qq.com/s/Yzoc4QRUW1XNLvkddbRbeQ">论读书</a></li><li><a href="https://mp.weixin.qq.com/s/hWoR4aVXjaQVBShI2MF7Bg">高田·健一的信</a></li><li><a href="https://mp.weixin.qq.com/s/5m_0zDZCtzzN00JWDbg_YQ">《如何练就拍案叫绝的现场反应》学习笔记</a></li><li><a href="https://mp.weixin.qq.com/s/--frHLROAYyEEU6EkrTQ6w">三碗不过岗</a></li><li>…</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud学习笔记</title>
      <link href="/2022/12/07/SpringCloud%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/12/07/SpringCloud%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="微服务相关学习文章"><a href="#微服务相关学习文章" class="headerlink" title="微服务相关学习文章"></a>微服务相关学习文章</h2><ul><li><a href="https://microservices.io/index.html">microservices.io</a></li><li><a href="https://eventuate.io/">eventuate.io</a></li><li><a href="https://www.geeksforgeeks.org/microservices-introduction/">Microservices Introduction</a></li><li><a href="https://aws.amazon.com/microservices/">Microservices AWS</a></li><li><a href="https://www.martinfowler.com/microservices/">Microservices Guide</a></li><li><a href="https://www.ibm.com/topics/microservices">IBM-What are microservices?</a></li><li><a href="https://learn.microsoft.com/en-us/azure/service-fabric/service-fabric-overview-microservices">Microsoft-Why use a microservices approach to building applications</a></li><li><a href="https://learn.microsoft.com/en-us/devops/deliver/what-are-microservices">Microsoft-What are Microservices?</a></li><li><a href="https://www.nginx.com/blog/introduction-to-microservices/">【Nginx】introduction-to-microservices</a></li></ul><h2 id="Spring-Framework"><a href="#Spring-Framework" class="headerlink" title="Spring Framework"></a><a href="https://spring.io/projects/spring-framework">Spring Framework</a></h2><h2 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a><a href="https://spring.io/projects/spring-boot">SpringBoot</a></h2><h2 id="Spring-Cloud"><a href="#Spring-Cloud" class="headerlink" title="Spring Cloud"></a><a href="https://spring.io/projects/spring-cloud">Spring Cloud</a></h2><h2 id="Spring-Projects"><a href="#Spring-Projects" class="headerlink" title="Spring Projects"></a><a href="https://spring.io/projects">Spring Projects</a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
            <tag> Springboot </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
